I"<ul id="markdown-toc">
  <li><a href="#sparkmllib-supported-models" id="markdown-toc-sparkmllib-supported-models">spark.mllib supported models</a></li>
  <li><a href="#examples" id="markdown-toc-examples">Examples</a></li>
</ul>

<h2 id="sparkmllib-supported-models">spark.mllib supported models</h2>

<p><code>spark.mllib</code> supports model export to Predictive Model Markup Language (<a href="http://en.wikipedia.org/wiki/Predictive_Model_Markup_Language">PMML</a>).</p>

<p>The table below outlines the <code>spark.mllib</code> models that can be exported to PMML and their equivalent PMML model.</p>

<table class="table">
  <thead>
    <tr><th>spark.mllib model</th><th>PMML model</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>KMeansModel</td><td>ClusteringModel</td>
    </tr>    
    <tr>
      <td>LinearRegressionModel</td><td>RegressionModel (functionName="regression")</td>
    </tr>
    <tr>
      <td>RidgeRegressionModel</td><td>RegressionModel (functionName="regression")</td>
    </tr>
    <tr>
      <td>LassoModel</td><td>RegressionModel (functionName="regression")</td>
    </tr>
    <tr>
      <td>SVMModel</td><td>RegressionModel (functionName="classification" normalizationMethod="none")</td>
    </tr>
    <tr>
      <td>Binary LogisticRegressionModel</td><td>RegressionModel (functionName="classification" normalizationMethod="logit")</td>
    </tr>
  </tbody>
</table>

<h2 id="examples">Examples</h2>
<div class="codetabs">

<div data-lang="scala">
    <p>To export a supported <code>model</code> (see table above) to PMML, simply call <code>model.toPMML</code>.</p>

    <p>As well as exporting the PMML model to a String (<code>model.toPMML</code> as in the example above), you can export the PMML model to other formats.</p>

    <p>Refer to the <a href="api/scala/index.html#org.apache.spark.mllib.clustering.KMeans"><code>KMeans</code> Scala docs</a> and <a href="api/scala/index.html#org.apache.spark.mllib.linalg.Vectors$"><code>Vectors</code> Scala docs</a> for details on the API.</p>

    <p>Here a complete example of building a KMeansModel and print it out in PMML format:</p>
    <div class="highlight"><pre><span></span><span class="k">import</span> <span class="nn">org.apache.spark.mllib.clustering.KMeans</span>
<span class="k">import</span> <span class="nn">org.apache.spark.mllib.linalg.Vectors</span>

<span class="c1">// Load and parse the data</span>
<span class="k">val</span> <span class="n">data</span> <span class="k">=</span> <span class="n">sc</span><span class="o">.</span><span class="n">textFile</span><span class="o">(</span><span class="s">&quot;data/mllib/kmeans_data.txt&quot;</span><span class="o">)</span>
<span class="k">val</span> <span class="n">parsedData</span> <span class="k">=</span> <span class="n">data</span><span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="n">s</span> <span class="k">=&gt;</span> <span class="nc">Vectors</span><span class="o">.</span><span class="n">dense</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="o">(</span><span class="sc">&#39; &#39;</span><span class="o">).</span><span class="n">map</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">toDouble</span><span class="o">))).</span><span class="n">cache</span><span class="o">()</span>

<span class="c1">// Cluster the data into two classes using KMeans</span>
<span class="k">val</span> <span class="n">numClusters</span> <span class="k">=</span> <span class="mi">2</span>
<span class="k">val</span> <span class="n">numIterations</span> <span class="k">=</span> <span class="mi">20</span>
<span class="k">val</span> <span class="n">clusters</span> <span class="k">=</span> <span class="nc">KMeans</span><span class="o">.</span><span class="n">train</span><span class="o">(</span><span class="n">parsedData</span><span class="o">,</span> <span class="n">numClusters</span><span class="o">,</span> <span class="n">numIterations</span><span class="o">)</span>

<span class="c1">// Export to PMML to a String in PMML format</span>
<span class="n">println</span><span class="o">(</span><span class="s">s&quot;PMML Model:\n </span><span class="si">${</span><span class="n">clusters</span><span class="o">.</span><span class="n">toPMML</span><span class="si">}</span><span class="s">&quot;</span><span class="o">)</span>

<span class="c1">// Export the model to a local file in PMML format</span>
<span class="n">clusters</span><span class="o">.</span><span class="n">toPMML</span><span class="o">(</span><span class="s">&quot;/tmp/kmeans.xml&quot;</span><span class="o">)</span>

<span class="c1">// Export the model to a directory on a distributed file system in PMML format</span>
<span class="n">clusters</span><span class="o">.</span><span class="n">toPMML</span><span class="o">(</span><span class="n">sc</span><span class="o">,</span> <span class="s">&quot;/tmp/kmeans&quot;</span><span class="o">)</span>

<span class="c1">// Export the model to the OutputStream in PMML format</span>
<span class="n">clusters</span><span class="o">.</span><span class="n">toPMML</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="n">out</span><span class="o">)</span>
</pre></div>
    <div><small>Find full example code at "examples/src/main/scala/org/apache/spark/examples/mllib/PMMLModelExportExample.scala" in the Spark repo.</small></div>

    <p>For unsupported models, either you will not find a <code>.toPMML</code> method or an <code>IllegalArgumentException</code> will be thrown.</p>

  </div>

</div>
:ET
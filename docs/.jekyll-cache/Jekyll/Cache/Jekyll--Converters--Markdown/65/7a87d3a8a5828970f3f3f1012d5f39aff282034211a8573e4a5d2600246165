I"W&<p>Apache Spark is a unified analytics engine for large-scale data processing.
It provides high-level APIs in Java, Scala, Python and R,
and an optimized engine that supports general execution graphs.
It also supports a rich set of higher-level tools including <a href="sql-programming-guide.html">Spark SQL</a> for SQL and structured data processing, <a href="ml-guide.html">MLlib</a> for machine learning, <a href="graphx-programming-guide.html">GraphX</a> for graph processing, and <a href="structured-streaming-programming-guide.html">Structured Streaming</a> for incremental computation and stream processing.</p>

<h1 id="security">Security</h1>

<p>Security in Spark is OFF by default. This could mean you are vulnerable to attack by default.
Please see <a href="security.html">Spark Security</a> before downloading and running Spark.</p>

<h1 id="downloading">Downloading</h1>

<p>Get Spark from the <a href="https://spark.apache.org/downloads.html">downloads page</a> of the project website. This documentation is for Spark version 3.0.0-SNAPSHOT. Spark uses Hadoop&#8217;s client libraries for HDFS and YARN. Downloads are pre-packaged for a handful of popular Hadoop versions.
Users can also download a &#8220;Hadoop free&#8221; binary and run Spark with any Hadoop version
<a href="hadoop-provided.html">by augmenting Spark&#8217;s classpath</a>.
Scala and Java users can include Spark in their projects using its Maven coordinates and Python users can install Spark from PyPI.</p>

<p>If you&#8217;d like to build Spark from 
source, visit <a href="building-spark.html">Building Spark</a>.</p>

<p>Spark runs on both Windows and UNIX-like systems (e.g. Linux, Mac OS). It&#8217;s easy to run
locally on one machine &#8212; all you need is to have <code>java</code> installed on your system <code>PATH</code>,
or the <code>JAVA_HOME</code> environment variable pointing to a Java installation.</p>

<p>Spark runs on Java 8, Scala 2.12, Python 2.7+/3.4+ and R 3.1+.
Python 2 support is deprecated as of Spark 3.0.0.
R prior to version 3.4 support is deprecated as of Spark 3.0.0.
For the Scala API, Spark 3.0.0-SNAPSHOT
uses Scala 2.12. You will need to use a compatible Scala version
(2.12.x).</p>

<h1 id="running-the-examples-and-shell">Running the Examples and Shell</h1>

<p>Spark comes with several sample programs.  Scala, Java, Python and R examples are in the
<code>examples/src/main</code> directory. To run one of the Java or Scala sample programs, use
<code>bin/run-example &lt;class&gt; [params]</code> in the top-level Spark directory. (Behind the scenes, this
invokes the more general
<a href="submitting-applications.html"><code>spark-submit</code> script</a> for
launching applications). For example,</p>

<pre><code>./bin/run-example SparkPi 10
</code></pre>

<p>You can also run Spark interactively through a modified version of the Scala shell. This is a
great way to learn the framework.</p>

<pre><code>./bin/spark-shell --master local[2]
</code></pre>

<p>The <code>--master</code> option specifies the
<a href="submitting-applications.html#master-urls">master URL for a distributed cluster</a>, or <code>local</code> to run
locally with one thread, or <code>local[N]</code> to run locally with N threads. You should start by using
<code>local</code> for testing. For a full list of options, run Spark shell with the <code>--help</code> option.</p>

<p>Spark also provides a Python API. To run Spark interactively in a Python interpreter, use
<code>bin/pyspark</code>:</p>

<pre><code>./bin/pyspark --master local[2]
</code></pre>

<p>Example applications are also provided in Python. For example,</p>

<pre><code>./bin/spark-submit examples/src/main/python/pi.py 10
</code></pre>

<p>Spark also provides an <a href="sparkr.html">R API</a> since 1.4 (only DataFrames APIs included).
To run Spark interactively in an R interpreter, use <code>bin/sparkR</code>:</p>

<pre><code>./bin/sparkR --master local[2]
</code></pre>

<p>Example applications are also provided in R. For example,</p>

<pre><code>./bin/spark-submit examples/src/main/r/dataframe.R
</code></pre>

<h1 id="launching-on-a-cluster">Launching on a Cluster</h1>

<p>The Spark <a href="cluster-overview.html">cluster mode overview</a> explains the key concepts in running on a cluster.
Spark can run both by itself, or over several existing cluster managers. It currently provides several
options for deployment:</p>

<ul>
  <li><a href="spark-standalone.html">Standalone Deploy Mode</a>: simplest way to deploy Spark on a private cluster</li>
  <li><a href="running-on-mesos.html">Apache Mesos</a></li>
  <li><a href="running-on-yarn.html">Hadoop YARN</a></li>
  <li><a href="running-on-kubernetes.html">Kubernetes</a></li>
</ul>

<h1 id="where-to-go-from-here">Where to Go from Here</h1>

<p><strong>Programming Guides:</strong></p>

<ul>
  <li><a href="quick-start.html">Quick Start</a>: a quick introduction to the Spark API; start here!</li>
  <li><a href="rdd-programming-guide.html">RDD Programming Guide</a>: overview of Spark basics - RDDs (core but old API), accumulators, and broadcast variables</li>
  <li><a href="sql-programming-guide.html">Spark SQL, Datasets, and DataFrames</a>: processing structured data with relational queries (newer API than RDDs)</li>
  <li><a href="structured-streaming-programming-guide.html">Structured Streaming</a>: processing structured data streams with relation queries (using Datasets and DataFrames, newer API than DStreams)</li>
  <li><a href="streaming-programming-guide.html">Spark Streaming</a>: processing data streams using DStreams (old API)</li>
  <li><a href="ml-guide.html">MLlib</a>: applying machine learning algorithms</li>
  <li><a href="graphx-programming-guide.html">GraphX</a>: processing graphs</li>
</ul>

<p><strong>API Docs:</strong></p>

<ul>
  <li><a href="api/scala/index.html#org.apache.spark.package">Spark Scala API (Scaladoc)</a></li>
  <li><a href="api/java/index.html">Spark Java API (Javadoc)</a></li>
  <li><a href="api/python/index.html">Spark Python API (Sphinx)</a></li>
  <li><a href="api/R/index.html">Spark R API (Roxygen2)</a></li>
  <li><a href="api/sql/index.html">Spark SQL, Built-in Functions (MkDocs)</a></li>
</ul>

<p><strong>Deployment Guides:</strong></p>

<ul>
  <li><a href="cluster-overview.html">Cluster Overview</a>: overview of concepts and components when running on a cluster</li>
  <li><a href="submitting-applications.html">Submitting Applications</a>: packaging and deploying applications</li>
  <li>Deployment modes:
    <ul>
      <li><a href="https://github.com/amplab/spark-ec2">Amazon EC2</a>: scripts that let you launch a cluster on EC2 in about 5 minutes</li>
      <li><a href="spark-standalone.html">Standalone Deploy Mode</a>: launch a standalone cluster quickly without a third-party cluster manager</li>
      <li><a href="running-on-mesos.html">Mesos</a>: deploy a private cluster using
  <a href="https://mesos.apache.org">Apache Mesos</a></li>
      <li><a href="running-on-yarn.html">YARN</a>: deploy Spark on top of Hadoop NextGen (YARN)</li>
      <li><a href="running-on-kubernetes.html">Kubernetes</a>: deploy Spark on top of Kubernetes</li>
    </ul>
  </li>
</ul>

<p><strong>Other Documents:</strong></p>

<ul>
  <li><a href="configuration.html">Configuration</a>: customize Spark via its configuration system</li>
  <li><a href="monitoring.html">Monitoring</a>: track the behavior of your applications</li>
  <li><a href="tuning.html">Tuning Guide</a>: best practices to optimize performance and memory use</li>
  <li><a href="job-scheduling.html">Job Scheduling</a>: scheduling resources across and within Spark applications</li>
  <li><a href="security.html">Security</a>: Spark security support</li>
  <li><a href="hardware-provisioning.html">Hardware Provisioning</a>: recommendations for cluster hardware</li>
  <li>Integration with other storage systems:
    <ul>
      <li><a href="cloud-integration.html">Cloud Infrastructures</a></li>
      <li><a href="storage-openstack-swift.html">OpenStack Swift</a></li>
    </ul>
  </li>
  <li><a href="building-spark.html">Building Spark</a>: build Spark using the Maven system</li>
  <li><a href="https://spark.apache.org/contributing.html">Contributing to Spark</a></li>
  <li><a href="https://spark.apache.org/third-party-projects.html">Third Party Projects</a>: related third party Spark projects</li>
</ul>

<p><strong>External Resources:</strong></p>

<ul>
  <li><a href="https://spark.apache.org">Spark Homepage</a></li>
  <li><a href="https://spark.apache.org/community.html">Spark Community</a> resources, including local meetups</li>
  <li><a href="http://stackoverflow.com/questions/tagged/apache-spark">StackOverflow tag <code>apache-spark</code></a></li>
  <li><a href="https://spark.apache.org/mailing-lists.html">Mailing Lists</a>: ask questions about Spark here</li>
  <li><a href="http://ampcamp.berkeley.edu/">AMP Camps</a>: a series of training camps at UC Berkeley that featured talks and
exercises about Spark, Spark Streaming, Mesos, and more. <a href="http://ampcamp.berkeley.edu/6/">Videos</a>,
<a href="http://ampcamp.berkeley.edu/6/">slides</a> and <a href="http://ampcamp.berkeley.edu/6/exercises/">exercises</a> are
available online for free.</li>
  <li><a href="https://spark.apache.org/examples.html">Code Examples</a>: more are also available in the <code>examples</code> subfolder of Spark (<a href="https://github.com/apache/spark/tree/master/examples/src/main/scala/org/apache/spark/examples">Scala</a>,
 <a href="https://github.com/apache/spark/tree/master/examples/src/main/java/org/apache/spark/examples">Java</a>,
 <a href="https://github.com/apache/spark/tree/master/examples/src/main/python">Python</a>,
 <a href="https://github.com/apache/spark/tree/master/examples/src/main/r">R</a>)</li>
</ul>
:ET
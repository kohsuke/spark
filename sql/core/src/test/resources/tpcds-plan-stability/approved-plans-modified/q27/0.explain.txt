== Parsed Logical Plan ==
CTE [results]
:  +- 'SubqueryAlias results
:     +- 'Project ['i_item_id, 's_state, 'ss_quantity AS agg1#1, 'ss_list_price AS agg2#2, 'ss_coupon_amt AS agg3#3, 'ss_sales_price AS agg4#4]
:        +- 'Filter ((((('ss_sold_date_sk = 'd_date_sk) AND (('ss_sold_date_sk >= 2451545) AND ('ss_sold_date_sk <= 2451910))) AND ('ss_item_sk = 'i_item_sk)) AND (('ss_store_sk = 's_store_sk) AND ('ss_cdemo_sk = 'cd_demo_sk))) AND (((('cd_gender = F) AND ('cd_marital_status = D)) AND ('cd_education_status = Primary)) AND (('d_year = 2000) AND 's_state IN (TN,AL,SD,SD,SD,SD))))
:           +- 'Join Inner
:              :- 'Join Inner
:              :  :- 'Join Inner
:              :  :  :- 'Join Inner
:              :  :  :  :- 'UnresolvedRelation [store_sales]
:              :  :  :  +- 'UnresolvedRelation [customer_demographics]
:              :  :  +- 'UnresolvedRelation [date_dim]
:              :  +- 'UnresolvedRelation [store]
:              +- 'UnresolvedRelation [item]
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['i_item_id ASC NULLS FIRST, 's_state ASC NULLS FIRST], true
         +- 'Project ['i_item_id, 's_state, 'g_state, 'agg1, 'agg2, 'agg3, 'agg4]
            +- 'SubqueryAlias foo
               +- 'Union
                  :- 'Union
                  :  :- 'Aggregate ['i_item_id, 's_state], ['i_item_id, 's_state, 0 AS g_state#5, 'avg('agg1) AS agg1#6, 'avg('agg2) AS agg2#7, 'avg('agg3) AS agg3#8, 'avg('agg4) AS agg4#9]
                  :  :  +- 'UnresolvedRelation [results]
                  :  +- 'Aggregate ['i_item_id], ['i_item_id, null AS s_state#10, 1 AS g_state#11, 'avg('agg1) AS agg1#12, 'avg('agg2) AS agg2#13, 'avg('agg3) AS agg3#14, 'avg('agg4) AS agg4#15]
                  :     +- 'UnresolvedRelation [results]
                  +- 'Project [null AS i_item_id#16, null AS s_state#17, 1 AS g_state#18, 'avg('agg1) AS agg1#19, 'avg('agg2) AS agg2#20, 'avg('agg3) AS agg3#21, 'avg('agg4) AS agg4#22]
                     +- 'UnresolvedRelation [results]

== Analyzed Logical Plan ==
i_item_id: string, s_state: string, g_state: int, agg1: double, agg2: decimal(11,6), agg3: decimal(11,6), agg4: decimal(11,6)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#23 ASC NULLS FIRST, s_state#24 ASC NULLS FIRST], true
      +- Project [i_item_id#23, s_state#24, g_state#5, agg1#6, agg2#7, agg3#8, agg4#9]
         +- SubqueryAlias foo
            +- Union
               :- Project [i_item_id#23, s_state#24, g_state#5, agg1#6, agg2#7, agg3#8, agg4#9]
               :  +- Union
               :     :- Project [i_item_id#23, s_state#24, g_state#5, agg1#6, agg2#7, agg3#8, agg4#9]
               :     :  +- Aggregate [i_item_id#23, s_state#24], [i_item_id#23, s_state#24, 0 AS g_state#5, avg(cast(agg1#1 as bigint)) AS agg1#6, avg(agg2#2) AS agg2#7, avg(agg3#3) AS agg3#8, avg(agg4#4) AS agg4#9]
               :     :     +- SubqueryAlias results
               :     :        +- Project [i_item_id#23, s_state#24, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
               :     :           +- Filter (((((ss_sold_date_sk#29 = d_date_sk#30) AND ((ss_sold_date_sk#29 >= 2451545) AND (ss_sold_date_sk#29 <= 2451910))) AND (ss_item_sk#31 = i_item_sk#32)) AND ((ss_store_sk#33 = s_store_sk#34) AND (ss_cdemo_sk#35 = cd_demo_sk#36))) AND ((((cd_gender#37 = F) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND ((d_year#40 = 2000) AND s_state#24 IN (TN,AL,SD,SD,SD,SD))))
               :     :              +- Join Inner
               :     :                 :- Join Inner
               :     :                 :  :- Join Inner
               :     :                 :  :  :- Join Inner
               :     :                 :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
               :     :                 :  :  :  :  +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
               :     :                 :  :  :  +- SubqueryAlias spark_catalog.default.customer_demographics
               :     :                 :  :  :     +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
               :     :                 :  :  +- SubqueryAlias spark_catalog.default.date_dim
               :     :                 :  :     +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
               :     :                 :  +- SubqueryAlias spark_catalog.default.store
               :     :                 :     +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
               :     :                 +- SubqueryAlias spark_catalog.default.item
               :     :                    +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet
               :     +- Project [i_item_id#23 AS i_item_id#134, s_state#135 AS s_state#136, g_state#11 AS g_state#137, agg1#12 AS agg1#138, agg2#13 AS agg2#139, agg3#14 AS agg3#140, agg4#15 AS agg4#141]
               :        +- Project [i_item_id#23, cast(s_state#10 as string) AS s_state#135, g_state#11, agg1#12, agg2#13, agg3#14, agg4#15]
               :           +- Aggregate [i_item_id#23], [i_item_id#23, null AS s_state#10, 1 AS g_state#11, avg(cast(agg1#1 as bigint)) AS agg1#12, avg(agg2#2) AS agg2#13, avg(agg3#3) AS agg3#14, avg(agg4#4) AS agg4#15]
               :              +- SubqueryAlias results
               :                 +- Project [i_item_id#23, s_state#24, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
               :                    +- Filter (((((ss_sold_date_sk#29 = d_date_sk#30) AND ((ss_sold_date_sk#29 >= 2451545) AND (ss_sold_date_sk#29 <= 2451910))) AND (ss_item_sk#31 = i_item_sk#32)) AND ((ss_store_sk#33 = s_store_sk#34) AND (ss_cdemo_sk#35 = cd_demo_sk#36))) AND ((((cd_gender#37 = F) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND ((d_year#40 = 2000) AND s_state#24 IN (TN,AL,SD,SD,SD,SD))))
               :                       +- Join Inner
               :                          :- Join Inner
               :                          :  :- Join Inner
               :                          :  :  :- Join Inner
               :                          :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
               :                          :  :  :  :  +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
               :                          :  :  :  +- SubqueryAlias spark_catalog.default.customer_demographics
               :                          :  :  :     +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
               :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
               :                          :  :     +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
               :                          :  +- SubqueryAlias spark_catalog.default.store
               :                          :     +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
               :                          +- SubqueryAlias spark_catalog.default.item
               :                             +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet
               +- Project [cast(i_item_id#16 as string) AS i_item_id#142, cast(s_state#17 as string) AS s_state#143, g_state#18, agg1#19, agg2#20, agg3#21, agg4#22]
                  +- Aggregate [null AS i_item_id#16, null AS s_state#17, 1 AS g_state#18, avg(cast(agg1#1 as bigint)) AS agg1#19, avg(agg2#2) AS agg2#20, avg(agg3#3) AS agg3#21, avg(agg4#4) AS agg4#22]
                     +- SubqueryAlias results
                        +- Project [i_item_id#23, s_state#24, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
                           +- Filter (((((ss_sold_date_sk#29 = d_date_sk#30) AND ((ss_sold_date_sk#29 >= 2451545) AND (ss_sold_date_sk#29 <= 2451910))) AND (ss_item_sk#31 = i_item_sk#32)) AND ((ss_store_sk#33 = s_store_sk#34) AND (ss_cdemo_sk#35 = cd_demo_sk#36))) AND ((((cd_gender#37 = F) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND ((d_year#40 = 2000) AND s_state#24 IN (TN,AL,SD,SD,SD,SD))))
                              +- Join Inner
                                 :- Join Inner
                                 :  :- Join Inner
                                 :  :  :- Join Inner
                                 :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :  :  :  :  +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
                                 :  :  :  +- SubqueryAlias spark_catalog.default.customer_demographics
                                 :  :  :     +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
                                 :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :  :     +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
                                 :  +- SubqueryAlias spark_catalog.default.store
                                 :     +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
                                 +- SubqueryAlias spark_catalog.default.item
                                    +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#23 ASC NULLS FIRST, s_state#24 ASC NULLS FIRST], true
      +- Union
         :- Aggregate [i_item_id#23, s_state#24], [i_item_id#23, s_state#24, 0 AS g_state#5, avg(cast(agg1#1 as bigint)) AS agg1#6, cast((avg(UnscaledValue(agg2#2)) / 100.0) as decimal(11,6)) AS agg2#7, cast((avg(UnscaledValue(agg3#3)) / 100.0) as decimal(11,6)) AS agg3#8, cast((avg(UnscaledValue(agg4#4)) / 100.0) as decimal(11,6)) AS agg4#9]
         :  +- Project [i_item_id#23, s_state#24, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
         :     +- Join Inner, (ss_item_sk#31 = i_item_sk#32)
         :        :- Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27, s_state#24]
         :        :  +- Join Inner, (ss_store_sk#33 = s_store_sk#34)
         :        :     :- Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)
         :        :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :     :  +- Join Inner, (ss_cdemo_sk#35 = cd_demo_sk#36)
         :        :     :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :     :     :  +- Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
         :        :     :     :     :     +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
         :        :     :     :     +- Project [cd_demo_sk#36]
         :        :     :     :        +- Filter ((((((isnotnull(cd_gender#37) AND isnotnull(cd_marital_status#38)) AND isnotnull(cd_education_status#39)) AND (cd_gender#37 = F)) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND isnotnull(cd_demo_sk#36))
         :        :     :     :           +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
         :        :     :     +- Project [d_date_sk#30]
         :        :     :        +- Filter ((((isnotnull(d_year#40) AND (d_year#40 = 2000)) AND (d_date_sk#30 >= 2451545)) AND (d_date_sk#30 <= 2451910)) AND isnotnull(d_date_sk#30))
         :        :     :           +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
         :        :     +- Project [s_store_sk#34, s_state#24]
         :        :        +- Filter (s_state#24 IN (TN,AL,SD) AND isnotnull(s_store_sk#34))
         :        :           +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
         :        +- Project [i_item_sk#32, i_item_id#23]
         :           +- Filter isnotnull(i_item_sk#32)
         :              +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet
         :- Aggregate [i_item_id#23], [i_item_id#23, null AS s_state#136, 1 AS g_state#137, avg(cast(agg1#1 as bigint)) AS agg1#138, cast((avg(UnscaledValue(agg2#2)) / 100.0) as decimal(11,6)) AS agg2#139, cast((avg(UnscaledValue(agg3#3)) / 100.0) as decimal(11,6)) AS agg3#140, cast((avg(UnscaledValue(agg4#4)) / 100.0) as decimal(11,6)) AS agg4#141]
         :  +- Project [i_item_id#23, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
         :     +- Join Inner, (ss_item_sk#31 = i_item_sk#32)
         :        :- Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :  +- Join Inner, (ss_store_sk#33 = s_store_sk#34)
         :        :     :- Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)
         :        :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :     :  +- Join Inner, (ss_cdemo_sk#35 = cd_demo_sk#36)
         :        :     :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
         :        :     :     :     :  +- Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
         :        :     :     :     :     +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
         :        :     :     :     +- Project [cd_demo_sk#36]
         :        :     :     :        +- Filter ((((((isnotnull(cd_gender#37) AND isnotnull(cd_marital_status#38)) AND isnotnull(cd_education_status#39)) AND (cd_gender#37 = F)) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND isnotnull(cd_demo_sk#36))
         :        :     :     :           +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
         :        :     :     +- Project [d_date_sk#30]
         :        :     :        +- Filter ((((isnotnull(d_year#40) AND (d_year#40 = 2000)) AND (d_date_sk#30 >= 2451545)) AND (d_date_sk#30 <= 2451910)) AND isnotnull(d_date_sk#30))
         :        :     :           +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
         :        :     +- Project [s_store_sk#34]
         :        :        +- Filter (s_state#24 IN (TN,AL,SD) AND isnotnull(s_store_sk#34))
         :        :           +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
         :        +- Project [i_item_sk#32, i_item_id#23]
         :           +- Filter isnotnull(i_item_sk#32)
         :              +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet
         +- Aggregate [null AS i_item_id#142, null AS s_state#143, 1 AS g_state#18, avg(cast(agg1#1 as bigint)) AS agg1#19, cast((avg(UnscaledValue(agg2#2)) / 100.0) as decimal(11,6)) AS agg2#20, cast((avg(UnscaledValue(agg3#3)) / 100.0) as decimal(11,6)) AS agg3#21, cast((avg(UnscaledValue(agg4#4)) / 100.0) as decimal(11,6)) AS agg4#22]
            +- Project [ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
               +- Join Inner, (ss_item_sk#31 = i_item_sk#32)
                  :- Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :  +- Join Inner, (ss_store_sk#33 = s_store_sk#34)
                  :     :- Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)
                  :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :     :  +- Join Inner, (ss_cdemo_sk#35 = cd_demo_sk#36)
                  :     :     :     :- Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :     :     :  +- Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
                  :     :     :     :     +- Relation[ss_sold_date_sk#29,ss_sold_time_sk#41,ss_item_sk#31,ss_customer_sk#42,ss_cdemo_sk#35,ss_hdemo_sk#43,ss_addr_sk#44,ss_store_sk#33,ss_promo_sk#45,ss_ticket_number#46,ss_quantity#25,ss_wholesale_cost#47,ss_list_price#26,ss_sales_price#28,ss_ext_discount_amt#48,ss_ext_sales_price#49,ss_ext_wholesale_cost#50,ss_ext_list_price#51,ss_ext_tax#52,ss_coupon_amt#27,ss_net_paid#53,ss_net_paid_inc_tax#54,ss_net_profit#55] parquet
                  :     :     :     +- Project [cd_demo_sk#36]
                  :     :     :        +- Filter ((((((isnotnull(cd_gender#37) AND isnotnull(cd_marital_status#38)) AND isnotnull(cd_education_status#39)) AND (cd_gender#37 = F)) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND isnotnull(cd_demo_sk#36))
                  :     :     :           +- Relation[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet
                  :     :     +- Project [d_date_sk#30]
                  :     :        +- Filter ((((isnotnull(d_year#40) AND (d_year#40 = 2000)) AND (d_date_sk#30 >= 2451545)) AND (d_date_sk#30 <= 2451910)) AND isnotnull(d_date_sk#30))
                  :     :           +- Relation[d_date_sk#30,d_date_id#61,d_date#62,d_month_seq#63,d_week_seq#64,d_quarter_seq#65,d_year#40,d_dow#66,d_moy#67,d_dom#68,d_qoy#69,d_fy_year#70,d_fy_quarter_seq#71,d_fy_week_seq#72,d_day_name#73,d_quarter_name#74,d_holiday#75,d_weekend#76,d_following_holiday#77,d_first_dom#78,d_last_dom#79,d_same_day_ly#80,d_same_day_lq#81,d_current_day#82,d_current_week#83,d_current_month#84,d_current_quarter#85,d_current_year#86] parquet
                  :     +- Project [s_store_sk#34]
                  :        +- Filter (s_state#24 IN (TN,AL,SD) AND isnotnull(s_store_sk#34))
                  :           +- Relation[s_store_sk#34,s_store_id#87,s_rec_start_date#88,s_rec_end_date#89,s_closed_date_sk#90,s_store_name#91,s_number_employees#92,s_floor_space#93,s_hours#94,s_manager#95,s_market_id#96,s_geography_class#97,s_market_desc#98,s_market_manager#99,s_division_id#100,s_division_name#101,s_company_id#102,s_company_name#103,s_street_number#104,s_street_name#105,s_street_type#106,s_suite_number#107,s_city#108,s_county#109,s_state#24,s_zip#110,s_country#111,s_gmt_offset#112,s_tax_percentage#113] parquet
                  +- Project [i_item_sk#32]
                     +- Filter isnotnull(i_item_sk#32)
                        +- Relation[i_item_sk#32,i_item_id#23,i_rec_start_date#114,i_rec_end_date#115,i_item_desc#116,i_current_price#117,i_wholesale_cost#118,i_brand_id#119,i_brand#120,i_class_id#121,i_class#122,i_category_id#123,i_category#124,i_manufact_id#125,i_manufact#126,i_size#127,i_formulation#128,i_color#129,i_units#130,i_container#131,i_manager_id#132,i_product_name#133] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_item_id#23 ASC NULLS FIRST,s_state#24 ASC NULLS FIRST], output=[i_item_id#23,s_state#24,g_state#5,agg1#6,agg2#7,agg3#8,agg4#9])
+- Union
   :- *(6) HashAggregate(keys=[i_item_id#23, s_state#24], functions=[avg(cast(agg1#1 as bigint)), avg(UnscaledValue(agg2#2)), avg(UnscaledValue(agg3#3)), avg(UnscaledValue(agg4#4))], output=[i_item_id#23, s_state#24, g_state#5, agg1#6, agg2#7, agg3#8, agg4#9])
   :  +- Exchange hashpartitioning(i_item_id#23, s_state#24, 5), true, [id=#144]
   :     +- *(5) HashAggregate(keys=[i_item_id#23, s_state#24], functions=[partial_avg(cast(agg1#1 as bigint)), partial_avg(UnscaledValue(agg2#2)), partial_avg(UnscaledValue(agg3#3)), partial_avg(UnscaledValue(agg4#4))], output=[i_item_id#23, s_state#24, sum#145, count#146, sum#147, count#148, sum#149, count#150, sum#151, count#152])
   :        +- *(5) Project [i_item_id#23, s_state#24, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
   :           +- *(5) BroadcastHashJoin [ss_item_sk#31], [i_item_sk#32], Inner, BuildRight
   :              :- *(5) Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27, s_state#24]
   :              :  +- *(5) BroadcastHashJoin [ss_store_sk#33], [s_store_sk#34], Inner, BuildRight
   :              :     :- *(5) Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight
   :              :     :     :- *(5) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#35], [cd_demo_sk#36], Inner, BuildRight
   :              :     :     :     :- *(5) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :     :     :  +- *(5) Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
   :              :     :     :     :     +- *(5) ColumnarToRow
   :              :     :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#29,ss_item_sk#31,ss_cdemo_sk#35,ss_store_sk#33,ss_quantity#25,ss_list_price#26,ss_sales_price#28,ss_coupon_amt#27] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#29), (ss_sold_date_sk#29 >= 2451545), (ss_sold_date_sk#29 <= ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), GreaterThanOrEqual(ss_sold_date_sk,2451545), LessThanOrEqual(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
   :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#153]
   :              :     :     :        +- *(1) Project [cd_demo_sk#36]
   :              :     :     :           +- *(1) Filter ((((((isnotnull(cd_gender#37) AND isnotnull(cd_marital_status#38)) AND isnotnull(cd_education_status#39)) AND (cd_gender#37 = F)) AND (cd_marital_status#38 = D)) AND (cd_education_status#39 = Primary)) AND isnotnull(cd_demo_sk#36))
   :              :     :     :              +- *(1) ColumnarToRow
   :              :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#36,cd_gender#37,cd_marital_status#38,cd_education_status#39] Batched: true, DataFilters: [isnotnull(cd_gender#37), isnotnull(cd_marital_status#38), isnotnull(cd_education_status#154..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
   :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#155]
   :              :     :        +- *(2) Project [d_date_sk#30]
   :              :     :           +- *(2) Filter ((((isnotnull(d_year#40) AND (d_year#40 = 2000)) AND (d_date_sk#30 >= 2451545)) AND (d_date_sk#30 <= 2451910)) AND isnotnull(d_date_sk#30))
   :              :     :              +- *(2) ColumnarToRow
   :              :     :                 +- FileScan parquet default.date_dim[d_date_sk#30,d_year#40] Batched: true, DataFilters: [isnotnull(d_year#40), (d_year#40 = 2000), (d_date_sk#30 >= 2451545), (d_date_sk#30 <..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), GreaterThanOrEqual(d_date_sk,2451545), LessThanOrEqual(..., ReadSchema: struct<d_date_sk:int,d_year:int>
   :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#156]
   :              :        +- *(3) Project [s_store_sk#34, s_state#24]
   :              :           +- *(3) Filter (s_state#24 IN (TN,AL,SD) AND isnotnull(s_store_sk#34))
   :              :              +- *(3) ColumnarToRow
   :              :                 +- FileScan parquet default.store[s_store_sk#34,s_state#24] Batched: true, DataFilters: [s_state#24 IN (TN,AL,SD), isnotnull(s_store_sk#34)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(s_state, [TN,AL,SD]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#157]
   :                 +- *(4) Project [i_item_sk#32, i_item_id#23]
   :                    +- *(4) Filter isnotnull(i_item_sk#32)
   :                       +- *(4) ColumnarToRow
   :                          +- FileScan parquet default.item[i_item_sk#32,i_item_id#23] Batched: true, DataFilters: [isnotnull(i_item_sk#32)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
   :- *(12) HashAggregate(keys=[i_item_id#23], functions=[avg(cast(agg1#1 as bigint)), avg(UnscaledValue(agg2#2)), avg(UnscaledValue(agg3#3)), avg(UnscaledValue(agg4#4))], output=[i_item_id#23, s_state#136, g_state#137, agg1#138, agg2#139, agg3#140, agg4#141])
   :  +- Exchange hashpartitioning(i_item_id#23, 5), true, [id=#158]
   :     +- *(11) HashAggregate(keys=[i_item_id#23], functions=[partial_avg(cast(agg1#1 as bigint)), partial_avg(UnscaledValue(agg2#2)), partial_avg(UnscaledValue(agg3#3)), partial_avg(UnscaledValue(agg4#4))], output=[i_item_id#23, sum#159, count#160, sum#161, count#162, sum#163, count#164, sum#165, count#166])
   :        +- *(11) Project [i_item_id#23, ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
   :           +- *(11) BroadcastHashJoin [ss_item_sk#31], [i_item_sk#32], Inner, BuildRight
   :              :- *(11) Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :  +- *(11) BroadcastHashJoin [ss_store_sk#33], [s_store_sk#34], Inner, BuildRight
   :              :     :- *(11) Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :  +- *(11) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight
   :              :     :     :- *(11) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :     :  +- *(11) BroadcastHashJoin [ss_cdemo_sk#35], [cd_demo_sk#36], Inner, BuildRight
   :              :     :     :     :- *(11) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
   :              :     :     :     :  +- *(11) Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
   :              :     :     :     :     +- *(11) ColumnarToRow
   :              :     :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#29,ss_item_sk#31,ss_cdemo_sk#35,ss_store_sk#33,ss_quantity#25,ss_list_price#26,ss_sales_price#28,ss_coupon_amt#27] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#29), (ss_sold_date_sk#29 >= 2451545), (ss_sold_date_sk#29 <= ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), GreaterThanOrEqual(ss_sold_date_sk,2451545), LessThanOrEqual(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
   :              :     :     :     +- ReusedExchange [cd_demo_sk#36], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#153]
   :              :     :     +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#155]
   :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#167]
   :              :        +- *(9) Project [s_store_sk#34]
   :              :           +- *(9) Filter (s_state#24 IN (TN,AL,SD) AND isnotnull(s_store_sk#34))
   :              :              +- *(9) ColumnarToRow
   :              :                 +- FileScan parquet default.store[s_store_sk#34,s_state#24] Batched: true, DataFilters: [s_state#24 IN (TN,AL,SD), isnotnull(s_store_sk#34)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(s_state, [TN,AL,SD]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
   :              +- ReusedExchange [i_item_sk#32, i_item_id#23], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#157]
   +- *(18) HashAggregate(keys=[], functions=[avg(cast(agg1#1 as bigint)), avg(UnscaledValue(agg2#2)), avg(UnscaledValue(agg3#3)), avg(UnscaledValue(agg4#4))], output=[i_item_id#142, s_state#143, g_state#18, agg1#19, agg2#20, agg3#21, agg4#22])
      +- Exchange SinglePartition, true, [id=#168]
         +- *(17) HashAggregate(keys=[], functions=[partial_avg(cast(agg1#1 as bigint)), partial_avg(UnscaledValue(agg2#2)), partial_avg(UnscaledValue(agg3#3)), partial_avg(UnscaledValue(agg4#4))], output=[sum#169, count#170, sum#171, count#172, sum#173, count#174, sum#175, count#176])
            +- *(17) Project [ss_quantity#25 AS agg1#1, ss_list_price#26 AS agg2#2, ss_coupon_amt#27 AS agg3#3, ss_sales_price#28 AS agg4#4]
               +- *(17) BroadcastHashJoin [ss_item_sk#31], [i_item_sk#32], Inner, BuildRight
                  :- *(17) Project [ss_item_sk#31, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :  +- *(17) BroadcastHashJoin [ss_store_sk#33], [s_store_sk#34], Inner, BuildRight
                  :     :- *(17) Project [ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :  +- *(17) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight
                  :     :     :- *(17) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :     :  +- *(17) BroadcastHashJoin [ss_cdemo_sk#35], [cd_demo_sk#36], Inner, BuildRight
                  :     :     :     :- *(17) Project [ss_sold_date_sk#29, ss_item_sk#31, ss_cdemo_sk#35, ss_store_sk#33, ss_quantity#25, ss_list_price#26, ss_sales_price#28, ss_coupon_amt#27]
                  :     :     :     :  +- *(17) Filter (((((isnotnull(ss_sold_date_sk#29) AND (ss_sold_date_sk#29 >= 2451545)) AND (ss_sold_date_sk#29 <= 2451910)) AND isnotnull(ss_cdemo_sk#35)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_item_sk#31))
                  :     :     :     :     +- *(17) ColumnarToRow
                  :     :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#29,ss_item_sk#31,ss_cdemo_sk#35,ss_store_sk#33,ss_quantity#25,ss_list_price#26,ss_sales_price#28,ss_coupon_amt#27] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#29), (ss_sold_date_sk#29 >= 2451545), (ss_sold_date_sk#29 <= ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), GreaterThanOrEqual(ss_sold_date_sk,2451545), LessThanOrEqual(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
                  :     :     :     +- ReusedExchange [cd_demo_sk#36], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#153]
                  :     :     +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#155]
                  :     +- ReusedExchange [s_store_sk#34], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#167]
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#177]
                     +- *(16) Project [i_item_sk#32]
                        +- *(16) Filter isnotnull(i_item_sk#32)
                           +- *(16) ColumnarToRow
                              +- FileScan parquet default.item[i_item_sk#32] Batched: true, DataFilters: [isnotnull(i_item_sk#32)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int>

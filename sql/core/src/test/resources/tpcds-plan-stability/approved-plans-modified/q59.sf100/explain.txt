== Parsed Logical Plan ==
CTE [wss]
:  +- 'SubqueryAlias wss
:     +- 'Aggregate ['d_week_seq, 'ss_store_sk], ['d_week_seq, 'ss_store_sk, 'sum(CASE WHEN ('d_day_name = Sunday) THEN 'ss_sales_price ELSE null END) AS sun_sales#1, 'sum(CASE WHEN ('d_day_name = Monday) THEN 'ss_sales_price ELSE null END) AS mon_sales#2, 'sum(CASE WHEN ('d_day_name = Tuesday) THEN 'ss_sales_price ELSE null END) AS tue_sales#3, 'sum(CASE WHEN ('d_day_name = Wednesday) THEN 'ss_sales_price ELSE null END) AS wed_sales#4, 'sum(CASE WHEN ('d_day_name = Thursday) THEN 'ss_sales_price ELSE null END) AS thu_sales#5, 'sum(CASE WHEN ('d_day_name = Friday) THEN 'ss_sales_price ELSE null END) AS fri_sales#6, 'sum(CASE WHEN ('d_day_name = Saturday) THEN 'ss_sales_price ELSE null END) AS sat_sales#7]
:        +- 'Filter ('d_date_sk = 'ss_sold_date_sk)
:           +- 'Join Inner
:              :- 'UnresolvedRelation [store_sales]
:              +- 'UnresolvedRelation [date_dim]
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['s_store_name1 ASC NULLS FIRST, 's_store_id1 ASC NULLS FIRST, 'd_week_seq1 ASC NULLS FIRST], true
         +- 'Project ['s_store_name1, 's_store_id1, 'd_week_seq1, unresolvedalias(('sun_sales1 / 'sun_sales2), None), unresolvedalias(('mon_sales1 / 'mon_sales2), None), unresolvedalias(('tue_sales1 / 'tue_sales1), None), unresolvedalias(('wed_sales1 / 'wed_sales2), None), unresolvedalias(('thu_sales1 / 'thu_sales2), None), unresolvedalias(('fri_sales1 / 'fri_sales2), None), unresolvedalias(('sat_sales1 / 'sat_sales2), None)]
            +- 'Filter (('s_store_id1 = 's_store_id2) AND ('d_week_seq1 = ('d_week_seq2 - 52)))
               +- 'Join Inner
                  :- 'SubqueryAlias y
                  :  +- 'Project ['s_store_name AS s_store_name1#8, 'wss.d_week_seq AS d_week_seq1#9, 's_store_id AS s_store_id1#10, 'sun_sales AS sun_sales1#11, 'mon_sales AS mon_sales1#12, 'tue_sales AS tue_sales1#13, 'wed_sales AS wed_sales1#14, 'thu_sales AS thu_sales1#15, 'fri_sales AS fri_sales1#16, 'sat_sales AS sat_sales1#17]
                  :     +- 'Filter ((('d.d_week_seq = 'wss.d_week_seq) AND ('ss_store_sk = 's_store_sk)) AND (('d_month_seq >= 1185) AND ('d_month_seq <= (1185 + 11))))
                  :        +- 'Join Inner
                  :           :- 'Join Inner
                  :           :  :- 'UnresolvedRelation [wss]
                  :           :  +- 'UnresolvedRelation [store]
                  :           +- 'SubqueryAlias d
                  :              +- 'UnresolvedRelation [date_dim]
                  +- 'SubqueryAlias x
                     +- 'Project ['s_store_name AS s_store_name2#18, 'wss.d_week_seq AS d_week_seq2#19, 's_store_id AS s_store_id2#20, 'sun_sales AS sun_sales2#21, 'mon_sales AS mon_sales2#22, 'tue_sales AS tue_sales2#23, 'wed_sales AS wed_sales2#24, 'thu_sales AS thu_sales2#25, 'fri_sales AS fri_sales2#26, 'sat_sales AS sat_sales2#27]
                        +- 'Filter ((('d.d_week_seq = 'wss.d_week_seq) AND ('ss_store_sk = 's_store_sk)) AND (('d_month_seq >= (1185 + 12)) AND ('d_month_seq <= (1185 + 23))))
                           +- 'Join Inner
                              :- 'Join Inner
                              :  :- 'UnresolvedRelation [wss]
                              :  +- 'UnresolvedRelation [store]
                              +- 'SubqueryAlias d
                                 +- 'UnresolvedRelation [date_dim]

== Analyzed Logical Plan ==
s_store_name1: string, s_store_id1: string, d_week_seq1: int, (sun_sales1 / sun_sales2): decimal(37,20), (mon_sales1 / mon_sales2): decimal(37,20), (tue_sales1 / tue_sales1): decimal(37,20), (wed_sales1 / wed_sales2): decimal(37,20), (thu_sales1 / thu_sales2): decimal(37,20), (fri_sales1 / fri_sales2): decimal(37,20), (sat_sales1 / sat_sales2): decimal(37,20)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [s_store_name1#8 ASC NULLS FIRST, s_store_id1#10 ASC NULLS FIRST, d_week_seq1#9 ASC NULLS FIRST], true
      +- Project [s_store_name1#8, s_store_id1#10, d_week_seq1#9, CheckOverflow((promote_precision(cast(sun_sales1#11 as decimal(17,2))) / promote_precision(cast(sun_sales2#21 as decimal(17,2)))), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#28, CheckOverflow((promote_precision(cast(mon_sales1#12 as decimal(17,2))) / promote_precision(cast(mon_sales2#22 as decimal(17,2)))), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#29, CheckOverflow((promote_precision(cast(tue_sales1#13 as decimal(17,2))) / promote_precision(cast(tue_sales1#13 as decimal(17,2)))), DecimalType(37,20), true) AS (tue_sales1 / tue_sales1)#30, CheckOverflow((promote_precision(cast(wed_sales1#14 as decimal(17,2))) / promote_precision(cast(wed_sales2#24 as decimal(17,2)))), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#31, CheckOverflow((promote_precision(cast(thu_sales1#15 as decimal(17,2))) / promote_precision(cast(thu_sales2#25 as decimal(17,2)))), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#32, CheckOverflow((promote_precision(cast(fri_sales1#16 as decimal(17,2))) / promote_precision(cast(fri_sales2#26 as decimal(17,2)))), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#33, CheckOverflow((promote_precision(cast(sat_sales1#17 as decimal(17,2))) / promote_precision(cast(sat_sales2#27 as decimal(17,2)))), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#34]
         +- Filter ((s_store_id1#10 = s_store_id2#20) AND (d_week_seq1#9 = (d_week_seq2#19 - 52)))
            +- Join Inner
               :- SubqueryAlias y
               :  +- Project [s_store_name#35 AS s_store_name1#8, d_week_seq#36 AS d_week_seq1#9, s_store_id#37 AS s_store_id1#10, sun_sales#1 AS sun_sales1#11, mon_sales#2 AS mon_sales1#12, tue_sales#3 AS tue_sales1#13, wed_sales#4 AS wed_sales1#14, thu_sales#5 AS thu_sales1#15, fri_sales#6 AS fri_sales1#16, sat_sales#7 AS sat_sales1#17]
               :     +- Filter (((d_week_seq#38 = d_week_seq#36) AND (ss_store_sk#39 = s_store_sk#40)) AND ((d_month_seq#41 >= 1185) AND (d_month_seq#41 <= (1185 + 11))))
               :        +- Join Inner
               :           :- Join Inner
               :           :  :- SubqueryAlias wss
               :           :  :  +- Aggregate [d_week_seq#36, ss_store_sk#39], [d_week_seq#36, ss_store_sk#39, sum(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS sun_sales#1, sum(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS mon_sales#2, sum(CASE WHEN (d_day_name#42 = Tuesday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS tue_sales#3, sum(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS wed_sales#4, sum(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS thu_sales#5, sum(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS fri_sales#6, sum(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS sat_sales#7]
               :           :  :     +- Filter (d_date_sk#44 = ss_sold_date_sk#45)
               :           :  :        +- Join Inner
               :           :  :           :- SubqueryAlias spark_catalog.default.store_sales
               :           :  :           :  +- Relation[ss_sold_date_sk#45,ss_sold_time_sk#46,ss_item_sk#47,ss_customer_sk#48,ss_cdemo_sk#49,ss_hdemo_sk#50,ss_addr_sk#51,ss_store_sk#39,ss_promo_sk#52,ss_ticket_number#53,ss_quantity#54,ss_wholesale_cost#55,ss_list_price#56,ss_sales_price#43,ss_ext_discount_amt#57,ss_ext_sales_price#58,ss_ext_wholesale_cost#59,ss_ext_list_price#60,ss_ext_tax#61,ss_coupon_amt#62,ss_net_paid#63,ss_net_paid_inc_tax#64,ss_net_profit#65] parquet
               :           :  :           +- SubqueryAlias spark_catalog.default.date_dim
               :           :  :              +- Relation[d_date_sk#44,d_date_id#66,d_date#67,d_month_seq#68,d_week_seq#36,d_quarter_seq#69,d_year#70,d_dow#71,d_moy#72,d_dom#73,d_qoy#74,d_fy_year#75,d_fy_quarter_seq#76,d_fy_week_seq#77,d_day_name#42,d_quarter_name#78,d_holiday#79,d_weekend#80,d_following_holiday#81,d_first_dom#82,d_last_dom#83,d_same_day_ly#84,d_same_day_lq#85,d_current_day#86,... 4 more fields] parquet
               :           :  +- SubqueryAlias spark_catalog.default.store
               :           :     +- Relation[s_store_sk#40,s_store_id#37,s_rec_start_date#87,s_rec_end_date#88,s_closed_date_sk#89,s_store_name#35,s_number_employees#90,s_floor_space#91,s_hours#92,s_manager#93,s_market_id#94,s_geography_class#95,s_market_desc#96,s_market_manager#97,s_division_id#98,s_division_name#99,s_company_id#100,s_company_name#101,s_street_number#102,s_street_name#103,s_street_type#104,s_suite_number#105,s_city#106,s_county#107,... 5 more fields] parquet
               :           +- SubqueryAlias d
               :              +- SubqueryAlias spark_catalog.default.date_dim
               :                 +- Relation[d_date_sk#108,d_date_id#109,d_date#110,d_month_seq#41,d_week_seq#38,d_quarter_seq#111,d_year#112,d_dow#113,d_moy#114,d_dom#115,d_qoy#116,d_fy_year#117,d_fy_quarter_seq#118,d_fy_week_seq#119,d_day_name#120,d_quarter_name#121,d_holiday#122,d_weekend#123,d_following_holiday#124,d_first_dom#125,d_last_dom#126,d_same_day_ly#127,d_same_day_lq#128,d_current_day#129,... 4 more fields] parquet
               +- SubqueryAlias x
                  +- Project [s_store_name#35 AS s_store_name2#18, d_week_seq#36 AS d_week_seq2#19, s_store_id#37 AS s_store_id2#20, sun_sales#1 AS sun_sales2#21, mon_sales#2 AS mon_sales2#22, tue_sales#3 AS tue_sales2#23, wed_sales#4 AS wed_sales2#24, thu_sales#5 AS thu_sales2#25, fri_sales#6 AS fri_sales2#26, sat_sales#7 AS sat_sales2#27]
                     +- Filter (((d_week_seq#130 = d_week_seq#36) AND (ss_store_sk#39 = s_store_sk#40)) AND ((d_month_seq#131 >= (1185 + 12)) AND (d_month_seq#131 <= (1185 + 23))))
                        +- Join Inner
                           :- Join Inner
                           :  :- SubqueryAlias wss
                           :  :  +- Aggregate [d_week_seq#36, ss_store_sk#39], [d_week_seq#36, ss_store_sk#39, sum(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS sun_sales#1, sum(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS mon_sales#2, sum(CASE WHEN (d_day_name#42 = Tuesday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS tue_sales#3, sum(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS wed_sales#4, sum(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS thu_sales#5, sum(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS fri_sales#6, sum(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE cast(null as decimal(7,2)) END) AS sat_sales#7]
                           :  :     +- Filter (d_date_sk#44 = ss_sold_date_sk#45)
                           :  :        +- Join Inner
                           :  :           :- SubqueryAlias spark_catalog.default.store_sales
                           :  :           :  +- Relation[ss_sold_date_sk#45,ss_sold_time_sk#46,ss_item_sk#47,ss_customer_sk#48,ss_cdemo_sk#49,ss_hdemo_sk#50,ss_addr_sk#51,ss_store_sk#39,ss_promo_sk#52,ss_ticket_number#53,ss_quantity#54,ss_wholesale_cost#55,ss_list_price#56,ss_sales_price#43,ss_ext_discount_amt#57,ss_ext_sales_price#58,ss_ext_wholesale_cost#59,ss_ext_list_price#60,ss_ext_tax#61,ss_coupon_amt#62,ss_net_paid#63,ss_net_paid_inc_tax#64,ss_net_profit#65] parquet
                           :  :           +- SubqueryAlias spark_catalog.default.date_dim
                           :  :              +- Relation[d_date_sk#44,d_date_id#66,d_date#67,d_month_seq#68,d_week_seq#36,d_quarter_seq#69,d_year#70,d_dow#71,d_moy#72,d_dom#73,d_qoy#74,d_fy_year#75,d_fy_quarter_seq#76,d_fy_week_seq#77,d_day_name#42,d_quarter_name#78,d_holiday#79,d_weekend#80,d_following_holiday#81,d_first_dom#82,d_last_dom#83,d_same_day_ly#84,d_same_day_lq#85,d_current_day#86,... 4 more fields] parquet
                           :  +- SubqueryAlias spark_catalog.default.store
                           :     +- Relation[s_store_sk#40,s_store_id#37,s_rec_start_date#87,s_rec_end_date#88,s_closed_date_sk#89,s_store_name#35,s_number_employees#90,s_floor_space#91,s_hours#92,s_manager#93,s_market_id#94,s_geography_class#95,s_market_desc#96,s_market_manager#97,s_division_id#98,s_division_name#99,s_company_id#100,s_company_name#101,s_street_number#102,s_street_name#103,s_street_type#104,s_suite_number#105,s_city#106,s_county#107,... 5 more fields] parquet
                           +- SubqueryAlias d
                              +- SubqueryAlias spark_catalog.default.date_dim
                                 +- Relation[d_date_sk#132,d_date_id#133,d_date#134,d_month_seq#131,d_week_seq#130,d_quarter_seq#135,d_year#136,d_dow#137,d_moy#138,d_dom#139,d_qoy#140,d_fy_year#141,d_fy_quarter_seq#142,d_fy_week_seq#143,d_day_name#144,d_quarter_name#145,d_holiday#146,d_weekend#147,d_following_holiday#148,d_first_dom#149,d_last_dom#150,d_same_day_ly#151,d_same_day_lq#152,d_current_day#153,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [s_store_name1#8 ASC NULLS FIRST, s_store_id1#10 ASC NULLS FIRST, d_week_seq1#9 ASC NULLS FIRST], true
      +- Project [s_store_name1#8, s_store_id1#10, d_week_seq1#9, CheckOverflow((promote_precision(sun_sales1#11) / promote_precision(sun_sales2#21)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#28, CheckOverflow((promote_precision(mon_sales1#12) / promote_precision(mon_sales2#22)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#29, CheckOverflow((promote_precision(tue_sales1#13) / promote_precision(tue_sales1#13)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales1)#30, CheckOverflow((promote_precision(wed_sales1#14) / promote_precision(wed_sales2#24)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#31, CheckOverflow((promote_precision(thu_sales1#15) / promote_precision(thu_sales2#25)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#32, CheckOverflow((promote_precision(fri_sales1#16) / promote_precision(fri_sales2#26)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#33, CheckOverflow((promote_precision(sat_sales1#17) / promote_precision(sat_sales2#27)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#34]
         +- Join Inner, ((s_store_id1#10 = s_store_id2#20) AND (d_week_seq1#9 = (d_week_seq2#19 - 52)))
            :- Project [s_store_name#35 AS s_store_name1#8, d_week_seq#36 AS d_week_seq1#9, s_store_id#37 AS s_store_id1#10, sun_sales#1 AS sun_sales1#11, mon_sales#2 AS mon_sales1#12, tue_sales#3 AS tue_sales1#13, wed_sales#4 AS wed_sales1#14, thu_sales#5 AS thu_sales1#15, fri_sales#6 AS fri_sales1#16, sat_sales#7 AS sat_sales1#17]
            :  +- Join Inner, (d_week_seq#38 = d_week_seq#36)
            :     :- Project [d_week_seq#36, sun_sales#1, mon_sales#2, tue_sales#3, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7, s_store_id#37, s_store_name#35]
            :     :  +- Join Inner, (ss_store_sk#39 = s_store_sk#40)
            :     :     :- Aggregate [d_week_seq#36, ss_store_sk#39], [d_week_seq#36, ss_store_sk#39, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)),17,2) AS sun_sales#1, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)),17,2) AS mon_sales#2, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Tuesday) THEN ss_sales_price#43 ELSE null END)),17,2) AS tue_sales#3, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)),17,2) AS wed_sales#4, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)),17,2) AS thu_sales#5, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)),17,2) AS fri_sales#6, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END)),17,2) AS sat_sales#7]
            :     :     :  +- Project [ss_store_sk#39, ss_sales_price#43, d_week_seq#36, d_day_name#42]
            :     :     :     +- Join Inner, (d_date_sk#44 = ss_sold_date_sk#45)
            :     :     :        :- Project [ss_sold_date_sk#45, ss_store_sk#39, ss_sales_price#43]
            :     :     :        :  +- Filter (isnotnull(ss_sold_date_sk#45) AND isnotnull(ss_store_sk#39))
            :     :     :        :     +- Relation[ss_sold_date_sk#45,ss_sold_time_sk#46,ss_item_sk#47,ss_customer_sk#48,ss_cdemo_sk#49,ss_hdemo_sk#50,ss_addr_sk#51,ss_store_sk#39,ss_promo_sk#52,ss_ticket_number#53,ss_quantity#54,ss_wholesale_cost#55,ss_list_price#56,ss_sales_price#43,ss_ext_discount_amt#57,ss_ext_sales_price#58,ss_ext_wholesale_cost#59,ss_ext_list_price#60,ss_ext_tax#61,ss_coupon_amt#62,ss_net_paid#63,ss_net_paid_inc_tax#64,ss_net_profit#65] parquet
            :     :     :        +- Project [d_date_sk#44, d_week_seq#36, d_day_name#42]
            :     :     :           +- Filter (isnotnull(d_date_sk#44) AND isnotnull(d_week_seq#36))
            :     :     :              +- Relation[d_date_sk#44,d_date_id#66,d_date#67,d_month_seq#68,d_week_seq#36,d_quarter_seq#69,d_year#70,d_dow#71,d_moy#72,d_dom#73,d_qoy#74,d_fy_year#75,d_fy_quarter_seq#76,d_fy_week_seq#77,d_day_name#42,d_quarter_name#78,d_holiday#79,d_weekend#80,d_following_holiday#81,d_first_dom#82,d_last_dom#83,d_same_day_ly#84,d_same_day_lq#85,d_current_day#86,... 4 more fields] parquet
            :     :     +- Project [s_store_sk#40, s_store_id#37, s_store_name#35]
            :     :        +- Filter (isnotnull(s_store_sk#40) AND isnotnull(s_store_id#37))
            :     :           +- Relation[s_store_sk#40,s_store_id#37,s_rec_start_date#87,s_rec_end_date#88,s_closed_date_sk#89,s_store_name#35,s_number_employees#90,s_floor_space#91,s_hours#92,s_manager#93,s_market_id#94,s_geography_class#95,s_market_desc#96,s_market_manager#97,s_division_id#98,s_division_name#99,s_company_id#100,s_company_name#101,s_street_number#102,s_street_name#103,s_street_type#104,s_suite_number#105,s_city#106,s_county#107,... 5 more fields] parquet
            :     +- Project [d_week_seq#38]
            :        +- Filter (((isnotnull(d_month_seq#41) AND (d_month_seq#41 >= 1185)) AND (d_month_seq#41 <= 1196)) AND isnotnull(d_week_seq#38))
            :           +- Relation[d_date_sk#108,d_date_id#109,d_date#110,d_month_seq#41,d_week_seq#38,d_quarter_seq#111,d_year#112,d_dow#113,d_moy#114,d_dom#115,d_qoy#116,d_fy_year#117,d_fy_quarter_seq#118,d_fy_week_seq#119,d_day_name#120,d_quarter_name#121,d_holiday#122,d_weekend#123,d_following_holiday#124,d_first_dom#125,d_last_dom#126,d_same_day_ly#127,d_same_day_lq#128,d_current_day#129,... 4 more fields] parquet
            +- Project [d_week_seq#36 AS d_week_seq2#19, s_store_id#37 AS s_store_id2#20, sun_sales#1 AS sun_sales2#21, mon_sales#2 AS mon_sales2#22, wed_sales#4 AS wed_sales2#24, thu_sales#5 AS thu_sales2#25, fri_sales#6 AS fri_sales2#26, sat_sales#7 AS sat_sales2#27]
               +- Join Inner, (d_week_seq#130 = d_week_seq#36)
                  :- Project [d_week_seq#36, sun_sales#1, mon_sales#2, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7, s_store_id#37]
                  :  +- Join Inner, (ss_store_sk#39 = s_store_sk#40)
                  :     :- Aggregate [d_week_seq#36, ss_store_sk#39], [d_week_seq#36, ss_store_sk#39, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)),17,2) AS sun_sales#1, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)),17,2) AS mon_sales#2, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)),17,2) AS wed_sales#4, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)),17,2) AS thu_sales#5, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)),17,2) AS fri_sales#6, MakeDecimal(sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END)),17,2) AS sat_sales#7]
                  :     :  +- Project [ss_store_sk#39, ss_sales_price#43, d_week_seq#36, d_day_name#42]
                  :     :     +- Join Inner, (d_date_sk#44 = ss_sold_date_sk#45)
                  :     :        :- Project [ss_sold_date_sk#45, ss_store_sk#39, ss_sales_price#43]
                  :     :        :  +- Filter (isnotnull(ss_sold_date_sk#45) AND isnotnull(ss_store_sk#39))
                  :     :        :     +- Relation[ss_sold_date_sk#45,ss_sold_time_sk#46,ss_item_sk#47,ss_customer_sk#48,ss_cdemo_sk#49,ss_hdemo_sk#50,ss_addr_sk#51,ss_store_sk#39,ss_promo_sk#52,ss_ticket_number#53,ss_quantity#54,ss_wholesale_cost#55,ss_list_price#56,ss_sales_price#43,ss_ext_discount_amt#57,ss_ext_sales_price#58,ss_ext_wholesale_cost#59,ss_ext_list_price#60,ss_ext_tax#61,ss_coupon_amt#62,ss_net_paid#63,ss_net_paid_inc_tax#64,ss_net_profit#65] parquet
                  :     :        +- Project [d_date_sk#44, d_week_seq#36, d_day_name#42]
                  :     :           +- Filter (isnotnull(d_date_sk#44) AND isnotnull(d_week_seq#36))
                  :     :              +- Relation[d_date_sk#44,d_date_id#66,d_date#67,d_month_seq#68,d_week_seq#36,d_quarter_seq#69,d_year#70,d_dow#71,d_moy#72,d_dom#73,d_qoy#74,d_fy_year#75,d_fy_quarter_seq#76,d_fy_week_seq#77,d_day_name#42,d_quarter_name#78,d_holiday#79,d_weekend#80,d_following_holiday#81,d_first_dom#82,d_last_dom#83,d_same_day_ly#84,d_same_day_lq#85,d_current_day#86,... 4 more fields] parquet
                  :     +- Project [s_store_sk#40, s_store_id#37]
                  :        +- Filter (isnotnull(s_store_sk#40) AND isnotnull(s_store_id#37))
                  :           +- Relation[s_store_sk#40,s_store_id#37,s_rec_start_date#87,s_rec_end_date#88,s_closed_date_sk#89,s_store_name#35,s_number_employees#90,s_floor_space#91,s_hours#92,s_manager#93,s_market_id#94,s_geography_class#95,s_market_desc#96,s_market_manager#97,s_division_id#98,s_division_name#99,s_company_id#100,s_company_name#101,s_street_number#102,s_street_name#103,s_street_type#104,s_suite_number#105,s_city#106,s_county#107,... 5 more fields] parquet
                  +- Project [d_week_seq#130]
                     +- Filter (((isnotnull(d_month_seq#131) AND (d_month_seq#131 >= 1197)) AND (d_month_seq#131 <= 1208)) AND isnotnull(d_week_seq#130))
                        +- Relation[d_date_sk#132,d_date_id#133,d_date#134,d_month_seq#131,d_week_seq#130,d_quarter_seq#135,d_year#136,d_dow#137,d_moy#138,d_dom#139,d_qoy#140,d_fy_year#141,d_fy_quarter_seq#142,d_fy_week_seq#143,d_day_name#144,d_quarter_name#145,d_holiday#146,d_weekend#147,d_following_holiday#148,d_first_dom#149,d_last_dom#150,d_same_day_ly#151,d_same_day_lq#152,d_current_day#153,... 4 more fields] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#8 ASC NULLS FIRST,s_store_id1#10 ASC NULLS FIRST,d_week_seq1#9 ASC NULLS FIRST], output=[s_store_name1#8,s_store_id1#10,d_week_seq1#9,(sun_sales1 / sun_sales2)#28,(mon_sales1 / mon_sales2)#29,(tue_sales1 / tue_sales1)#30,(wed_sales1 / wed_sales2)#31,(thu_sales1 / thu_sales2)#32,(fri_sales1 / fri_sales2)#33,(sat_sales1 / sat_sales2)#34])
+- *(10) Project [s_store_name1#8, s_store_id1#10, d_week_seq1#9, CheckOverflow((promote_precision(sun_sales1#11) / promote_precision(sun_sales2#21)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#28, CheckOverflow((promote_precision(mon_sales1#12) / promote_precision(mon_sales2#22)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#29, CheckOverflow((promote_precision(tue_sales1#13) / promote_precision(tue_sales1#13)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales1)#30, CheckOverflow((promote_precision(wed_sales1#14) / promote_precision(wed_sales2#24)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#31, CheckOverflow((promote_precision(thu_sales1#15) / promote_precision(thu_sales2#25)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#32, CheckOverflow((promote_precision(fri_sales1#16) / promote_precision(fri_sales2#26)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#33, CheckOverflow((promote_precision(sat_sales1#17) / promote_precision(sat_sales2#27)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#34]
   +- *(10) BroadcastHashJoin [s_store_id1#10, d_week_seq1#9], [s_store_id2#20, (d_week_seq2#19 - 52)], Inner, BuildRight, false
      :- *(10) Project [s_store_name#35 AS s_store_name1#8, d_week_seq#36 AS d_week_seq1#9, s_store_id#37 AS s_store_id1#10, sun_sales#1 AS sun_sales1#11, mon_sales#2 AS mon_sales1#12, tue_sales#3 AS tue_sales1#13, wed_sales#4 AS wed_sales1#14, thu_sales#5 AS thu_sales1#15, fri_sales#6 AS fri_sales1#16, sat_sales#7 AS sat_sales1#17]
      :  +- *(10) BroadcastHashJoin [d_week_seq#36], [d_week_seq#38], Inner, BuildRight, false
      :     :- *(10) Project [d_week_seq#36, sun_sales#1, mon_sales#2, tue_sales#3, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7, s_store_id#37, s_store_name#35]
      :     :  +- *(10) BroadcastHashJoin [ss_store_sk#39], [s_store_sk#40], Inner, BuildRight, false
      :     :     :- *(10) HashAggregate(keys=[d_week_seq#36, ss_store_sk#39], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Tuesday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END))], output=[d_week_seq#36, ss_store_sk#39, sun_sales#1, mon_sales#2, tue_sales#3, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7])
      :     :     :  +- Exchange hashpartitioning(d_week_seq#36, ss_store_sk#39, 5), true, [id=#154]
      :     :     :     +- *(2) HashAggregate(keys=[d_week_seq#36, ss_store_sk#39], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Tuesday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END))], output=[d_week_seq#36, ss_store_sk#39, sum#155, sum#156, sum#157, sum#158, sum#159, sum#160, sum#161])
      :     :     :        +- *(2) Project [ss_store_sk#39, ss_sales_price#43, d_week_seq#36, d_day_name#42]
      :     :     :           +- *(2) BroadcastHashJoin [ss_sold_date_sk#45], [d_date_sk#44], Inner, BuildRight, false
      :     :     :              :- *(2) Project [ss_sold_date_sk#45, ss_store_sk#39, ss_sales_price#43]
      :     :     :              :  +- *(2) Filter (isnotnull(ss_sold_date_sk#45) AND isnotnull(ss_store_sk#39))
      :     :     :              :     +- *(2) ColumnarToRow
      :     :     :              :        +- FileScan parquet default.store_sales[ss_sold_date_sk#45,ss_store_sk#39,ss_sales_price#43] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#45), isnotnull(ss_store_sk#39)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
      :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#162]
      :     :     :                 +- *(1) Project [d_date_sk#44, d_week_seq#36, d_day_name#42]
      :     :     :                    +- *(1) Filter (isnotnull(d_date_sk#44) AND isnotnull(d_week_seq#36))
      :     :     :                       +- *(1) ColumnarToRow
      :     :     :                          +- FileScan parquet default.date_dim[d_date_sk#44,d_week_seq#36,d_day_name#42] Batched: true, DataFilters: [isnotnull(d_date_sk#44), isnotnull(d_week_seq#36)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#163]
      :     :        +- *(3) Project [s_store_sk#40, s_store_id#37, s_store_name#35]
      :     :           +- *(3) Filter (isnotnull(s_store_sk#40) AND isnotnull(s_store_id#37))
      :     :              +- *(3) ColumnarToRow
      :     :                 +- FileScan parquet default.store[s_store_sk#40,s_store_id#37,s_store_name#35] Batched: true, DataFilters: [isnotnull(s_store_sk#40), isnotnull(s_store_id#37)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#164]
      :        +- *(4) Project [d_week_seq#38]
      :           +- *(4) Filter (((isnotnull(d_month_seq#41) AND (d_month_seq#41 >= 1185)) AND (d_month_seq#41 <= 1196)) AND isnotnull(d_week_seq#38))
      :              +- *(4) ColumnarToRow
      :                 +- FileScan parquet default.date_dim[d_month_seq#41,d_week_seq#38] Batched: true, DataFilters: [isnotnull(d_month_seq#41), (d_month_seq#41 >= 1185), (d_month_seq#41 <= 1196), isnotnul..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1185), LessThanOrEqual(d_month_seq,1196),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true], (input[0, int, true] - 52)),false), [id=#165]
         +- *(9) Project [d_week_seq#36 AS d_week_seq2#19, s_store_id#37 AS s_store_id2#20, sun_sales#1 AS sun_sales2#21, mon_sales#2 AS mon_sales2#22, wed_sales#4 AS wed_sales2#24, thu_sales#5 AS thu_sales2#25, fri_sales#6 AS fri_sales2#26, sat_sales#7 AS sat_sales2#27]
            +- *(9) BroadcastHashJoin [d_week_seq#36], [d_week_seq#130], Inner, BuildRight, false
               :- *(9) Project [d_week_seq#36, sun_sales#1, mon_sales#2, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7, s_store_id#37]
               :  +- *(9) BroadcastHashJoin [ss_store_sk#39], [s_store_sk#40], Inner, BuildRight, false
               :     :- *(9) HashAggregate(keys=[d_week_seq#36, ss_store_sk#39], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END))], output=[d_week_seq#36, ss_store_sk#39, sun_sales#1, mon_sales#2, wed_sales#4, thu_sales#5, fri_sales#6, sat_sales#7])
               :     :  +- Exchange hashpartitioning(d_week_seq#36, ss_store_sk#39, 5), true, [id=#166]
               :     :     +- *(6) HashAggregate(keys=[d_week_seq#36, ss_store_sk#39], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Sunday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Monday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Wednesday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Thursday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Friday) THEN ss_sales_price#43 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#42 = Saturday) THEN ss_sales_price#43 ELSE null END))], output=[d_week_seq#36, ss_store_sk#39, sum#167, sum#168, sum#169, sum#170, sum#171, sum#172])
               :     :        +- *(6) Project [ss_store_sk#39, ss_sales_price#43, d_week_seq#36, d_day_name#42]
               :     :           +- *(6) BroadcastHashJoin [ss_sold_date_sk#45], [d_date_sk#44], Inner, BuildRight, false
               :     :              :- *(6) Project [ss_sold_date_sk#45, ss_store_sk#39, ss_sales_price#43]
               :     :              :  +- *(6) Filter (isnotnull(ss_sold_date_sk#45) AND isnotnull(ss_store_sk#39))
               :     :              :     +- *(6) ColumnarToRow
               :     :              :        +- FileScan parquet default.store_sales[ss_sold_date_sk#45,ss_store_sk#39,ss_sales_price#43] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#45), isnotnull(ss_store_sk#39)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
               :     :              +- ReusedExchange [d_date_sk#44, d_week_seq#36, d_day_name#42], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#162]
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#173]
               :        +- *(7) Project [s_store_sk#40, s_store_id#37]
               :           +- *(7) Filter (isnotnull(s_store_sk#40) AND isnotnull(s_store_id#37))
               :              +- *(7) ColumnarToRow
               :                 +- FileScan parquet default.store[s_store_sk#40,s_store_id#37] Batched: true, DataFilters: [isnotnull(s_store_sk#40), isnotnull(s_store_id#37)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#174]
                  +- *(8) Project [d_week_seq#130]
                     +- *(8) Filter (((isnotnull(d_month_seq#131) AND (d_month_seq#131 >= 1197)) AND (d_month_seq#131 <= 1208)) AND isnotnull(d_week_seq#130))
                        +- *(8) ColumnarToRow
                           +- FileScan parquet default.date_dim[d_month_seq#131,d_week_seq#130] Batched: true, DataFilters: [isnotnull(d_month_seq#131), (d_month_seq#131 >= 1197), (d_month_seq#131 <= 1208), isnotnul..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1197), LessThanOrEqual(d_month_seq,1208),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>

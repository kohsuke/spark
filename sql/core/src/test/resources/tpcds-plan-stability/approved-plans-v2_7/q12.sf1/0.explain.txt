== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['i_category ASC NULLS FIRST, 'i_class ASC NULLS FIRST, 'i_item_id ASC NULLS FIRST, 'i_item_desc ASC NULLS FIRST, 'revenueratio ASC NULLS FIRST], true
      +- 'Aggregate ['i_item_id, 'i_item_desc, 'i_category, 'i_class, 'i_current_price], ['i_item_id, 'i_item_desc, 'i_category, 'i_class, 'i_current_price, 'sum('ws_ext_sales_price) AS itemrevenue#1, (('sum('ws_ext_sales_price) * 100) / 'sum('sum('ws_ext_sales_price)) windowspecdefinition('i_class, unspecifiedframe$())) AS revenueratio#2]
         +- 'Filter ((('ws_item_sk = 'i_item_sk) AND 'i_category IN (Sports,Books,Home)) AND (('ws_sold_date_sk = 'd_date_sk) AND (('d_date >= cast(1999-02-22 as date)) AND ('d_date <= (cast(1999-02-22 as date) + 30 days)))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'UnresolvedRelation [web_sales]
               :  +- 'UnresolvedRelation [item]
               +- 'UnresolvedRelation [date_dim]

== Analyzed Logical Plan ==
i_item_id: string, i_item_desc: string, i_category: string, i_class: string, i_current_price: decimal(7,2), itemrevenue: decimal(17,2), revenueratio: decimal(38,17)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#3 ASC NULLS FIRST, i_class#4 ASC NULLS FIRST, i_item_id#5 ASC NULLS FIRST, i_item_desc#6 ASC NULLS FIRST, revenueratio#2 ASC NULLS FIRST], true
      +- Project [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, itemrevenue#1, revenueratio#2]
         +- Project [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, itemrevenue#1, _w0#8, _w1#9, _we0#10, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(_w0#8 as decimal(17,2))) * promote_precision(cast(cast(100 as decimal(3,0)) as decimal(17,2)))), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(cast(_we0#10 as decimal(27,2)))), DecimalType(38,17), true) AS revenueratio#2]
            +- Window [sum(_w1#9) windowspecdefinition(i_class#4, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#10], [i_class#4]
               +- Aggregate [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7], [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, sum(ws_ext_sales_price#11) AS itemrevenue#1, sum(ws_ext_sales_price#11) AS _w0#8, sum(ws_ext_sales_price#11) AS _w1#9]
                  +- Filter (((ws_item_sk#12 = i_item_sk#13) AND i_category#3 IN (Sports,Books,Home)) AND ((ws_sold_date_sk#14 = d_date_sk#15) AND ((d_date#16 >= cast(1999-02-22 as date)) AND (d_date#16 <= cast(1999-02-22 as date) + 30 days))))
                     +- Join Inner
                        :- Join Inner
                        :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.web_sales
                        :  :  +- Relation[ws_sold_date_sk#14,ws_sold_time_sk#17,ws_ship_date_sk#18,ws_item_sk#12,ws_bill_customer_sk#19,ws_bill_cdemo_sk#20,ws_bill_hdemo_sk#21,ws_bill_addr_sk#22,ws_ship_customer_sk#23,ws_ship_cdemo_sk#24,ws_ship_hdemo_sk#25,ws_ship_addr_sk#26,ws_web_page_sk#27,ws_web_site_sk#28,ws_ship_mode_sk#29,ws_warehouse_sk#30,ws_promo_sk#31,ws_order_number#32,ws_quantity#33,ws_wholesale_cost#34,ws_list_price#35,ws_sales_price#36,ws_ext_discount_amt#37,ws_ext_sales_price#11,... 10 more fields] parquet
                        :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.item
                        :     +- Relation[i_item_sk#13,i_item_id#5,i_rec_start_date#38,i_rec_end_date#39,i_item_desc#6,i_current_price#7,i_wholesale_cost#40,i_brand_id#41,i_brand#42,i_class_id#43,i_class#4,i_category_id#44,i_category#3,i_manufact_id#45,i_manufact#46,i_size#47,i_formulation#48,i_color#49,i_units#50,i_container#51,i_manager_id#52,i_product_name#53] parquet
                        +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
                           +- Relation[d_date_sk#15,d_date_id#54,d_date#16,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#3 ASC NULLS FIRST, i_class#4 ASC NULLS FIRST, i_item_id#5 ASC NULLS FIRST, i_item_desc#6 ASC NULLS FIRST, revenueratio#2 ASC NULLS FIRST], true
      +- Project [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, itemrevenue#1, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#8) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#10)), DecimalType(38,17), true) AS revenueratio#2]
         +- Window [sum(_w1#9) windowspecdefinition(i_class#4, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#10], [i_class#4]
            +- Aggregate [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7], [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#11)),17,2) AS itemrevenue#1, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#11)),17,2) AS _w0#8, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#11)),17,2) AS _w1#9]
               +- Project [ws_ext_sales_price#11, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                  +- Join Inner, (ws_sold_date_sk#14 = d_date_sk#15)
                     :- Project [ws_sold_date_sk#14, ws_ext_sales_price#11, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                     :  +- Join Inner, (ws_item_sk#12 = i_item_sk#13)
                     :     :- Project [ws_sold_date_sk#14, ws_item_sk#12, ws_ext_sales_price#11]
                     :     :  +- Filter (isnotnull(ws_item_sk#12) AND isnotnull(ws_sold_date_sk#14))
                     :     :     +- Relation[ws_sold_date_sk#14,ws_sold_time_sk#17,ws_ship_date_sk#18,ws_item_sk#12,ws_bill_customer_sk#19,ws_bill_cdemo_sk#20,ws_bill_hdemo_sk#21,ws_bill_addr_sk#22,ws_ship_customer_sk#23,ws_ship_cdemo_sk#24,ws_ship_hdemo_sk#25,ws_ship_addr_sk#26,ws_web_page_sk#27,ws_web_site_sk#28,ws_ship_mode_sk#29,ws_warehouse_sk#30,ws_promo_sk#31,ws_order_number#32,ws_quantity#33,ws_wholesale_cost#34,ws_list_price#35,ws_sales_price#36,ws_ext_discount_amt#37,ws_ext_sales_price#11,... 10 more fields] parquet
                     :     +- Project [i_item_sk#13, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                     :        +- Filter (i_category#3 IN (Sports,Books,Home) AND isnotnull(i_item_sk#13))
                     :           +- Relation[i_item_sk#13,i_item_id#5,i_rec_start_date#38,i_rec_end_date#39,i_item_desc#6,i_current_price#7,i_wholesale_cost#40,i_brand_id#41,i_brand#42,i_class_id#43,i_class#4,i_category_id#44,i_category#3,i_manufact_id#45,i_manufact#46,i_size#47,i_formulation#48,i_color#49,i_units#50,i_container#51,i_manager_id#52,i_product_name#53] parquet
                     +- Project [d_date_sk#15]
                        +- Filter (((isnotnull(d_date#16) AND (d_date#16 >= 10644)) AND (d_date#16 <= 10674)) AND isnotnull(d_date_sk#15))
                           +- Relation[d_date_sk#15,d_date_id#54,d_date#16,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_category#3 ASC NULLS FIRST,i_class#4 ASC NULLS FIRST,i_item_id#5 ASC NULLS FIRST,i_item_desc#6 ASC NULLS FIRST,revenueratio#2 ASC NULLS FIRST], output=[i_item_id#5,i_item_desc#6,i_category#3,i_class#4,i_current_price#7,itemrevenue#1,revenueratio#2])
+- *(6) Project [i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, itemrevenue#1, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#8) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#10)), DecimalType(38,17), true) AS revenueratio#2]
   +- Window [sum(_w1#9) windowspecdefinition(i_class#4, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#10], [i_class#4]
      +- *(5) Sort [i_class#4 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(i_class#4, 5), true, [id=#76]
            +- *(4) HashAggregate(keys=[i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7], functions=[sum(UnscaledValue(ws_ext_sales_price#11))], output=[i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, itemrevenue#1, _w0#8, _w1#9])
               +- Exchange hashpartitioning(i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, 5), true, [id=#77]
                  +- *(3) HashAggregate(keys=[i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#11))], output=[i_item_id#5, i_item_desc#6, i_category#3, i_class#4, i_current_price#7, sum#78])
                     +- *(3) Project [ws_ext_sales_price#11, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                        +- *(3) BroadcastHashJoin [ws_sold_date_sk#14], [d_date_sk#15], Inner, BuildRight, false
                           :- *(3) Project [ws_sold_date_sk#14, ws_ext_sales_price#11, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                           :  +- *(3) BroadcastHashJoin [ws_item_sk#12], [i_item_sk#13], Inner, BuildRight, false
                           :     :- *(3) Project [ws_sold_date_sk#14, ws_item_sk#12, ws_ext_sales_price#11]
                           :     :  +- *(3) Filter (isnotnull(ws_item_sk#12) AND isnotnull(ws_sold_date_sk#14))
                           :     :     +- *(3) ColumnarToRow
                           :     :        +- FileScan parquet tpcds_sf1_parquet_stats.web_sales[ws_sold_date_sk#14,ws_item_sk#12,ws_ext_sales_price#11] Batched: true, DataFilters: [isnotnull(ws_item_sk#12), isnotnull(ws_sold_date_sk#14)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#79]
                           :        +- *(1) Project [i_item_sk#13, i_item_id#5, i_item_desc#6, i_current_price#7, i_class#4, i_category#3]
                           :           +- *(1) Filter (i_category#3 IN (Sports,Books,Home) AND isnotnull(i_item_sk#13))
                           :              +- *(1) ColumnarToRow
                           :                 +- FileScan parquet tpcds_sf1_parquet_stats.item[i_item_sk#13,i_item_id#5,i_item_desc#6,i_current_price#7,i_class#4,i_category#3] Batched: true, DataFilters: [i_category#3 IN (Sports,Books,Home), isnotnull(i_item_sk#13)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(i_category, [Sports,Books,Home]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#80]
                              +- *(2) Project [d_date_sk#15]
                                 +- *(2) Filter (((isnotnull(d_date#16) AND (d_date#16 >= 10644)) AND (d_date#16 <= 10674)) AND isnotnull(d_date_sk#15))
                                    +- *(2) ColumnarToRow
                                       +- FileScan parquet tpcds_sf1_parquet_stats.date_dim[d_date_sk#15,d_date#16] Batched: true, DataFilters: [isnotnull(d_date#16), (d_date#16 >= 10644), (d_date#16 <= 10674), isnotnull(d_date_sk#15)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>

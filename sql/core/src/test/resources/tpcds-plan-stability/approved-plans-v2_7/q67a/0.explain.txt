== Parsed Logical Plan ==
CTE [results, results_rollup]
:  :- 'SubqueryAlias results
:  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id], ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id, 'sum('coalesce(('ss_sales_price * 'ss_quantity), 0)) AS sumsales#1]
:  :     +- 'Filter ((('ss_sold_date_sk = 'd_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND (('ss_store_sk = 's_store_sk) AND (('d_month_seq >= 1212) AND ('d_month_seq <= (1212 + 11)))))
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'Join Inner
:  :           :  :  :- 'UnresolvedRelation [store_sales]
:  :           :  :  +- 'UnresolvedRelation [date_dim]
:  :           :  +- 'UnresolvedRelation [store]
:  :           +- 'UnresolvedRelation [item]
:  +- 'SubqueryAlias results_rollup
:     +- 'Union
:        :- 'Union
:        :  :- 'Union
:        :  :  :- 'Union
:        :  :  :  :- 'Union
:        :  :  :  :  :- 'Union
:        :  :  :  :  :  :- 'Union
:        :  :  :  :  :  :  :- 'Union
:        :  :  :  :  :  :  :  :- 'Project ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id, 'sumsales]
:        :  :  :  :  :  :  :  :  +- 'UnresolvedRelation [results]
:        :  :  :  :  :  :  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy], ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, null AS s_store_id#2, 'sum('sumsales) AS sumsales#3]
:        :  :  :  :  :  :  :     +- 'UnresolvedRelation [results]
:        :  :  :  :  :  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy], ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, null AS d_moy#4, null AS s_store_id#5, 'sum('sumsales) AS sumsales#6]
:        :  :  :  :  :  :     +- 'UnresolvedRelation [results]
:        :  :  :  :  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year], ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, null AS d_qoy#7, null AS d_moy#8, null AS s_store_id#9, 'sum('sumsales) AS sumsales#10]
:        :  :  :  :  :     +- 'UnresolvedRelation [results]
:        :  :  :  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand, 'i_product_name], ['i_category, 'i_class, 'i_brand, 'i_product_name, null AS d_year#11, null AS d_qoy#12, null AS d_moy#13, null AS s_store_id#14, 'sum('sumsales) AS sumsales#15]
:        :  :  :  :     +- 'UnresolvedRelation [results]
:        :  :  :  +- 'Aggregate ['i_category, 'i_class, 'i_brand], ['i_category, 'i_class, 'i_brand, null AS i_product_name#16, null AS d_year#17, null AS d_qoy#18, null AS d_moy#19, null AS s_store_id#20, 'sum('sumsales) AS sumsales#21]
:        :  :  :     +- 'UnresolvedRelation [results]
:        :  :  +- 'Aggregate ['i_category, 'i_class], ['i_category, 'i_class, null AS i_brand#22, null AS i_product_name#23, null AS d_year#24, null AS d_qoy#25, null AS d_moy#26, null AS s_store_id#27, 'sum('sumsales) AS sumsales#28]
:        :  :     +- 'UnresolvedRelation [results]
:        :  +- 'Aggregate ['i_category], ['i_category, null AS i_class#29, null AS i_brand#30, null AS i_product_name#31, null AS d_year#32, null AS d_qoy#33, null AS d_moy#34, null AS s_store_id#35, 'sum('sumsales) AS sumsales#36]
:        :     +- 'UnresolvedRelation [results]
:        +- 'Project [null AS i_category#37, null AS i_class#38, null AS i_brand#39, null AS i_product_name#40, null AS d_year#41, null AS d_qoy#42, null AS d_moy#43, null AS s_store_id#44, 'sum('sumsales) AS sumsales#45]
:           +- 'UnresolvedRelation [results]
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['i_category ASC NULLS FIRST, 'i_class ASC NULLS FIRST, 'i_brand ASC NULLS FIRST, 'i_product_name ASC NULLS FIRST, 'd_year ASC NULLS FIRST, 'd_qoy ASC NULLS FIRST, 'd_moy ASC NULLS FIRST, 's_store_id ASC NULLS FIRST, 'sumsales ASC NULLS FIRST, 'rk ASC NULLS FIRST], true
         +- 'Project [*]
            +- 'Filter ('rk <= 100)
               +- 'SubqueryAlias dw2
                  +- 'Project ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id, 'sumsales, 'rank() windowspecdefinition('i_category, 'sumsales DESC NULLS LAST, unspecifiedframe$()) AS rk#46]
                     +- 'UnresolvedRelation [results_rollup]

== Analyzed Logical Plan ==
i_category: string, i_class: string, i_brand: string, i_product_name: string, d_year: int, d_qoy: int, d_moy: int, s_store_id: string, sumsales: decimal(38,2), rk: int
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#47 ASC NULLS FIRST, i_class#48 ASC NULLS FIRST, i_brand#49 ASC NULLS FIRST, i_product_name#50 ASC NULLS FIRST, d_year#51 ASC NULLS FIRST, d_qoy#52 ASC NULLS FIRST, d_moy#53 ASC NULLS FIRST, s_store_id#54 ASC NULLS FIRST, sumsales#55 ASC NULLS FIRST, rk#46 ASC NULLS FIRST], true
      +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55, rk#46]
         +- Filter (rk#46 <= 100)
            +- SubqueryAlias dw2
               +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55, rk#46]
                  +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55, rk#46, rk#46]
                     +- Window [rank(sumsales#55) windowspecdefinition(i_category#47, sumsales#55 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#46], [i_category#47], [sumsales#55 DESC NULLS LAST]
                        +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                           +- SubqueryAlias results_rollup
                              +- Union
                                 :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :  +- Union
                                 :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :  +- Union
                                 :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :     :  +- Union
                                 :     :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :     :     :  +- Union
                                 :     :     :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :     :     :     :  +- Union
                                 :     :     :     :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :     :     :     :     :  +- Union
                                 :     :     :     :     :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55]
                                 :     :     :     :     :     :     :  +- Union
                                 :     :     :     :     :     :     :     :- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, cast(sumsales#1 as decimal(38,2)) AS sumsales#55]
                                 :     :     :     :     :     :     :     :  +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#1]
                                 :     :     :     :     :     :     :     :     +- SubqueryAlias results
                                 :     :     :     :     :     :     :     :        +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :     :     :     :     :     :           +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :     :     :     :     :     :              +- Join Inner
                                 :     :     :     :     :     :     :     :                 :- Join Inner
                                 :     :     :     :     :     :     :     :                 :  :- Join Inner
                                 :     :     :     :     :     :     :     :                 :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :     :     :     :     :     :                 :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :     :     :     :     :     :                 :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :     :     :     :     :     :                 :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :     :     :     :     :     :                 :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :     :     :     :     :     :                 :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :     :     :     :     :     :                 +- SubqueryAlias spark_catalog.default.item
                                 :     :     :     :     :     :     :     :                    +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     :     :     :     :     :     +- Project [i_category#47 AS i_category#150, i_class#48 AS i_class#151, i_brand#49 AS i_brand#152, i_product_name#50 AS i_product_name#153, d_year#51 AS d_year#154, d_qoy#52 AS d_qoy#155, d_moy#53 AS d_moy#156, s_store_id#157 AS s_store_id#158, sumsales#3 AS sumsales#159]
                                 :     :     :     :     :     :     :        +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, cast(s_store_id#2 as string) AS s_store_id#157, sumsales#3]
                                 :     :     :     :     :     :     :           +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, null AS s_store_id#2, sum(sumsales#1) AS sumsales#3]
                                 :     :     :     :     :     :     :              +- SubqueryAlias results
                                 :     :     :     :     :     :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :     :     :     :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :     :     :     :     :                       +- Join Inner
                                 :     :     :     :     :     :     :                          :- Join Inner
                                 :     :     :     :     :     :     :                          :  :- Join Inner
                                 :     :     :     :     :     :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :     :     :     :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :     :     :     :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :     :     :     :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :     :     :     :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :     :     :     :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :     :     :     :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :     :     :     :     :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     :     :     :     :     +- Project [i_category#47 AS i_category#160, i_class#48 AS i_class#161, i_brand#49 AS i_brand#162, i_product_name#50 AS i_product_name#163, d_year#51 AS d_year#164, d_qoy#52 AS d_qoy#165, d_moy#166 AS d_moy#167, s_store_id#168 AS s_store_id#169, sumsales#6 AS sumsales#170]
                                 :     :     :     :     :     :        +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, cast(d_moy#4 as int) AS d_moy#166, cast(s_store_id#5 as string) AS s_store_id#168, sumsales#6]
                                 :     :     :     :     :     :           +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, null AS d_moy#4, null AS s_store_id#5, sum(sumsales#1) AS sumsales#6]
                                 :     :     :     :     :     :              +- SubqueryAlias results
                                 :     :     :     :     :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :     :     :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :     :     :     :                       +- Join Inner
                                 :     :     :     :     :     :                          :- Join Inner
                                 :     :     :     :     :     :                          :  :- Join Inner
                                 :     :     :     :     :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :     :     :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :     :     :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :     :     :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :     :     :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :     :     :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :     :     :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :     :     :     :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     :     :     :     +- Project [i_category#47 AS i_category#171, i_class#48 AS i_class#172, i_brand#49 AS i_brand#173, i_product_name#50 AS i_product_name#174, d_year#51 AS d_year#175, d_qoy#176 AS d_qoy#177, d_moy#178 AS d_moy#179, s_store_id#180 AS s_store_id#181, sumsales#10 AS sumsales#182]
                                 :     :     :     :     :        +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, cast(d_qoy#7 as int) AS d_qoy#176, cast(d_moy#8 as int) AS d_moy#178, cast(s_store_id#9 as string) AS s_store_id#180, sumsales#10]
                                 :     :     :     :     :           +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, null AS d_qoy#7, null AS d_moy#8, null AS s_store_id#9, sum(sumsales#1) AS sumsales#10]
                                 :     :     :     :     :              +- SubqueryAlias results
                                 :     :     :     :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :     :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :     :     :                       +- Join Inner
                                 :     :     :     :     :                          :- Join Inner
                                 :     :     :     :     :                          :  :- Join Inner
                                 :     :     :     :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :     :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :     :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :     :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :     :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :     :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :     :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :     :     :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     :     :     +- Project [i_category#47 AS i_category#183, i_class#48 AS i_class#184, i_brand#49 AS i_brand#185, i_product_name#50 AS i_product_name#186, d_year#187 AS d_year#188, d_qoy#189 AS d_qoy#190, d_moy#191 AS d_moy#192, s_store_id#193 AS s_store_id#194, sumsales#15 AS sumsales#195]
                                 :     :     :     :        +- Project [i_category#47, i_class#48, i_brand#49, i_product_name#50, cast(d_year#11 as int) AS d_year#187, cast(d_qoy#12 as int) AS d_qoy#189, cast(d_moy#13 as int) AS d_moy#191, cast(s_store_id#14 as string) AS s_store_id#193, sumsales#15]
                                 :     :     :     :           +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50], [i_category#47, i_class#48, i_brand#49, i_product_name#50, null AS d_year#11, null AS d_qoy#12, null AS d_moy#13, null AS s_store_id#14, sum(sumsales#1) AS sumsales#15]
                                 :     :     :     :              +- SubqueryAlias results
                                 :     :     :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :     :                       +- Join Inner
                                 :     :     :     :                          :- Join Inner
                                 :     :     :     :                          :  :- Join Inner
                                 :     :     :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :     :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     :     +- Project [i_category#47 AS i_category#196, i_class#48 AS i_class#197, i_brand#49 AS i_brand#198, i_product_name#199 AS i_product_name#200, d_year#201 AS d_year#202, d_qoy#203 AS d_qoy#204, d_moy#205 AS d_moy#206, s_store_id#207 AS s_store_id#208, sumsales#21 AS sumsales#209]
                                 :     :     :        +- Project [i_category#47, i_class#48, i_brand#49, cast(i_product_name#16 as string) AS i_product_name#199, cast(d_year#17 as int) AS d_year#201, cast(d_qoy#18 as int) AS d_qoy#203, cast(d_moy#19 as int) AS d_moy#205, cast(s_store_id#20 as string) AS s_store_id#207, sumsales#21]
                                 :     :     :           +- Aggregate [i_category#47, i_class#48, i_brand#49], [i_category#47, i_class#48, i_brand#49, null AS i_product_name#16, null AS d_year#17, null AS d_qoy#18, null AS d_moy#19, null AS s_store_id#20, sum(sumsales#1) AS sumsales#21]
                                 :     :     :              +- SubqueryAlias results
                                 :     :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :     :                       +- Join Inner
                                 :     :     :                          :- Join Inner
                                 :     :     :                          :  :- Join Inner
                                 :     :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     :     +- Project [i_category#47 AS i_category#210, i_class#48 AS i_class#211, i_brand#212 AS i_brand#213, i_product_name#214 AS i_product_name#215, d_year#216 AS d_year#217, d_qoy#218 AS d_qoy#219, d_moy#220 AS d_moy#221, s_store_id#222 AS s_store_id#223, sumsales#28 AS sumsales#224]
                                 :     :        +- Project [i_category#47, i_class#48, cast(i_brand#22 as string) AS i_brand#212, cast(i_product_name#23 as string) AS i_product_name#214, cast(d_year#24 as int) AS d_year#216, cast(d_qoy#25 as int) AS d_qoy#218, cast(d_moy#26 as int) AS d_moy#220, cast(s_store_id#27 as string) AS s_store_id#222, sumsales#28]
                                 :     :           +- Aggregate [i_category#47, i_class#48], [i_category#47, i_class#48, null AS i_brand#22, null AS i_product_name#23, null AS d_year#24, null AS d_qoy#25, null AS d_moy#26, null AS s_store_id#27, sum(sumsales#1) AS sumsales#28]
                                 :     :              +- SubqueryAlias results
                                 :     :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :     :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :     :                       +- Join Inner
                                 :     :                          :- Join Inner
                                 :     :                          :  :- Join Inner
                                 :     :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :     :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :     :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :     :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :     :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :     :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :     :                          +- SubqueryAlias spark_catalog.default.item
                                 :     :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 :     +- Project [i_category#47 AS i_category#225, i_class#226 AS i_class#227, i_brand#228 AS i_brand#229, i_product_name#230 AS i_product_name#231, d_year#232 AS d_year#233, d_qoy#234 AS d_qoy#235, d_moy#236 AS d_moy#237, s_store_id#238 AS s_store_id#239, sumsales#36 AS sumsales#240]
                                 :        +- Project [i_category#47, cast(i_class#29 as string) AS i_class#226, cast(i_brand#30 as string) AS i_brand#228, cast(i_product_name#31 as string) AS i_product_name#230, cast(d_year#32 as int) AS d_year#232, cast(d_qoy#33 as int) AS d_qoy#234, cast(d_moy#34 as int) AS d_moy#236, cast(s_store_id#35 as string) AS s_store_id#238, sumsales#36]
                                 :           +- Aggregate [i_category#47], [i_category#47, null AS i_class#29, null AS i_brand#30, null AS i_product_name#31, null AS d_year#32, null AS d_qoy#33, null AS d_moy#34, null AS s_store_id#35, sum(sumsales#1) AS sumsales#36]
                                 :              +- SubqueryAlias results
                                 :                 +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                 :                    +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                 :                       +- Join Inner
                                 :                          :- Join Inner
                                 :                          :  :- Join Inner
                                 :                          :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :                          :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                 :                          :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :                          :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                 :                          :  +- SubqueryAlias spark_catalog.default.store
                                 :                          :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                 :                          +- SubqueryAlias spark_catalog.default.item
                                 :                             +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
                                 +- Project [cast(i_category#37 as string) AS i_category#241, cast(i_class#38 as string) AS i_class#242, cast(i_brand#39 as string) AS i_brand#243, cast(i_product_name#40 as string) AS i_product_name#244, cast(d_year#41 as int) AS d_year#245, cast(d_qoy#42 as int) AS d_qoy#246, cast(d_moy#43 as int) AS d_moy#247, cast(s_store_id#44 as string) AS s_store_id#248, sumsales#45]
                                    +- Aggregate [null AS i_category#37, null AS i_class#38, null AS i_brand#39, null AS i_product_name#40, null AS d_year#41, null AS d_qoy#42, null AS d_moy#43, null AS s_store_id#44, sum(sumsales#1) AS sumsales#45]
                                       +- SubqueryAlias results
                                          +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), cast(0 as decimal(18,2)))) AS sumsales#1]
                                             +- Filter (((ss_sold_date_sk#58 = d_date_sk#59) AND (ss_item_sk#60 = i_item_sk#61)) AND ((ss_store_sk#62 = s_store_sk#63) AND ((d_month_seq#64 >= 1212) AND (d_month_seq#64 <= (1212 + 11)))))
                                                +- Join Inner
                                                   :- Join Inner
                                                   :  :- Join Inner
                                                   :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                                   :  :  :  +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                                                   :  :  +- SubqueryAlias spark_catalog.default.date_dim
                                                   :  :     +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                                                   :  +- SubqueryAlias spark_catalog.default.store
                                                   :     +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                                                   +- SubqueryAlias spark_catalog.default.item
                                                      +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#47 ASC NULLS FIRST, i_class#48 ASC NULLS FIRST, i_brand#49 ASC NULLS FIRST, i_product_name#50 ASC NULLS FIRST, d_year#51 ASC NULLS FIRST, d_qoy#52 ASC NULLS FIRST, d_moy#53 ASC NULLS FIRST, s_store_id#54 ASC NULLS FIRST, sumsales#55 ASC NULLS FIRST, rk#46 ASC NULLS FIRST], true
      +- Filter (isnotnull(rk#46) AND (rk#46 <= 100))
         +- Window [rank(sumsales#55) windowspecdefinition(i_category#47, sumsales#55 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#46], [i_category#47], [sumsales#55 DESC NULLS LAST]
            +- Union
               :- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, cast(sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) as decimal(38,2)) AS sumsales#55]
               :  +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :     +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :        :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :        :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :        :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :        :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :        :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :        :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :        :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :        :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :        :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :        :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :        :     +- Project [s_store_sk#63, s_store_id#54]
               :        :        +- Filter isnotnull(s_store_sk#63)
               :        :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :        +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :           +- Filter isnotnull(i_item_sk#61)
               :              +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, null AS s_store_id#158, sum(sumsales#1) AS sumsales#159]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, null AS d_moy#167, null AS s_store_id#169, sum(sumsales#1) AS sumsales#170]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, null AS d_qoy#177, null AS d_moy#179, null AS s_store_id#181, sum(sumsales#1) AS sumsales#182]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50], [i_category#47, i_class#48, i_brand#49, i_product_name#50, null AS d_year#188, null AS d_qoy#190, null AS d_moy#192, null AS s_store_id#194, sum(sumsales#1) AS sumsales#195]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, i_product_name#50, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48, i_brand#49], [i_category#47, i_class#48, i_brand#49, null AS i_product_name#200, null AS d_year#202, null AS d_qoy#204, null AS d_moy#206, null AS s_store_id#208, sum(sumsales#1) AS sumsales#209]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, i_brand#49, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47, i_class#48], [i_category#47, i_class#48, null AS i_brand#213, null AS i_product_name#215, null AS d_year#217, null AS d_qoy#219, null AS d_moy#221, null AS s_store_id#223, sum(sumsales#1) AS sumsales#224]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, i_class#48, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               :- Aggregate [i_category#47], [i_category#47, null AS i_class#227, null AS i_brand#229, null AS i_product_name#231, null AS d_year#233, null AS d_qoy#235, null AS d_moy#237, null AS s_store_id#239, sum(sumsales#1) AS sumsales#240]
               :  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [i_category#47, sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
               :     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
               :           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
               :           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
               :           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
               :           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
               :           :     +- Project [s_store_sk#63, s_store_id#54]
               :           :        +- Filter isnotnull(s_store_sk#63)
               :           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
               :           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :              +- Filter isnotnull(i_item_sk#61)
               :                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet
               +- Aggregate [null AS i_category#241, null AS i_class#242, null AS i_brand#243, null AS i_product_name#244, null AS d_year#245, null AS d_qoy#246, null AS d_moy#247, null AS s_store_id#248, sum(sumsales#1) AS sumsales#45]
                  +- Aggregate [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], [sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00)) AS sumsales#1]
                     +- Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
                        +- Join Inner, (ss_item_sk#60 = i_item_sk#61)
                           :- Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
                           :  +- Join Inner, (ss_store_sk#62 = s_store_sk#63)
                           :     :- Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
                           :     :  +- Join Inner, (ss_sold_date_sk#58 = d_date_sk#59)
                           :     :     :- Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
                           :     :     :  +- Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
                           :     :     :     +- Relation[ss_sold_date_sk#58,ss_sold_time_sk#65,ss_item_sk#60,ss_customer_sk#66,ss_cdemo_sk#67,ss_hdemo_sk#68,ss_addr_sk#69,ss_store_sk#62,ss_promo_sk#70,ss_ticket_number#71,ss_quantity#57,ss_wholesale_cost#72,ss_list_price#73,ss_sales_price#56,ss_ext_discount_amt#74,ss_ext_sales_price#75,ss_ext_wholesale_cost#76,ss_ext_list_price#77,ss_ext_tax#78,ss_coupon_amt#79,ss_net_paid#80,ss_net_paid_inc_tax#81,ss_net_profit#82] parquet
                           :     :     +- Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
                           :     :        +- Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
                           :     :           +- Relation[d_date_sk#59,d_date_id#83,d_date#84,d_month_seq#64,d_week_seq#85,d_quarter_seq#86,d_year#51,d_dow#87,d_moy#53,d_dom#88,d_qoy#52,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,d_current_week#102,d_current_month#103,d_current_quarter#104,d_current_year#105] parquet
                           :     +- Project [s_store_sk#63, s_store_id#54]
                           :        +- Filter isnotnull(s_store_sk#63)
                           :           +- Relation[s_store_sk#63,s_store_id#54,s_rec_start_date#106,s_rec_end_date#107,s_closed_date_sk#108,s_store_name#109,s_number_employees#110,s_floor_space#111,s_hours#112,s_manager#113,s_market_id#114,s_geography_class#115,s_market_desc#116,s_market_manager#117,s_division_id#118,s_division_name#119,s_company_id#120,s_company_name#121,s_street_number#122,s_street_name#123,s_street_type#124,s_suite_number#125,s_city#126,s_county#127,s_state#128,s_zip#129,s_country#130,s_gmt_offset#131,s_tax_percentage#132] parquet
                           +- Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
                              +- Filter isnotnull(i_item_sk#61)
                                 +- Relation[i_item_sk#61,i_item_id#133,i_rec_start_date#134,i_rec_end_date#135,i_item_desc#136,i_current_price#137,i_wholesale_cost#138,i_brand_id#139,i_brand#49,i_class_id#140,i_class#48,i_category_id#141,i_category#47,i_manufact_id#142,i_manufact#143,i_size#144,i_formulation#145,i_color#146,i_units#147,i_container#148,i_manager_id#149,i_product_name#50] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_category#47 ASC NULLS FIRST,i_class#48 ASC NULLS FIRST,i_brand#49 ASC NULLS FIRST,i_product_name#50 ASC NULLS FIRST,d_year#51 ASC NULLS FIRST,d_qoy#52 ASC NULLS FIRST,d_moy#53 ASC NULLS FIRST,s_store_id#54 ASC NULLS FIRST,sumsales#55 ASC NULLS FIRST,rk#46 ASC NULLS FIRST], output=[i_category#47,i_class#48,i_brand#49,i_product_name#50,d_year#51,d_qoy#52,d_moy#53,s_store_id#54,sumsales#55,rk#46])
+- *(55) Filter (isnotnull(rk#46) AND (rk#46 <= 100))
   +- Window [rank(sumsales#55) windowspecdefinition(i_category#47, sumsales#55 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#46], [i_category#47], [sumsales#55 DESC NULLS LAST]
      +- *(54) Sort [i_category#47 ASC NULLS FIRST, sumsales#55 DESC NULLS LAST], false, 0
         +- Exchange hashpartitioning(i_category#47, 5), true, [id=#249]
            +- Union
               :- *(5) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sumsales#55])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :     +- *(4) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#251, isEmpty#252])
               :        +- *(4) Project [ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :           +- *(4) BroadcastHashJoin [ss_item_sk#60], [i_item_sk#61], Inner, BuildRight
               :              :- *(4) Project [ss_item_sk#60, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52, s_store_id#54]
               :              :  +- *(4) BroadcastHashJoin [ss_store_sk#62], [s_store_sk#63], Inner, BuildRight
               :              :     :- *(4) Project [ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56, d_year#51, d_moy#53, d_qoy#52]
               :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#58], [d_date_sk#59], Inner, BuildRight
               :              :     :     :- *(4) Project [ss_sold_date_sk#58, ss_item_sk#60, ss_store_sk#62, ss_quantity#57, ss_sales_price#56]
               :              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#58) AND isnotnull(ss_store_sk#62)) AND isnotnull(ss_item_sk#60))
               :              :     :     :     +- *(4) ColumnarToRow
               :              :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#58,ss_item_sk#60,ss_store_sk#62,ss_quantity#57,ss_sales_price#56] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#58), isnotnull(ss_store_sk#62), isnotnull(ss_item_sk#60)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
               :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#253]
               :              :     :        +- *(1) Project [d_date_sk#59, d_year#51, d_moy#53, d_qoy#52]
               :              :     :           +- *(1) Filter (((isnotnull(d_month_seq#64) AND (d_month_seq#64 >= 1212)) AND (d_month_seq#64 <= 1223)) AND isnotnull(d_date_sk#59))
               :              :     :              +- *(1) ColumnarToRow
               :              :     :                 +- FileScan parquet default.date_dim[d_date_sk#59,d_month_seq#64,d_year#51,d_moy#53,d_qoy#52] Batched: true, DataFilters: [isnotnull(d_month_seq#64), (d_month_seq#64 >= 1212), (d_month_seq#64 <= 1223), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
               :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#254]
               :              :        +- *(2) Project [s_store_sk#63, s_store_id#54]
               :              :           +- *(2) Filter isnotnull(s_store_sk#63)
               :              :              +- *(2) ColumnarToRow
               :              :                 +- FileScan parquet default.store[s_store_sk#63,s_store_id#54] Batched: true, DataFilters: [isnotnull(s_store_sk#63)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
               :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#255]
               :                 +- *(3) Project [i_item_sk#61, i_brand#49, i_class#48, i_category#47, i_product_name#50]
               :                    +- *(3) Filter isnotnull(i_item_sk#61)
               :                       +- *(3) ColumnarToRow
               :                          +- FileScan parquet default.item[i_item_sk#61,i_brand#49,i_class#48,i_category#47,i_product_name#50] Batched: true, DataFilters: [isnotnull(i_item_sk#61)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
               :- *(11) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#158, sumsales#159])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, 5), true, [id=#256]
               :     +- *(10) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, sum#257, isEmpty#258])
               :        +- *(10) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#259, isEmpty#260], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(17) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#167, s_store_id#169, sumsales#170])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, 5), true, [id=#261]
               :     +- *(16) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, sum#262, isEmpty#263])
               :        +- *(16) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#264, isEmpty#265], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(23) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#177, d_moy#179, s_store_id#181, sumsales#182])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, 5), true, [id=#266]
               :     +- *(22) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, sum#267, isEmpty#268])
               :        +- *(22) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#269, isEmpty#270], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(29) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#188, d_qoy#190, d_moy#192, s_store_id#194, sumsales#195])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, 5), true, [id=#271]
               :     +- *(28) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, sum#272, isEmpty#273])
               :        +- *(28) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, i_product_name#50, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#274, isEmpty#275], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(35) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, i_product_name#200, d_year#202, d_qoy#204, d_moy#206, s_store_id#208, sumsales#209])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, 5), true, [id=#276]
               :     +- *(34) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#49, sum#277, isEmpty#278])
               :        +- *(34) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, i_brand#49, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#279, isEmpty#280], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(41) HashAggregate(keys=[i_category#47, i_class#48], functions=[sum(sumsales#1)], output=[i_category#47, i_class#48, i_brand#213, i_product_name#215, d_year#217, d_qoy#219, d_moy#221, s_store_id#223, sumsales#224])
               :  +- Exchange hashpartitioning(i_category#47, i_class#48, 5), true, [id=#281]
               :     +- *(40) HashAggregate(keys=[i_category#47, i_class#48], functions=[partial_sum(sumsales#1)], output=[i_category#47, i_class#48, sum#282, isEmpty#283])
               :        +- *(40) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, i_class#48, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#284, isEmpty#285], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               :- *(47) HashAggregate(keys=[i_category#47], functions=[sum(sumsales#1)], output=[i_category#47, i_class#227, i_brand#229, i_product_name#231, d_year#233, d_qoy#235, d_moy#237, s_store_id#239, sumsales#240])
               :  +- Exchange hashpartitioning(i_category#47, 5), true, [id=#286]
               :     +- *(46) HashAggregate(keys=[i_category#47], functions=[partial_sum(sumsales#1)], output=[i_category#47, sum#287, isEmpty#288])
               :        +- *(46) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#47, sumsales#1])
               :           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#289, isEmpty#290], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]
               +- *(53) HashAggregate(keys=[], functions=[sum(sumsales#1)], output=[i_category#241, i_class#242, i_brand#243, i_product_name#244, d_year#245, d_qoy#246, d_moy#247, s_store_id#248, sumsales#45])
                  +- Exchange SinglePartition, true, [id=#291]
                     +- *(52) HashAggregate(keys=[], functions=[partial_sum(sumsales#1)], output=[sum#292, isEmpty#293])
                        +- *(52) HashAggregate(keys=[i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#56 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#57 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[sumsales#1])
                           +- ReusedExchange [i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, sum#294, isEmpty#295], Exchange hashpartitioning(i_category#47, i_class#48, i_brand#49, i_product_name#50, d_year#51, d_qoy#52, d_moy#53, s_store_id#54, 5), true, [id=#250]

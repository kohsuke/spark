== Parsed Logical Plan ==
CTE [ssr, csr, wsr, results]
:  :- 'SubqueryAlias ssr
:  :  +- 'Aggregate ['s_store_id], ['s_store_id, 'sum('sales_price) AS sales#1, 'sum('profit) AS profit#2, 'sum('return_amt) AS returns#3, 'sum('net_loss) AS profit_loss#4]
:  :     +- 'Filter ((('date_sk = 'd_date_sk) AND (('d_date >= cast(1998-08-04 as date)) AND ('d_date <= (cast(1998-08-04 as date) + 14 days)))) AND ('store_sk = 's_store_sk))
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'SubqueryAlias salesreturns
:  :           :  :  +- 'Union
:  :           :  :     :- 'Project ['ss_store_sk AS store_sk#5, 'ss_sold_date_sk AS date_sk#6, 'ss_ext_sales_price AS sales_price#7, 'ss_net_profit AS profit#8, cast(0 as decimal(7,2)) AS return_amt#9, cast(0 as decimal(7,2)) AS net_loss#10]
:  :           :  :     :  +- 'UnresolvedRelation [store_sales]
:  :           :  :     +- 'Project ['sr_store_sk AS store_sk#11, 'sr_returned_date_sk AS date_sk#12, cast(0 as decimal(7,2)) AS sales_price#13, cast(0 as decimal(7,2)) AS profit#14, 'sr_return_amt AS return_amt#15, 'sr_net_loss AS net_loss#16]
:  :           :  :        +- 'UnresolvedRelation [store_returns]
:  :           :  +- 'UnresolvedRelation [date_dim]
:  :           +- 'UnresolvedRelation [store]
:  :- 'SubqueryAlias csr
:  :  +- 'Aggregate ['cp_catalog_page_id], ['cp_catalog_page_id, 'sum('sales_price) AS sales#17, 'sum('profit) AS profit#18, 'sum('return_amt) AS returns#19, 'sum('net_loss) AS profit_loss#20]
:  :     +- 'Filter ((('date_sk = 'd_date_sk) AND (('d_date >= cast(1998-08-04 as date)) AND ('d_date <= (cast(1998-08-04 as date) + 14 days)))) AND ('page_sk = 'cp_catalog_page_sk))
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'SubqueryAlias salesreturns
:  :           :  :  +- 'Union
:  :           :  :     :- 'Project ['cs_catalog_page_sk AS page_sk#21, 'cs_sold_date_sk AS date_sk#22, 'cs_ext_sales_price AS sales_price#23, 'cs_net_profit AS profit#24, cast(0 as decimal(7,2)) AS return_amt#25, cast(0 as decimal(7,2)) AS net_loss#26]
:  :           :  :     :  +- 'UnresolvedRelation [catalog_sales]
:  :           :  :     +- 'Project ['cr_catalog_page_sk AS page_sk#27, 'cr_returned_date_sk AS date_sk#28, cast(0 as decimal(7,2)) AS sales_price#29, cast(0 as decimal(7,2)) AS profit#30, 'cr_return_amount AS return_amt#31, 'cr_net_loss AS net_loss#32]
:  :           :  :        +- 'UnresolvedRelation [catalog_returns]
:  :           :  +- 'UnresolvedRelation [date_dim]
:  :           +- 'UnresolvedRelation [catalog_page]
:  :- 'SubqueryAlias wsr
:  :  +- 'Aggregate ['web_site_id], ['web_site_id, 'sum('sales_price) AS sales#33, 'sum('profit) AS profit#34, 'sum('return_amt) AS returns#35, 'sum('net_loss) AS profit_loss#36]
:  :     +- 'Filter ((('date_sk = 'd_date_sk) AND (('d_date >= cast(1998-08-04 as date)) AND ('d_date <= (cast(1998-08-04 as date) + 14 days)))) AND ('wsr_web_site_sk = 'web_site_sk))
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'SubqueryAlias salesreturns
:  :           :  :  +- 'Union
:  :           :  :     :- 'Project ['ws_web_site_sk AS wsr_web_site_sk#37, 'ws_sold_date_sk AS date_sk#38, 'ws_ext_sales_price AS sales_price#39, 'ws_net_profit AS profit#40, cast(0 as decimal(7,2)) AS return_amt#41, cast(0 as decimal(7,2)) AS net_loss#42]
:  :           :  :     :  +- 'UnresolvedRelation [web_sales]
:  :           :  :     +- 'Project ['ws_web_site_sk AS wsr_web_site_sk#43, 'wr_returned_date_sk AS date_sk#44, cast(0 as decimal(7,2)) AS sales_price#45, cast(0 as decimal(7,2)) AS profit#46, 'wr_return_amt AS return_amt#47, 'wr_net_loss AS net_loss#48]
:  :           :  :        +- 'Join LeftOuter, (('wr_item_sk = 'ws_item_sk) AND ('wr_order_number = 'ws_order_number))
:  :           :  :           :- 'UnresolvedRelation [web_returns]
:  :           :  :           +- 'UnresolvedRelation [web_sales]
:  :           :  +- 'UnresolvedRelation [date_dim]
:  :           +- 'UnresolvedRelation [web_site]
:  +- 'SubqueryAlias results
:     +- 'Aggregate ['channel, 'id], ['channel, 'id, 'sum('sales) AS sales#49, 'sum('returns) AS returns#50, 'sum('profit) AS profit#51]
:        +- 'SubqueryAlias x
:           +- 'Union
:              :- 'Union
:              :  :- 'Project [store channel AS channel#52, concat(store, 's_store_id) AS id#53, 'sales, 'returns, ('profit - 'profit_loss) AS profit#54]
:              :  :  +- 'UnresolvedRelation [ssr]
:              :  +- 'Project [catalog channel AS channel#55, concat(catalog_page, 'cp_catalog_page_id) AS id#56, 'sales, 'returns, ('profit - 'profit_loss) AS profit#57]
:              :     +- 'UnresolvedRelation [csr]
:              +- 'Project [web channel AS channel#58, concat(web_site, 'web_site_id) AS id#59, 'sales, 'returns, ('profit - 'profit_loss) AS profit#60]
:                 +- 'UnresolvedRelation [wsr]
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['channel ASC NULLS FIRST, 'id ASC NULLS FIRST], true
         +- 'Project ['channel, 'id, 'sales, 'returns, 'profit]
            +- 'SubqueryAlias foo
               +- 'Distinct
                  +- 'Union
                     :- 'Distinct
                     :  +- 'Union
                     :     :- 'Project ['channel, 'id, 'sales, 'returns, 'profit]
                     :     :  +- 'UnresolvedRelation [results]
                     :     +- 'Aggregate ['channel], ['channel, null AS id#61, unresolvedalias('sum('sales), None), unresolvedalias('sum('returns), None), unresolvedalias('sum('profit), None)]
                     :        +- 'UnresolvedRelation [results]
                     +- 'Project [null AS channel#62, null AS id#63, unresolvedalias('sum('sales), None), unresolvedalias('sum('returns), None), unresolvedalias('sum('profit), None)]
                        +- 'UnresolvedRelation [results]

== Analyzed Logical Plan ==
channel: string, id: string, sales: decimal(37,2), returns: decimal(37,2), profit: decimal(38,2)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [channel#52 ASC NULLS FIRST, id#53 ASC NULLS FIRST], true
      +- Project [channel#52, id#53, sales#64, returns#65, profit#66]
         +- SubqueryAlias foo
            +- Distinct
               +- Union
                  :- Project [channel#52, id#53, sales#64, returns#65, profit#66]
                  :  +- Distinct
                  :     +- Union
                  :        :- Project [channel#52, id#53, cast(sales#49 as decimal(37,2)) AS sales#64, cast(returns#50 as decimal(37,2)) AS returns#65, cast(profit#51 as decimal(38,2)) AS profit#66]
                  :        :  +- Project [channel#52, id#53, sales#49, returns#50, profit#51]
                  :        :     +- SubqueryAlias results
                  :        :        +- Aggregate [channel#52, id#53], [channel#52, id#53, sum(sales#1) AS sales#49, sum(returns#3) AS returns#50, sum(profit#67) AS profit#51]
                  :        :           +- SubqueryAlias x
                  :        :              +- Union
                  :        :                 :- Project [channel#52, id#53, sales#1, returns#3, profit#67]
                  :        :                 :  +- Union
                  :        :                 :     :- Project [channel#52, id#53, sales#1, returns#3, cast(profit#54 as decimal(18,2)) AS profit#67]
                  :        :                 :     :  +- Project [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, sales#1, returns#3, CheckOverflow((promote_precision(cast(profit#2 as decimal(18,2))) - promote_precision(cast(profit_loss#4 as decimal(18,2)))), DecimalType(18,2), true) AS profit#54]
                  :        :                 :     :     +- SubqueryAlias ssr
                  :        :                 :     :        +- Aggregate [s_store_id#68], [s_store_id#68, sum(sales_price#7) AS sales#1, sum(profit#8) AS profit#2, sum(return_amt#9) AS returns#3, sum(net_loss#10) AS profit_loss#4]
                  :        :                 :     :           +- Filter (((date_sk#69 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (store_sk#72 = cast(s_store_sk#73 as bigint)))
                  :        :                 :     :              +- Join Inner
                  :        :                 :     :                 :- Join Inner
                  :        :                 :     :                 :  :- SubqueryAlias salesreturns
                  :        :                 :     :                 :  :  +- Union
                  :        :                 :     :                 :  :     :- Project [cast(store_sk#5 as bigint) AS store_sk#72, cast(date_sk#6 as bigint) AS date_sk#69, sales_price#7, profit#8, return_amt#9, net_loss#10]
                  :        :                 :     :                 :  :     :  +- Project [ss_store_sk#74 AS store_sk#5, ss_sold_date_sk#75 AS date_sk#6, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, cast(0 as decimal(7,2)) AS return_amt#9, cast(0 as decimal(7,2)) AS net_loss#10]
                  :        :                 :     :                 :  :     :     +- SubqueryAlias spark_catalog.default.store_sales
                  :        :                 :     :                 :  :     :        +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
                  :        :                 :     :                 :  :     +- Project [store_sk#97, date_sk#98, sales_price#13, profit#14, return_amt#15, net_loss#16]
                  :        :                 :     :                 :  :        +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, cast(0 as decimal(7,2)) AS sales_price#13, cast(0 as decimal(7,2)) AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
                  :        :                 :     :                 :  :           +- SubqueryAlias spark_catalog.default.store_returns
                  :        :                 :     :                 :  :              +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
                  :        :                 :     :                 :  +- SubqueryAlias spark_catalog.default.date_dim
                  :        :                 :     :                 :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :        :                 :     :                 +- SubqueryAlias spark_catalog.default.store
                  :        :                 :     :                    +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
                  :        :                 :     +- Project [channel#55, id#56, sales#17, returns#19, profit#57]
                  :        :                 :        +- Project [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, sales#17, returns#19, CheckOverflow((promote_precision(cast(profit#18 as decimal(18,2))) - promote_precision(cast(profit_loss#20 as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
                  :        :                 :           +- SubqueryAlias csr
                  :        :                 :              +- Aggregate [cp_catalog_page_id#172], [cp_catalog_page_id#172, sum(sales_price#23) AS sales#17, sum(profit#24) AS profit#18, sum(return_amt#25) AS returns#19, sum(net_loss#26) AS profit_loss#20]
                  :        :                 :                 +- Filter (((date_sk#22 = d_date_sk#70) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (page_sk#21 = cp_catalog_page_sk#173))
                  :        :                 :                    +- Join Inner
                  :        :                 :                       :- Join Inner
                  :        :                 :                       :  :- SubqueryAlias salesreturns
                  :        :                 :                       :  :  +- Union
                  :        :                 :                       :  :     :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, cast(0 as decimal(7,2)) AS return_amt#25, cast(0 as decimal(7,2)) AS net_loss#26]
                  :        :                 :                       :  :     :  +- SubqueryAlias spark_catalog.default.catalog_sales
                  :        :                 :                       :  :     :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
                  :        :                 :                       :  :     +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, cast(0 as decimal(7,2)) AS sales_price#29, cast(0 as decimal(7,2)) AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
                  :        :                 :                       :  :        +- SubqueryAlias spark_catalog.default.catalog_returns
                  :        :                 :                       :  :           +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
                  :        :                 :                       :  +- SubqueryAlias spark_catalog.default.date_dim
                  :        :                 :                       :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :        :                 :                       +- SubqueryAlias spark_catalog.default.catalog_page
                  :        :                 :                          +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
                  :        :                 +- Project [channel#58, id#59, sales#33, returns#35, cast(profit#60 as decimal(18,2)) AS profit#242]
                  :        :                    +- Project [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, sales#33, returns#35, CheckOverflow((promote_precision(cast(profit#34 as decimal(18,2))) - promote_precision(cast(profit_loss#36 as decimal(18,2)))), DecimalType(18,2), true) AS profit#60]
                  :        :                       +- SubqueryAlias wsr
                  :        :                          +- Aggregate [web_site_id#243], [web_site_id#243, sum(sales_price#39) AS sales#33, sum(profit#40) AS profit#34, sum(return_amt#41) AS returns#35, sum(net_loss#42) AS profit_loss#36]
                  :        :                             +- Filter (((date_sk#244 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (wsr_web_site_sk#37 = web_site_sk#245))
                  :        :                                +- Join Inner
                  :        :                                   :- Join Inner
                  :        :                                   :  :- SubqueryAlias salesreturns
                  :        :                                   :  :  +- Union
                  :        :                                   :  :     :- Project [wsr_web_site_sk#37, cast(date_sk#38 as bigint) AS date_sk#244, sales_price#39, profit#40, return_amt#41, net_loss#42]
                  :        :                                   :  :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, ws_sold_date_sk#247 AS date_sk#38, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, cast(0 as decimal(7,2)) AS return_amt#41, cast(0 as decimal(7,2)) AS net_loss#42]
                  :        :                                   :  :     :     +- SubqueryAlias spark_catalog.default.web_sales
                  :        :                                   :  :     :        +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                  :        :                                   :  :     +- Project [wsr_web_site_sk#43, date_sk#280, sales_price#45, profit#46, return_amt#47, net_loss#48]
                  :        :                                   :  :        +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, cast(0 as decimal(7,2)) AS sales_price#45, cast(0 as decimal(7,2)) AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
                  :        :                                   :  :           +- Join LeftOuter, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
                  :        :                                   :  :              :- SubqueryAlias spark_catalog.default.web_returns
                  :        :                                   :  :              :  +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
                  :        :                                   :  :              +- SubqueryAlias spark_catalog.default.web_sales
                  :        :                                   :  :                 +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                  :        :                                   :  +- SubqueryAlias spark_catalog.default.date_dim
                  :        :                                   :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :        :                                   +- SubqueryAlias spark_catalog.default.web_site
                  :        :                                      +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet
                  :        +- Project [channel#52 AS channel#329, id#330 AS id#331, sum(sales)#332 AS sum(sales)#333, sum(returns)#334 AS sum(returns)#335, sum(profit)#336 AS sum(profit)#337]
                  :           +- Project [channel#52, cast(id#61 as string) AS id#330, sum(sales)#332, sum(returns)#334, sum(profit)#336]
                  :              +- Aggregate [channel#52], [channel#52, null AS id#61, sum(sales#49) AS sum(sales)#332, sum(returns#50) AS sum(returns)#334, sum(profit#51) AS sum(profit)#336]
                  :                 +- SubqueryAlias results
                  :                    +- Aggregate [channel#52, id#53], [channel#52, id#53, sum(sales#1) AS sales#49, sum(returns#3) AS returns#50, sum(profit#338) AS profit#51]
                  :                       +- SubqueryAlias x
                  :                          +- Union
                  :                             :- Project [channel#52, id#53, sales#1, returns#3, profit#338]
                  :                             :  +- Union
                  :                             :     :- Project [channel#52, id#53, sales#1, returns#3, cast(profit#54 as decimal(18,2)) AS profit#338]
                  :                             :     :  +- Project [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, sales#1, returns#3, CheckOverflow((promote_precision(cast(profit#2 as decimal(18,2))) - promote_precision(cast(profit_loss#4 as decimal(18,2)))), DecimalType(18,2), true) AS profit#54]
                  :                             :     :     +- SubqueryAlias ssr
                  :                             :     :        +- Aggregate [s_store_id#68], [s_store_id#68, sum(sales_price#7) AS sales#1, sum(profit#8) AS profit#2, sum(return_amt#9) AS returns#3, sum(net_loss#10) AS profit_loss#4]
                  :                             :     :           +- Filter (((date_sk#339 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (store_sk#340 = cast(s_store_sk#73 as bigint)))
                  :                             :     :              +- Join Inner
                  :                             :     :                 :- Join Inner
                  :                             :     :                 :  :- SubqueryAlias salesreturns
                  :                             :     :                 :  :  +- Union
                  :                             :     :                 :  :     :- Project [cast(store_sk#5 as bigint) AS store_sk#340, cast(date_sk#6 as bigint) AS date_sk#339, sales_price#7, profit#8, return_amt#9, net_loss#10]
                  :                             :     :                 :  :     :  +- Project [ss_store_sk#74 AS store_sk#5, ss_sold_date_sk#75 AS date_sk#6, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, cast(0 as decimal(7,2)) AS return_amt#9, cast(0 as decimal(7,2)) AS net_loss#10]
                  :                             :     :                 :  :     :     +- SubqueryAlias spark_catalog.default.store_sales
                  :                             :     :                 :  :     :        +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
                  :                             :     :                 :  :     +- Project [store_sk#97, date_sk#98, sales_price#13, profit#14, return_amt#15, net_loss#16]
                  :                             :     :                 :  :        +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, cast(0 as decimal(7,2)) AS sales_price#13, cast(0 as decimal(7,2)) AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
                  :                             :     :                 :  :           +- SubqueryAlias spark_catalog.default.store_returns
                  :                             :     :                 :  :              +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
                  :                             :     :                 :  +- SubqueryAlias spark_catalog.default.date_dim
                  :                             :     :                 :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :                             :     :                 +- SubqueryAlias spark_catalog.default.store
                  :                             :     :                    +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
                  :                             :     +- Project [channel#55, id#56, sales#17, returns#19, profit#57]
                  :                             :        +- Project [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, sales#17, returns#19, CheckOverflow((promote_precision(cast(profit#18 as decimal(18,2))) - promote_precision(cast(profit_loss#20 as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
                  :                             :           +- SubqueryAlias csr
                  :                             :              +- Aggregate [cp_catalog_page_id#172], [cp_catalog_page_id#172, sum(sales_price#23) AS sales#17, sum(profit#24) AS profit#18, sum(return_amt#25) AS returns#19, sum(net_loss#26) AS profit_loss#20]
                  :                             :                 +- Filter (((date_sk#22 = d_date_sk#70) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (page_sk#21 = cp_catalog_page_sk#173))
                  :                             :                    +- Join Inner
                  :                             :                       :- Join Inner
                  :                             :                       :  :- SubqueryAlias salesreturns
                  :                             :                       :  :  +- Union
                  :                             :                       :  :     :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, cast(0 as decimal(7,2)) AS return_amt#25, cast(0 as decimal(7,2)) AS net_loss#26]
                  :                             :                       :  :     :  +- SubqueryAlias spark_catalog.default.catalog_sales
                  :                             :                       :  :     :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
                  :                             :                       :  :     +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, cast(0 as decimal(7,2)) AS sales_price#29, cast(0 as decimal(7,2)) AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
                  :                             :                       :  :        +- SubqueryAlias spark_catalog.default.catalog_returns
                  :                             :                       :  :           +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
                  :                             :                       :  +- SubqueryAlias spark_catalog.default.date_dim
                  :                             :                       :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :                             :                       +- SubqueryAlias spark_catalog.default.catalog_page
                  :                             :                          +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
                  :                             +- Project [channel#58, id#59, sales#33, returns#35, cast(profit#60 as decimal(18,2)) AS profit#341]
                  :                                +- Project [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, sales#33, returns#35, CheckOverflow((promote_precision(cast(profit#34 as decimal(18,2))) - promote_precision(cast(profit_loss#36 as decimal(18,2)))), DecimalType(18,2), true) AS profit#60]
                  :                                   +- SubqueryAlias wsr
                  :                                      +- Aggregate [web_site_id#243], [web_site_id#243, sum(sales_price#39) AS sales#33, sum(profit#40) AS profit#34, sum(return_amt#41) AS returns#35, sum(net_loss#42) AS profit_loss#36]
                  :                                         +- Filter (((date_sk#342 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (wsr_web_site_sk#37 = web_site_sk#245))
                  :                                            +- Join Inner
                  :                                               :- Join Inner
                  :                                               :  :- SubqueryAlias salesreturns
                  :                                               :  :  +- Union
                  :                                               :  :     :- Project [wsr_web_site_sk#37, cast(date_sk#38 as bigint) AS date_sk#342, sales_price#39, profit#40, return_amt#41, net_loss#42]
                  :                                               :  :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, ws_sold_date_sk#247 AS date_sk#38, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, cast(0 as decimal(7,2)) AS return_amt#41, cast(0 as decimal(7,2)) AS net_loss#42]
                  :                                               :  :     :     +- SubqueryAlias spark_catalog.default.web_sales
                  :                                               :  :     :        +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                  :                                               :  :     +- Project [wsr_web_site_sk#43, date_sk#280, sales_price#45, profit#46, return_amt#47, net_loss#48]
                  :                                               :  :        +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, cast(0 as decimal(7,2)) AS sales_price#45, cast(0 as decimal(7,2)) AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
                  :                                               :  :           +- Join LeftOuter, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
                  :                                               :  :              :- SubqueryAlias spark_catalog.default.web_returns
                  :                                               :  :              :  +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
                  :                                               :  :              +- SubqueryAlias spark_catalog.default.web_sales
                  :                                               :  :                 +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                  :                                               :  +- SubqueryAlias spark_catalog.default.date_dim
                  :                                               :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                  :                                               +- SubqueryAlias spark_catalog.default.web_site
                  :                                                  +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet
                  +- Project [cast(channel#62 as string) AS channel#343, cast(id#63 as string) AS id#344, sum(sales)#345, sum(returns)#346, sum(profit)#347]
                     +- Aggregate [null AS channel#62, null AS id#63, sum(sales#49) AS sum(sales)#345, sum(returns#50) AS sum(returns)#346, sum(profit#51) AS sum(profit)#347]
                        +- SubqueryAlias results
                           +- Aggregate [channel#52, id#53], [channel#52, id#53, sum(sales#1) AS sales#49, sum(returns#3) AS returns#50, sum(profit#348) AS profit#51]
                              +- SubqueryAlias x
                                 +- Union
                                    :- Project [channel#52, id#53, sales#1, returns#3, profit#348]
                                    :  +- Union
                                    :     :- Project [channel#52, id#53, sales#1, returns#3, cast(profit#54 as decimal(18,2)) AS profit#348]
                                    :     :  +- Project [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, sales#1, returns#3, CheckOverflow((promote_precision(cast(profit#2 as decimal(18,2))) - promote_precision(cast(profit_loss#4 as decimal(18,2)))), DecimalType(18,2), true) AS profit#54]
                                    :     :     +- SubqueryAlias ssr
                                    :     :        +- Aggregate [s_store_id#68], [s_store_id#68, sum(sales_price#7) AS sales#1, sum(profit#8) AS profit#2, sum(return_amt#9) AS returns#3, sum(net_loss#10) AS profit_loss#4]
                                    :     :           +- Filter (((date_sk#349 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (store_sk#350 = cast(s_store_sk#73 as bigint)))
                                    :     :              +- Join Inner
                                    :     :                 :- Join Inner
                                    :     :                 :  :- SubqueryAlias salesreturns
                                    :     :                 :  :  +- Union
                                    :     :                 :  :     :- Project [cast(store_sk#5 as bigint) AS store_sk#350, cast(date_sk#6 as bigint) AS date_sk#349, sales_price#7, profit#8, return_amt#9, net_loss#10]
                                    :     :                 :  :     :  +- Project [ss_store_sk#74 AS store_sk#5, ss_sold_date_sk#75 AS date_sk#6, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, cast(0 as decimal(7,2)) AS return_amt#9, cast(0 as decimal(7,2)) AS net_loss#10]
                                    :     :                 :  :     :     +- SubqueryAlias spark_catalog.default.store_sales
                                    :     :                 :  :     :        +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
                                    :     :                 :  :     +- Project [store_sk#97, date_sk#98, sales_price#13, profit#14, return_amt#15, net_loss#16]
                                    :     :                 :  :        +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, cast(0 as decimal(7,2)) AS sales_price#13, cast(0 as decimal(7,2)) AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
                                    :     :                 :  :           +- SubqueryAlias spark_catalog.default.store_returns
                                    :     :                 :  :              +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
                                    :     :                 :  +- SubqueryAlias spark_catalog.default.date_dim
                                    :     :                 :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                                    :     :                 +- SubqueryAlias spark_catalog.default.store
                                    :     :                    +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
                                    :     +- Project [channel#55, id#56, sales#17, returns#19, profit#57]
                                    :        +- Project [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, sales#17, returns#19, CheckOverflow((promote_precision(cast(profit#18 as decimal(18,2))) - promote_precision(cast(profit_loss#20 as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
                                    :           +- SubqueryAlias csr
                                    :              +- Aggregate [cp_catalog_page_id#172], [cp_catalog_page_id#172, sum(sales_price#23) AS sales#17, sum(profit#24) AS profit#18, sum(return_amt#25) AS returns#19, sum(net_loss#26) AS profit_loss#20]
                                    :                 +- Filter (((date_sk#22 = d_date_sk#70) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (page_sk#21 = cp_catalog_page_sk#173))
                                    :                    +- Join Inner
                                    :                       :- Join Inner
                                    :                       :  :- SubqueryAlias salesreturns
                                    :                       :  :  +- Union
                                    :                       :  :     :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, cast(0 as decimal(7,2)) AS return_amt#25, cast(0 as decimal(7,2)) AS net_loss#26]
                                    :                       :  :     :  +- SubqueryAlias spark_catalog.default.catalog_sales
                                    :                       :  :     :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
                                    :                       :  :     +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, cast(0 as decimal(7,2)) AS sales_price#29, cast(0 as decimal(7,2)) AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
                                    :                       :  :        +- SubqueryAlias spark_catalog.default.catalog_returns
                                    :                       :  :           +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
                                    :                       :  +- SubqueryAlias spark_catalog.default.date_dim
                                    :                       :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                                    :                       +- SubqueryAlias spark_catalog.default.catalog_page
                                    :                          +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
                                    +- Project [channel#58, id#59, sales#33, returns#35, cast(profit#60 as decimal(18,2)) AS profit#351]
                                       +- Project [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, sales#33, returns#35, CheckOverflow((promote_precision(cast(profit#34 as decimal(18,2))) - promote_precision(cast(profit_loss#36 as decimal(18,2)))), DecimalType(18,2), true) AS profit#60]
                                          +- SubqueryAlias wsr
                                             +- Aggregate [web_site_id#243], [web_site_id#243, sum(sales_price#39) AS sales#33, sum(profit#40) AS profit#34, sum(return_amt#41) AS returns#35, sum(net_loss#42) AS profit_loss#36]
                                                +- Filter (((date_sk#352 = cast(d_date_sk#70 as bigint)) AND ((d_date#71 >= cast(1998-08-04 as date)) AND (d_date#71 <= cast(1998-08-04 as date) + 14 days))) AND (wsr_web_site_sk#37 = web_site_sk#245))
                                                   +- Join Inner
                                                      :- Join Inner
                                                      :  :- SubqueryAlias salesreturns
                                                      :  :  +- Union
                                                      :  :     :- Project [wsr_web_site_sk#37, cast(date_sk#38 as bigint) AS date_sk#352, sales_price#39, profit#40, return_amt#41, net_loss#42]
                                                      :  :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, ws_sold_date_sk#247 AS date_sk#38, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, cast(0 as decimal(7,2)) AS return_amt#41, cast(0 as decimal(7,2)) AS net_loss#42]
                                                      :  :     :     +- SubqueryAlias spark_catalog.default.web_sales
                                                      :  :     :        +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                                                      :  :     +- Project [wsr_web_site_sk#43, date_sk#280, sales_price#45, profit#46, return_amt#47, net_loss#48]
                                                      :  :        +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, cast(0 as decimal(7,2)) AS sales_price#45, cast(0 as decimal(7,2)) AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
                                                      :  :           +- Join LeftOuter, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
                                                      :  :              :- SubqueryAlias spark_catalog.default.web_returns
                                                      :  :              :  +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
                                                      :  :              +- SubqueryAlias spark_catalog.default.web_sales
                                                      :  :                 +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                                                      :  +- SubqueryAlias spark_catalog.default.date_dim
                                                      :     +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                                                      +- SubqueryAlias spark_catalog.default.web_site
                                                         +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [channel#52 ASC NULLS FIRST, id#53 ASC NULLS FIRST], true
      +- Aggregate [channel#52, id#53, sales#64, returns#65, profit#66], [channel#52, id#53, sales#64, returns#65, profit#66]
         +- Union
            :- Aggregate [channel#52, id#53, sales#64, returns#65, profit#66], [channel#52, id#53, sales#64, returns#65, profit#66]
            :  +- Union
            :     :- Aggregate [channel#52, id#53], [channel#52, id#53, cast(sum(sales#1) as decimal(37,2)) AS sales#64, cast(sum(returns#3) as decimal(37,2)) AS returns#65, cast(sum(profit#67) as decimal(38,2)) AS profit#66]
            :     :  +- Union
            :     :     :- Aggregate [s_store_id#68], [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, MakeDecimal(sum(UnscaledValue(sales_price#7)),17,2) AS sales#1, MakeDecimal(sum(UnscaledValue(return_amt#9)),17,2) AS returns#3, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#8)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#10)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#67]
            :     :     :  +- Project [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#68]
            :     :     :     +- Join Inner, (store_sk#72 = cast(s_store_sk#73 as bigint))
            :     :     :        :- Project [store_sk#72, sales_price#7, profit#8, return_amt#9, net_loss#10]
            :     :     :        :  +- Join Inner, (date_sk#69 = cast(d_date_sk#70 as bigint))
            :     :     :        :     :- Union
            :     :     :        :     :  :- Project [cast(ss_store_sk#74 as bigint) AS store_sk#72, cast(ss_sold_date_sk#75 as bigint) AS date_sk#69, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, 0.00 AS return_amt#9, 0.00 AS net_loss#10]
            :     :     :        :     :  :  +- Filter (isnotnull(cast(ss_sold_date_sk#75 as bigint)) AND isnotnull(cast(ss_store_sk#74 as bigint)))
            :     :     :        :     :  :     +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
            :     :     :        :     :  +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, 0.00 AS sales_price#13, 0.00 AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
            :     :     :        :     :     +- Filter (isnotnull(sr_returned_date_sk#100) AND isnotnull(sr_store_sk#99))
            :     :     :        :     :        +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
            :     :     :        :     +- Project [d_date_sk#70]
            :     :     :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :     :     :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :     :     :        +- Project [s_store_sk#73, s_store_id#68]
            :     :     :           +- Filter isnotnull(s_store_sk#73)
            :     :     :              +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
            :     :     :- Aggregate [cp_catalog_page_id#172], [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, MakeDecimal(sum(UnscaledValue(sales_price#23)),17,2) AS sales#17, MakeDecimal(sum(UnscaledValue(return_amt#25)),17,2) AS returns#19, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#24)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#26)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
            :     :     :  +- Project [sales_price#23, profit#24, return_amt#25, net_loss#26, cp_catalog_page_id#172]
            :     :     :     +- Join Inner, (page_sk#21 = cp_catalog_page_sk#173)
            :     :     :        :- Project [page_sk#21, sales_price#23, profit#24, return_amt#25, net_loss#26]
            :     :     :        :  +- Join Inner, (date_sk#22 = d_date_sk#70)
            :     :     :        :     :- Union
            :     :     :        :     :  :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, 0.00 AS return_amt#25, 0.00 AS net_loss#26]
            :     :     :        :     :  :  +- Filter (isnotnull(cs_sold_date_sk#175) AND isnotnull(cs_catalog_page_sk#174))
            :     :     :        :     :  :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
            :     :     :        :     :  +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, 0.00 AS sales_price#29, 0.00 AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
            :     :     :        :     :     +- Filter (isnotnull(cr_returned_date_sk#209) AND isnotnull(cr_catalog_page_sk#208))
            :     :     :        :     :        +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
            :     :     :        :     +- Project [d_date_sk#70]
            :     :     :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :     :     :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :     :     :        +- Project [cp_catalog_page_sk#173, cp_catalog_page_id#172]
            :     :     :           +- Filter isnotnull(cp_catalog_page_sk#173)
            :     :     :              +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
            :     :     +- Aggregate [web_site_id#243], [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, MakeDecimal(sum(UnscaledValue(sales_price#39)),17,2) AS sales#33, MakeDecimal(sum(UnscaledValue(return_amt#41)),17,2) AS returns#35, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#40)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#42)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#242]
            :     :        +- Project [sales_price#39, profit#40, return_amt#41, net_loss#42, web_site_id#243]
            :     :           +- Join Inner, (wsr_web_site_sk#37 = web_site_sk#245)
            :     :              :- Project [wsr_web_site_sk#37, sales_price#39, profit#40, return_amt#41, net_loss#42]
            :     :              :  +- Join Inner, (date_sk#244 = cast(d_date_sk#70 as bigint))
            :     :              :     :- Union
            :     :              :     :  :- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, cast(ws_sold_date_sk#247 as bigint) AS date_sk#244, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, 0.00 AS return_amt#41, 0.00 AS net_loss#42]
            :     :              :     :  :  +- Filter (isnotnull(cast(ws_sold_date_sk#247 as bigint)) AND isnotnull(ws_web_site_sk#246))
            :     :              :     :  :     +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
            :     :              :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, 0.00 AS sales_price#45, 0.00 AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
            :     :              :     :     +- Join Inner, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
            :     :              :     :        :- Project [wr_returned_date_sk#281, wr_item_sk#284, wr_order_number#285, wr_return_amt#282, wr_net_loss#283]
            :     :              :     :        :  +- Filter isnotnull(wr_returned_date_sk#281)
            :     :              :     :        :     +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
            :     :              :     :        +- Project [ws_item_sk#252, ws_web_site_sk#246, ws_order_number#265]
            :     :              :     :           +- Filter ((isnotnull(ws_item_sk#252) AND isnotnull(ws_order_number#265)) AND isnotnull(ws_web_site_sk#246))
            :     :              :     :              +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
            :     :              :     +- Project [d_date_sk#70]
            :     :              :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :     :              :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :     :              +- Project [web_site_sk#245, web_site_id#243]
            :     :                 +- Filter isnotnull(web_site_sk#245)
            :     :                    +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet
            :     +- Aggregate [channel#52], [channel#52, null AS id#331, sum(sales#49) AS sum(sales)#333, sum(returns#50) AS sum(returns)#335, sum(profit#51) AS sum(profit)#337]
            :        +- Aggregate [channel#52, id#53], [channel#52, sum(sales#1) AS sales#49, sum(returns#3) AS returns#50, sum(profit#338) AS profit#51]
            :           +- Union
            :              :- Aggregate [s_store_id#68], [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, MakeDecimal(sum(UnscaledValue(sales_price#7)),17,2) AS sales#1, MakeDecimal(sum(UnscaledValue(return_amt#9)),17,2) AS returns#3, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#8)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#10)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#338]
            :              :  +- Project [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#68]
            :              :     +- Join Inner, (store_sk#340 = cast(s_store_sk#73 as bigint))
            :              :        :- Project [store_sk#340, sales_price#7, profit#8, return_amt#9, net_loss#10]
            :              :        :  +- Join Inner, (date_sk#339 = cast(d_date_sk#70 as bigint))
            :              :        :     :- Union
            :              :        :     :  :- Project [cast(ss_store_sk#74 as bigint) AS store_sk#340, cast(ss_sold_date_sk#75 as bigint) AS date_sk#339, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, 0.00 AS return_amt#9, 0.00 AS net_loss#10]
            :              :        :     :  :  +- Filter (isnotnull(cast(ss_sold_date_sk#75 as bigint)) AND isnotnull(cast(ss_store_sk#74 as bigint)))
            :              :        :     :  :     +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
            :              :        :     :  +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, 0.00 AS sales_price#13, 0.00 AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
            :              :        :     :     +- Filter (isnotnull(sr_returned_date_sk#100) AND isnotnull(sr_store_sk#99))
            :              :        :     :        +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
            :              :        :     +- Project [d_date_sk#70]
            :              :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :              :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :              :        +- Project [s_store_sk#73, s_store_id#68]
            :              :           +- Filter isnotnull(s_store_sk#73)
            :              :              +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
            :              :- Aggregate [cp_catalog_page_id#172], [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, MakeDecimal(sum(UnscaledValue(sales_price#23)),17,2) AS sales#17, MakeDecimal(sum(UnscaledValue(return_amt#25)),17,2) AS returns#19, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#24)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#26)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
            :              :  +- Project [sales_price#23, profit#24, return_amt#25, net_loss#26, cp_catalog_page_id#172]
            :              :     +- Join Inner, (page_sk#21 = cp_catalog_page_sk#173)
            :              :        :- Project [page_sk#21, sales_price#23, profit#24, return_amt#25, net_loss#26]
            :              :        :  +- Join Inner, (date_sk#22 = d_date_sk#70)
            :              :        :     :- Union
            :              :        :     :  :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, 0.00 AS return_amt#25, 0.00 AS net_loss#26]
            :              :        :     :  :  +- Filter (isnotnull(cs_sold_date_sk#175) AND isnotnull(cs_catalog_page_sk#174))
            :              :        :     :  :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
            :              :        :     :  +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, 0.00 AS sales_price#29, 0.00 AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
            :              :        :     :     +- Filter (isnotnull(cr_returned_date_sk#209) AND isnotnull(cr_catalog_page_sk#208))
            :              :        :     :        +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
            :              :        :     +- Project [d_date_sk#70]
            :              :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :              :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :              :        +- Project [cp_catalog_page_sk#173, cp_catalog_page_id#172]
            :              :           +- Filter isnotnull(cp_catalog_page_sk#173)
            :              :              +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
            :              +- Aggregate [web_site_id#243], [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, MakeDecimal(sum(UnscaledValue(sales_price#39)),17,2) AS sales#33, MakeDecimal(sum(UnscaledValue(return_amt#41)),17,2) AS returns#35, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#40)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#42)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#341]
            :                 +- Project [sales_price#39, profit#40, return_amt#41, net_loss#42, web_site_id#243]
            :                    +- Join Inner, (wsr_web_site_sk#37 = web_site_sk#245)
            :                       :- Project [wsr_web_site_sk#37, sales_price#39, profit#40, return_amt#41, net_loss#42]
            :                       :  +- Join Inner, (date_sk#342 = cast(d_date_sk#70 as bigint))
            :                       :     :- Union
            :                       :     :  :- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, cast(ws_sold_date_sk#247 as bigint) AS date_sk#342, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, 0.00 AS return_amt#41, 0.00 AS net_loss#42]
            :                       :     :  :  +- Filter (isnotnull(cast(ws_sold_date_sk#247 as bigint)) AND isnotnull(ws_web_site_sk#246))
            :                       :     :  :     +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
            :                       :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, 0.00 AS sales_price#45, 0.00 AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
            :                       :     :     +- Join Inner, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
            :                       :     :        :- Project [wr_returned_date_sk#281, wr_item_sk#284, wr_order_number#285, wr_return_amt#282, wr_net_loss#283]
            :                       :     :        :  +- Filter isnotnull(wr_returned_date_sk#281)
            :                       :     :        :     +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
            :                       :     :        +- Project [ws_item_sk#252, ws_web_site_sk#246, ws_order_number#265]
            :                       :     :           +- Filter ((isnotnull(ws_item_sk#252) AND isnotnull(ws_order_number#265)) AND isnotnull(ws_web_site_sk#246))
            :                       :     :              +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
            :                       :     +- Project [d_date_sk#70]
            :                       :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :                       :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
            :                       +- Project [web_site_sk#245, web_site_id#243]
            :                          +- Filter isnotnull(web_site_sk#245)
            :                             +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet
            +- Aggregate [null AS channel#343, null AS id#344, sum(sales#49) AS sum(sales)#345, sum(returns#50) AS sum(returns)#346, sum(profit#51) AS sum(profit)#347]
               +- Aggregate [channel#52, id#53], [sum(sales#1) AS sales#49, sum(returns#3) AS returns#50, sum(profit#348) AS profit#51]
                  +- Union
                     :- Aggregate [s_store_id#68], [store channel AS channel#52, concat(store, s_store_id#68) AS id#53, MakeDecimal(sum(UnscaledValue(sales_price#7)),17,2) AS sales#1, MakeDecimal(sum(UnscaledValue(return_amt#9)),17,2) AS returns#3, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#8)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#10)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#348]
                     :  +- Project [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#68]
                     :     +- Join Inner, (store_sk#350 = cast(s_store_sk#73 as bigint))
                     :        :- Project [store_sk#350, sales_price#7, profit#8, return_amt#9, net_loss#10]
                     :        :  +- Join Inner, (date_sk#349 = cast(d_date_sk#70 as bigint))
                     :        :     :- Union
                     :        :     :  :- Project [cast(ss_store_sk#74 as bigint) AS store_sk#350, cast(ss_sold_date_sk#75 as bigint) AS date_sk#349, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, 0.00 AS return_amt#9, 0.00 AS net_loss#10]
                     :        :     :  :  +- Filter (isnotnull(cast(ss_sold_date_sk#75 as bigint)) AND isnotnull(cast(ss_store_sk#74 as bigint)))
                     :        :     :  :     +- Relation[ss_sold_date_sk#75,ss_sold_time_sk#78,ss_item_sk#79,ss_customer_sk#80,ss_cdemo_sk#81,ss_hdemo_sk#82,ss_addr_sk#83,ss_store_sk#74,ss_promo_sk#84,ss_ticket_number#85,ss_quantity#86,ss_wholesale_cost#87,ss_list_price#88,ss_sales_price#89,ss_ext_discount_amt#90,ss_ext_sales_price#76,ss_ext_wholesale_cost#91,ss_ext_list_price#92,ss_ext_tax#93,ss_coupon_amt#94,ss_net_paid#95,ss_net_paid_inc_tax#96,ss_net_profit#77] parquet
                     :        :     :  +- Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, 0.00 AS sales_price#13, 0.00 AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
                     :        :     :     +- Filter (isnotnull(sr_returned_date_sk#100) AND isnotnull(sr_store_sk#99))
                     :        :     :        +- Relation[sr_returned_date_sk#100,sr_return_time_sk#103,sr_item_sk#104,sr_customer_sk#105,sr_cdemo_sk#106,sr_hdemo_sk#107,sr_addr_sk#108,sr_store_sk#99,sr_reason_sk#109,sr_ticket_number#110,sr_return_quantity#111,sr_return_amt#101,sr_return_tax#112,sr_return_amt_inc_tax#113,sr_fee#114,sr_return_ship_cost#115,sr_refunded_cash#116,sr_reversed_charge#117,sr_store_credit#118,sr_net_loss#102] parquet
                     :        :     +- Project [d_date_sk#70]
                     :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
                     :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                     :        +- Project [s_store_sk#73, s_store_id#68]
                     :           +- Filter isnotnull(s_store_sk#73)
                     :              +- Relation[s_store_sk#73,s_store_id#68,s_rec_start_date#145,s_rec_end_date#146,s_closed_date_sk#147,s_store_name#148,s_number_employees#149,s_floor_space#150,s_hours#151,s_manager#152,s_market_id#153,s_geography_class#154,s_market_desc#155,s_market_manager#156,s_division_id#157,s_division_name#158,s_company_id#159,s_company_name#160,s_street_number#161,s_street_name#162,s_street_type#163,s_suite_number#164,s_city#165,s_county#166,s_state#167,s_zip#168,s_country#169,s_gmt_offset#170,s_tax_percentage#171] parquet
                     :- Aggregate [cp_catalog_page_id#172], [catalog channel AS channel#55, concat(catalog_page, cp_catalog_page_id#172) AS id#56, MakeDecimal(sum(UnscaledValue(sales_price#23)),17,2) AS sales#17, MakeDecimal(sum(UnscaledValue(return_amt#25)),17,2) AS returns#19, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#24)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#26)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#57]
                     :  +- Project [sales_price#23, profit#24, return_amt#25, net_loss#26, cp_catalog_page_id#172]
                     :     +- Join Inner, (page_sk#21 = cp_catalog_page_sk#173)
                     :        :- Project [page_sk#21, sales_price#23, profit#24, return_amt#25, net_loss#26]
                     :        :  +- Join Inner, (date_sk#22 = d_date_sk#70)
                     :        :     :- Union
                     :        :     :  :- Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, 0.00 AS return_amt#25, 0.00 AS net_loss#26]
                     :        :     :  :  +- Filter (isnotnull(cs_sold_date_sk#175) AND isnotnull(cs_catalog_page_sk#174))
                     :        :     :  :     +- Relation[cs_sold_date_sk#175,cs_sold_time_sk#178,cs_ship_date_sk#179,cs_bill_customer_sk#180,cs_bill_cdemo_sk#181,cs_bill_hdemo_sk#182,cs_bill_addr_sk#183,cs_ship_customer_sk#184,cs_ship_cdemo_sk#185,cs_ship_hdemo_sk#186,cs_ship_addr_sk#187,cs_call_center_sk#188,cs_catalog_page_sk#174,cs_ship_mode_sk#189,cs_warehouse_sk#190,cs_item_sk#191,cs_promo_sk#192,cs_order_number#193,cs_quantity#194,cs_wholesale_cost#195,cs_list_price#196,cs_sales_price#197,cs_ext_discount_amt#198,cs_ext_sales_price#176,cs_ext_wholesale_cost#199,cs_ext_list_price#200,cs_ext_tax#201,cs_coupon_amt#202,cs_ext_ship_cost#203,cs_net_paid#204,cs_net_paid_inc_tax#205,cs_net_paid_inc_ship#206,cs_net_paid_inc_ship_tax#207,cs_net_profit#177] parquet
                     :        :     :  +- Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, 0.00 AS sales_price#29, 0.00 AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
                     :        :     :     +- Filter (isnotnull(cr_returned_date_sk#209) AND isnotnull(cr_catalog_page_sk#208))
                     :        :     :        +- Relation[cr_returned_date_sk#209,cr_returned_time_sk#212,cr_item_sk#213,cr_refunded_customer_sk#214,cr_refunded_cdemo_sk#215,cr_refunded_hdemo_sk#216,cr_refunded_addr_sk#217,cr_returning_customer_sk#218,cr_returning_cdemo_sk#219,cr_returning_hdemo_sk#220,cr_returning_addr_sk#221,cr_call_center_sk#222,cr_catalog_page_sk#208,cr_ship_mode_sk#223,cr_warehouse_sk#224,cr_reason_sk#225,cr_order_number#226,cr_return_quantity#227,cr_return_amount#210,cr_return_tax#228,cr_return_amt_inc_tax#229,cr_fee#230,cr_return_ship_cost#231,cr_refunded_cash#232,cr_reversed_charge#233,cr_store_credit#234,cr_net_loss#211] parquet
                     :        :     +- Project [d_date_sk#70]
                     :        :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
                     :        :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                     :        +- Project [cp_catalog_page_sk#173, cp_catalog_page_id#172]
                     :           +- Filter isnotnull(cp_catalog_page_sk#173)
                     :              +- Relation[cp_catalog_page_sk#173,cp_catalog_page_id#172,cp_start_date_sk#235,cp_end_date_sk#236,cp_department#237,cp_catalog_number#238,cp_catalog_page_number#239,cp_description#240,cp_type#241] parquet
                     +- Aggregate [web_site_id#243], [web channel AS channel#58, concat(web_site, web_site_id#243) AS id#59, MakeDecimal(sum(UnscaledValue(sales_price#39)),17,2) AS sales#33, MakeDecimal(sum(UnscaledValue(return_amt#41)),17,2) AS returns#35, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#40)),17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#42)),17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#351]
                        +- Project [sales_price#39, profit#40, return_amt#41, net_loss#42, web_site_id#243]
                           +- Join Inner, (wsr_web_site_sk#37 = web_site_sk#245)
                              :- Project [wsr_web_site_sk#37, sales_price#39, profit#40, return_amt#41, net_loss#42]
                              :  +- Join Inner, (date_sk#352 = cast(d_date_sk#70 as bigint))
                              :     :- Union
                              :     :  :- Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, cast(ws_sold_date_sk#247 as bigint) AS date_sk#352, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, 0.00 AS return_amt#41, 0.00 AS net_loss#42]
                              :     :  :  +- Filter (isnotnull(cast(ws_sold_date_sk#247 as bigint)) AND isnotnull(ws_web_site_sk#246))
                              :     :  :     +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                              :     :  +- Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, 0.00 AS sales_price#45, 0.00 AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
                              :     :     +- Join Inner, ((wr_item_sk#284 = cast(ws_item_sk#252 as bigint)) AND (wr_order_number#285 = cast(ws_order_number#265 as bigint)))
                              :     :        :- Project [wr_returned_date_sk#281, wr_item_sk#284, wr_order_number#285, wr_return_amt#282, wr_net_loss#283]
                              :     :        :  +- Filter isnotnull(wr_returned_date_sk#281)
                              :     :        :     +- Relation[wr_returned_date_sk#281,wr_returned_time_sk#286,wr_item_sk#284,wr_refunded_customer_sk#287,wr_refunded_cdemo_sk#288,wr_refunded_hdemo_sk#289,wr_refunded_addr_sk#290,wr_returning_customer_sk#291,wr_returning_cdemo_sk#292,wr_returning_hdemo_sk#293,wr_returning_addr_sk#294,wr_web_page_sk#295,wr_reason_sk#296,wr_order_number#285,wr_return_quantity#297,wr_return_amt#282,wr_return_tax#298,wr_return_amt_inc_tax#299,wr_fee#300,wr_return_ship_cost#301,wr_refunded_cash#302,wr_reversed_charge#303,wr_account_credit#304,wr_net_loss#283] parquet
                              :     :        +- Project [ws_item_sk#252, ws_web_site_sk#246, ws_order_number#265]
                              :     :           +- Filter ((isnotnull(ws_item_sk#252) AND isnotnull(ws_order_number#265)) AND isnotnull(ws_web_site_sk#246))
                              :     :              +- Relation[ws_sold_date_sk#247,ws_sold_time_sk#250,ws_ship_date_sk#251,ws_item_sk#252,ws_bill_customer_sk#253,ws_bill_cdemo_sk#254,ws_bill_hdemo_sk#255,ws_bill_addr_sk#256,ws_ship_customer_sk#257,ws_ship_cdemo_sk#258,ws_ship_hdemo_sk#259,ws_ship_addr_sk#260,ws_web_page_sk#261,ws_web_site_sk#246,ws_ship_mode_sk#262,ws_warehouse_sk#263,ws_promo_sk#264,ws_order_number#265,ws_quantity#266,ws_wholesale_cost#267,ws_list_price#268,ws_sales_price#269,ws_ext_discount_amt#270,ws_ext_sales_price#248,ws_ext_wholesale_cost#271,ws_ext_list_price#272,ws_ext_tax#273,ws_coupon_amt#274,ws_ext_ship_cost#275,ws_net_paid#276,ws_net_paid_inc_tax#277,ws_net_paid_inc_ship#278,ws_net_paid_inc_ship_tax#279,ws_net_profit#249] parquet
                              :     +- Project [d_date_sk#70]
                              :        +- Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
                              :           +- Relation[d_date_sk#70,d_date_id#119,d_date#71,d_month_seq#120,d_week_seq#121,d_quarter_seq#122,d_year#123,d_dow#124,d_moy#125,d_dom#126,d_qoy#127,d_fy_year#128,d_fy_quarter_seq#129,d_fy_week_seq#130,d_day_name#131,d_quarter_name#132,d_holiday#133,d_weekend#134,d_following_holiday#135,d_first_dom#136,d_last_dom#137,d_same_day_ly#138,d_same_day_lq#139,d_current_day#140,d_current_week#141,d_current_month#142,d_current_quarter#143,d_current_year#144] parquet
                              +- Project [web_site_sk#245, web_site_id#243]
                                 +- Filter isnotnull(web_site_sk#245)
                                    +- Relation[web_site_sk#245,web_site_id#243,web_rec_start_date#305,web_rec_end_date#306,web_name#307,web_open_date_sk#308,web_close_date_sk#309,web_class#310,web_manager#311,web_mkt_id#312,web_mkt_class#313,web_mkt_desc#314,web_market_manager#315,web_company_id#316,web_company_name#317,web_street_number#318,web_street_name#319,web_street_type#320,web_suite_number#321,web_city#322,web_county#323,web_state#324,web_zip#325,web_country#326,web_gmt_offset#327,web_tax_percentage#328] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[channel#52 ASC NULLS FIRST,id#53 ASC NULLS FIRST], output=[channel#52,id#53,sales#64,returns#65,profit#66])
+- *(69) HashAggregate(keys=[channel#52, id#53, sales#64, returns#65, profit#66], functions=[], output=[channel#52, id#53, sales#64, returns#65, profit#66])
   +- Exchange hashpartitioning(channel#52, id#53, sales#64, returns#65, profit#66, 5), true, [id=#353]
      +- *(68) HashAggregate(keys=[channel#52, id#53, sales#64, returns#65, profit#66], functions=[], output=[channel#52, id#53, sales#64, returns#65, profit#66])
         +- Union
            :- *(45) HashAggregate(keys=[channel#52, id#53, sales#64, returns#65, profit#66], functions=[], output=[channel#52, id#53, sales#64, returns#65, profit#66])
            :  +- Exchange hashpartitioning(channel#52, id#53, sales#64, returns#65, profit#66, 5), true, [id=#354]
            :     +- *(44) HashAggregate(keys=[channel#52, id#53, sales#64, returns#65, profit#66], functions=[], output=[channel#52, id#53, sales#64, returns#65, profit#66])
            :        +- Union
            :           :- *(21) HashAggregate(keys=[channel#52, id#53], functions=[sum(sales#1), sum(returns#3), sum(profit#67)], output=[channel#52, id#53, sales#64, returns#65, profit#66])
            :           :  +- Exchange hashpartitioning(channel#52, id#53, 5), true, [id=#355]
            :           :     +- *(20) HashAggregate(keys=[channel#52, id#53], functions=[partial_sum(sales#1), partial_sum(returns#3), partial_sum(profit#67)], output=[channel#52, id#53, sum#356, isEmpty#357, sum#358, isEmpty#359, sum#360, isEmpty#361])
            :           :        +- Union
            :           :           :- *(6) HashAggregate(keys=[s_store_id#68], functions=[sum(UnscaledValue(sales_price#7)), sum(UnscaledValue(return_amt#9)), sum(UnscaledValue(profit#8)), sum(UnscaledValue(net_loss#10))], output=[channel#52, id#53, sales#1, returns#3, profit#67])
            :           :           :  +- Exchange hashpartitioning(s_store_id#68, 5), true, [id=#362]
            :           :           :     +- *(5) HashAggregate(keys=[s_store_id#68], functions=[partial_sum(UnscaledValue(sales_price#7)), partial_sum(UnscaledValue(return_amt#9)), partial_sum(UnscaledValue(profit#8)), partial_sum(UnscaledValue(net_loss#10))], output=[s_store_id#68, sum#363, sum#364, sum#365, sum#366])
            :           :           :        +- *(5) Project [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#68]
            :           :           :           +- *(5) BroadcastHashJoin [store_sk#72], [cast(s_store_sk#73 as bigint)], Inner, BuildRight
            :           :           :              :- *(5) Project [store_sk#72, sales_price#7, profit#8, return_amt#9, net_loss#10]
            :           :           :              :  +- *(5) BroadcastHashJoin [date_sk#69], [cast(d_date_sk#70 as bigint)], Inner, BuildRight
            :           :           :              :     :- Union
            :           :           :              :     :  :- *(1) Project [cast(ss_store_sk#74 as bigint) AS store_sk#72, cast(ss_sold_date_sk#75 as bigint) AS date_sk#69, ss_ext_sales_price#76 AS sales_price#7, ss_net_profit#77 AS profit#8, 0.00 AS return_amt#9, 0.00 AS net_loss#10]
            :           :           :              :     :  :  +- *(1) Filter (isnotnull(cast(ss_sold_date_sk#75 as bigint)) AND isnotnull(cast(ss_store_sk#74 as bigint)))
            :           :           :              :     :  :     +- *(1) ColumnarToRow
            :           :           :              :     :  :        +- FileScan parquet default.store_sales[ss_sold_date_sk#75,ss_store_sk#74,ss_ext_sales_price#76,ss_net_profit#77] Batched: true, DataFilters: [isnotnull(cast(ss_sold_date_sk#75 as bigint)), isnotnull(cast(ss_store_sk#74 as bigint))], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(...
            :           :           :              :     :  +- *(2) Project [sr_store_sk#99 AS store_sk#97, sr_returned_date_sk#100 AS date_sk#98, 0.00 AS sales_price#13, 0.00 AS profit#14, sr_return_amt#101 AS return_amt#15, sr_net_loss#102 AS net_loss#16]
            :           :           :              :     :     +- *(2) Filter (isnotnull(sr_returned_date_sk#100) AND isnotnull(sr_store_sk#99))
            :           :           :              :     :        +- *(2) ColumnarToRow
            :           :           :              :     :           +- FileScan parquet default.store_returns[sr_returned_date_sk#100,sr_store_sk#99,sr_return_amt#101,sr_net_loss#102] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#100), isnotnull(sr_store_sk#99)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:bigint,sr_store_sk:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decim...
            :           :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#367]
            :           :           :              :        +- *(3) Project [d_date_sk#70]
            :           :           :              :           +- *(3) Filter (((isnotnull(d_date#71) AND (d_date#71 >= 10442)) AND (d_date#71 <= 10456)) AND isnotnull(d_date_sk#70))
            :           :           :              :              +- *(3) ColumnarToRow
            :           :           :              :                 +- FileScan parquet default.date_dim[d_date_sk#70,d_date#71] Batched: true, DataFilters: [isnotnull(d_date#71), (d_date#71 >= 10442), (d_date#71 <= 10456), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-04), LessThanOrEqual(d_date,1998-08-18), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
            :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#368]
            :           :           :                 +- *(4) Project [s_store_sk#73, s_store_id#68]
            :           :           :                    +- *(4) Filter isnotnull(s_store_sk#73)
            :           :           :                       +- *(4) ColumnarToRow
            :           :           :                          +- FileScan parquet default.store[s_store_sk#73,s_store_id#68] Batched: true, DataFilters: [isnotnull(s_store_sk#73)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
            :           :           :- *(12) HashAggregate(keys=[cp_catalog_page_id#172], functions=[sum(UnscaledValue(sales_price#23)), sum(UnscaledValue(return_amt#25)), sum(UnscaledValue(profit#24)), sum(UnscaledValue(net_loss#26))], output=[channel#55, id#56, sales#17, returns#19, profit#57])
            :           :           :  +- Exchange hashpartitioning(cp_catalog_page_id#172, 5), true, [id=#369]
            :           :           :     +- *(11) HashAggregate(keys=[cp_catalog_page_id#172], functions=[partial_sum(UnscaledValue(sales_price#23)), partial_sum(UnscaledValue(return_amt#25)), partial_sum(UnscaledValue(profit#24)), partial_sum(UnscaledValue(net_loss#26))], output=[cp_catalog_page_id#172, sum#370, sum#371, sum#372, sum#373])
            :           :           :        +- *(11) Project [sales_price#23, profit#24, return_amt#25, net_loss#26, cp_catalog_page_id#172]
            :           :           :           +- *(11) BroadcastHashJoin [page_sk#21], [cp_catalog_page_sk#173], Inner, BuildRight
            :           :           :              :- *(11) Project [page_sk#21, sales_price#23, profit#24, return_amt#25, net_loss#26]
            :           :           :              :  +- *(11) BroadcastHashJoin [date_sk#22], [d_date_sk#70], Inner, BuildRight
            :           :           :              :     :- Union
            :           :           :              :     :  :- *(7) Project [cs_catalog_page_sk#174 AS page_sk#21, cs_sold_date_sk#175 AS date_sk#22, cs_ext_sales_price#176 AS sales_price#23, cs_net_profit#177 AS profit#24, 0.00 AS return_amt#25, 0.00 AS net_loss#26]
            :           :           :              :     :  :  +- *(7) Filter (isnotnull(cs_sold_date_sk#175) AND isnotnull(cs_catalog_page_sk#174))
            :           :           :              :     :  :     +- *(7) ColumnarToRow
            :           :           :              :     :  :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#175,cs_catalog_page_sk#174,cs_ext_sales_price#176,cs_net_profit#177] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#175), isnotnull(cs_catalog_page_sk#174)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:d...
            :           :           :              :     :  +- *(8) Project [cr_catalog_page_sk#208 AS page_sk#27, cr_returned_date_sk#209 AS date_sk#28, 0.00 AS sales_price#29, 0.00 AS profit#30, cr_return_amount#210 AS return_amt#31, cr_net_loss#211 AS net_loss#32]
            :           :           :              :     :     +- *(8) Filter (isnotnull(cr_returned_date_sk#209) AND isnotnull(cr_catalog_page_sk#208))
            :           :           :              :     :        +- *(8) ColumnarToRow
            :           :           :              :     :           +- FileScan parquet default.catalog_returns[cr_returned_date_sk#209,cr_catalog_page_sk#208,cr_return_amount#210,cr_net_loss#211] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#209), isnotnull(cr_catalog_page_sk#208)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_catalog_page_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:d...
            :           :           :              :     +- ReusedExchange [d_date_sk#70], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#367]
            :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#374]
            :           :           :                 +- *(10) Project [cp_catalog_page_sk#173, cp_catalog_page_id#172]
            :           :           :                    +- *(10) Filter isnotnull(cp_catalog_page_sk#173)
            :           :           :                       +- *(10) ColumnarToRow
            :           :           :                          +- FileScan parquet default.catalog_page[cp_catalog_page_sk#173,cp_catalog_page_id#172] Batched: true, DataFilters: [isnotnull(cp_catalog_page_sk#173)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_sk)], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
            :           :           +- *(19) HashAggregate(keys=[web_site_id#243], functions=[sum(UnscaledValue(sales_price#39)), sum(UnscaledValue(return_amt#41)), sum(UnscaledValue(profit#40)), sum(UnscaledValue(net_loss#42))], output=[channel#58, id#59, sales#33, returns#35, profit#242])
            :           :              +- Exchange hashpartitioning(web_site_id#243, 5), true, [id=#375]
            :           :                 +- *(18) HashAggregate(keys=[web_site_id#243], functions=[partial_sum(UnscaledValue(sales_price#39)), partial_sum(UnscaledValue(return_amt#41)), partial_sum(UnscaledValue(profit#40)), partial_sum(UnscaledValue(net_loss#42))], output=[web_site_id#243, sum#376, sum#377, sum#378, sum#379])
            :           :                    +- *(18) Project [sales_price#39, profit#40, return_amt#41, net_loss#42, web_site_id#243]
            :           :                       +- *(18) BroadcastHashJoin [wsr_web_site_sk#37], [web_site_sk#245], Inner, BuildRight
            :           :                          :- *(18) Project [wsr_web_site_sk#37, sales_price#39, profit#40, return_amt#41, net_loss#42]
            :           :                          :  +- *(18) BroadcastHashJoin [date_sk#244], [cast(d_date_sk#70 as bigint)], Inner, BuildRight
            :           :                          :     :- Union
            :           :                          :     :  :- *(13) Project [ws_web_site_sk#246 AS wsr_web_site_sk#37, cast(ws_sold_date_sk#247 as bigint) AS date_sk#244, ws_ext_sales_price#248 AS sales_price#39, ws_net_profit#249 AS profit#40, 0.00 AS return_amt#41, 0.00 AS net_loss#42]
            :           :                          :     :  :  +- *(13) Filter (isnotnull(cast(ws_sold_date_sk#247 as bigint)) AND isnotnull(ws_web_site_sk#246))
            :           :                          :     :  :     +- *(13) ColumnarToRow
            :           :                          :     :  :        +- FileScan parquet default.web_sales[ws_sold_date_sk#247,ws_web_site_sk#246,ws_ext_sales_price#248,ws_net_profit#249] Batched: true, DataFilters: [isnotnull(cast(ws_sold_date_sk#247 as bigint)), isnotnull(ws_web_site_sk#246)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim...
            :           :                          :     :  +- *(15) Project [ws_web_site_sk#246 AS wsr_web_site_sk#43, wr_returned_date_sk#281 AS date_sk#280, 0.00 AS sales_price#45, 0.00 AS profit#46, wr_return_amt#282 AS return_amt#47, wr_net_loss#283 AS net_loss#48]
            :           :                          :     :     +- *(15) BroadcastHashJoin [wr_item_sk#284, wr_order_number#285], [cast(ws_item_sk#252 as bigint), cast(ws_order_number#265 as bigint)], Inner, BuildRight
            :           :                          :     :        :- *(15) Project [wr_returned_date_sk#281, wr_item_sk#284, wr_order_number#285, wr_return_amt#282, wr_net_loss#283]
            :           :                          :     :        :  +- *(15) Filter isnotnull(wr_returned_date_sk#281)
            :           :                          :     :        :     +- *(15) ColumnarToRow
            :           :                          :     :        :        +- FileScan parquet default.web_returns[wr_returned_date_sk#281,wr_item_sk#284,wr_order_number#285,wr_return_amt#282,wr_net_loss#283] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#281)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk)], ReadSchema: struct<wr_returned_date_sk:bigint,wr_item_sk:bigint,wr_order_number:bigint,wr_return_amt:decimal(...
            :           :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint), cast(input[2, int, true] as bigint))), [id=#380]
            :           :                          :     :           +- *(14) Project [ws_item_sk#252, ws_web_site_sk#246, ws_order_number#265]
            :           :                          :     :              +- *(14) Filter ((isnotnull(ws_item_sk#252) AND isnotnull(ws_order_number#265)) AND isnotnull(ws_web_site_sk#246))
            :           :                          :     :                 +- *(14) ColumnarToRow
            :           :                          :     :                    +- FileScan parquet default.web_sales[ws_item_sk#252,ws_web_site_sk#246,ws_order_number#265] Batched: true, DataFilters: [isnotnull(ws_item_sk#252), isnotnull(ws_order_number#265), isnotnull(ws_web_site_sk#246)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:int>
            :           :                          :     +- ReusedExchange [d_date_sk#70], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#367]
            :           :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#381]
            :           :                             +- *(17) Project [web_site_sk#245, web_site_id#243]
            :           :                                +- *(17) Filter isnotnull(web_site_sk#245)
            :           :                                   +- *(17) ColumnarToRow
            :           :                                      +- FileScan parquet default.web_site[web_site_sk#245,web_site_id#243] Batched: true, DataFilters: [isnotnull(web_site_sk#245)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_site_id:string>
            :           +- *(43) HashAggregate(keys=[channel#52], functions=[sum(sales#49), sum(returns#50), sum(profit#51)], output=[channel#52, id#331, sum(sales)#333, sum(returns)#335, sum(profit)#337])
            :              +- Exchange hashpartitioning(channel#52, 5), true, [id=#382]
            :                 +- *(42) HashAggregate(keys=[channel#52], functions=[partial_sum(sales#49), partial_sum(returns#50), partial_sum(profit#51)], output=[channel#52, sum#383, isEmpty#384, sum#385, isEmpty#386, sum#387, isEmpty#388])
            :                    +- *(42) HashAggregate(keys=[channel#52, id#53], functions=[sum(sales#1), sum(returns#3), sum(profit#338)], output=[channel#52, sales#49, returns#50, profit#51])
            :                       +- ReusedExchange [channel#52, id#53, sum#389, isEmpty#390, sum#391, isEmpty#392, sum#393, isEmpty#394], Exchange hashpartitioning(channel#52, id#53, 5), true, [id=#355]
            +- *(67) HashAggregate(keys=[], functions=[sum(sales#49), sum(returns#50), sum(profit#51)], output=[channel#343, id#344, sum(sales)#345, sum(returns)#346, sum(profit)#347])
               +- Exchange SinglePartition, true, [id=#395]
                  +- *(66) HashAggregate(keys=[], functions=[partial_sum(sales#49), partial_sum(returns#50), partial_sum(profit#51)], output=[sum#396, isEmpty#397, sum#398, isEmpty#399, sum#400, isEmpty#401])
                     +- *(66) HashAggregate(keys=[channel#52, id#53], functions=[sum(sales#1), sum(returns#3), sum(profit#348)], output=[sales#49, returns#50, profit#51])
                        +- ReusedExchange [channel#52, id#53, sum#402, isEmpty#403, sum#404, isEmpty#405, sum#406, isEmpty#407], Exchange hashpartitioning(channel#52, id#53, 5), true, [id=#355]

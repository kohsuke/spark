== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['ca_state ASC NULLS FIRST, 'cd_gender ASC NULLS FIRST, 'cd_marital_status ASC NULLS FIRST, 'cd_dep_count ASC NULLS FIRST, 'cd_dep_employed_count ASC NULLS FIRST, 'cd_dep_college_count ASC NULLS FIRST], true
      +- 'Aggregate ['ca_state, 'cd_gender, 'cd_marital_status, 'cd_dep_count, 'cd_dep_employed_count, 'cd_dep_college_count], ['ca_state, 'cd_gender, 'cd_marital_status, 'cd_dep_count, 'count(1) AS cnt1#1, unresolvedalias('avg('cd_dep_count), None), unresolvedalias('max('cd_dep_count), None), unresolvedalias('sum('cd_dep_count), None), 'cd_dep_employed_count, 'count(1) AS cnt2#2, unresolvedalias('avg('cd_dep_employed_count), None), unresolvedalias('max('cd_dep_employed_count), None), unresolvedalias('sum('cd_dep_employed_count), None), 'cd_dep_college_count, 'count(1) AS cnt3#3, unresolvedalias('avg('cd_dep_college_count), None), unresolvedalias('max('cd_dep_college_count), None), unresolvedalias('sum('cd_dep_college_count), None)]
         +- 'Filter ((('c.c_current_addr_sk = 'ca.ca_address_sk) AND ('cd_demo_sk = 'c.c_current_cdemo_sk)) AND (exists#4 [] AND exists#5 []))
            :  :- 'Project [*]
            :  :  +- 'Filter ((('c.c_customer_sk = 'ss_customer_sk) AND ('ss_sold_date_sk = 'd_date_sk)) AND (('d_year = 1999) AND ('d_qoy < 4)))
            :  :     +- 'Join Inner
            :  :        :- 'UnresolvedRelation [store_sales]
            :  :        +- 'UnresolvedRelation [date_dim]
            :  +- 'Project [*]
            :     +- 'Filter ('x.customsk = 'c.c_customer_sk)
            :        +- 'SubqueryAlias x
            :           +- 'Union
            :              :- 'Project ['ws_bill_customer_sk AS customsk#6]
            :              :  +- 'Filter ((('ws_sold_date_sk = 'd_date_sk) AND ('d_year = 1999)) AND ('d_qoy < 4))
            :              :     +- 'Join Inner
            :              :        :- 'UnresolvedRelation [web_sales]
            :              :        +- 'UnresolvedRelation [date_dim]
            :              +- 'Project ['cs_ship_customer_sk AS customsk#7]
            :                 +- 'Filter ((('cs_sold_date_sk = 'd_date_sk) AND ('d_year = 1999)) AND ('d_qoy < 4))
            :                    +- 'Join Inner
            :                       :- 'UnresolvedRelation [catalog_sales]
            :                       +- 'UnresolvedRelation [date_dim]
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'SubqueryAlias c
               :  :  +- 'UnresolvedRelation [customer]
               :  +- 'SubqueryAlias ca
               :     +- 'UnresolvedRelation [customer_address]
               +- 'UnresolvedRelation [customer_demographics]

== Analyzed Logical Plan ==
ca_state: string, cd_gender: string, cd_marital_status: string, cd_dep_count: int, cnt1: bigint, avg(cd_dep_count): double, max(cd_dep_count): int, sum(cd_dep_count): bigint, cd_dep_employed_count: int, cnt2: bigint, avg(cd_dep_employed_count): double, max(cd_dep_employed_count): int, sum(cd_dep_employed_count): bigint, cd_dep_college_count: int, cnt3: bigint, avg(cd_dep_college_count): double, max(cd_dep_college_count): int, sum(cd_dep_college_count): bigint
GlobalLimit 100
+- LocalLimit 100
   +- Project [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cnt1#12, avg(cd_dep_count)#13, max(cd_dep_count)#14, sum(cd_dep_count)#15, cd_dep_employed_count#16, cnt2#17, avg(cd_dep_employed_count)#18, max(cd_dep_employed_count)#19, sum(cd_dep_employed_count)#20, cd_dep_college_count#21, cnt3#22, avg(cd_dep_college_count)#23, max(cd_dep_college_count)#24, sum(cd_dep_college_count)#25]
      +- Sort [ca_state#8 ASC NULLS FIRST, cd_gender#9 ASC NULLS FIRST, cd_marital_status#10 ASC NULLS FIRST, cd_dep_count#11 ASC NULLS FIRST, cd_dep_employed_count#16 ASC NULLS FIRST, cd_dep_college_count#21 ASC NULLS FIRST], true
         +- Aggregate [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21], [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, count(1) AS cnt1#12, avg(cast(cd_dep_count#11 as bigint)) AS avg(cd_dep_count)#13, max(cd_dep_count#11) AS max(cd_dep_count)#14, sum(cast(cd_dep_count#11 as bigint)) AS sum(cd_dep_count)#15, cd_dep_employed_count#16, count(1) AS cnt2#17, avg(cast(cd_dep_employed_count#16 as bigint)) AS avg(cd_dep_employed_count)#18, max(cd_dep_employed_count#16) AS max(cd_dep_employed_count)#19, sum(cast(cd_dep_employed_count#16 as bigint)) AS sum(cd_dep_employed_count)#20, cd_dep_college_count#21, count(1) AS cnt3#22, avg(cast(cd_dep_college_count#21 as bigint)) AS avg(cd_dep_college_count)#23, max(cd_dep_college_count#21) AS max(cd_dep_college_count)#24, sum(cast(cd_dep_college_count#21 as bigint)) AS sum(cd_dep_college_count)#25]
            +- Filter (((c_current_addr_sk#26 = ca_address_sk#27) AND (cd_demo_sk#28 = c_current_cdemo_sk#29)) AND (exists#4 [c_customer_sk#30] AND exists#5 [c_customer_sk#30]))
               :  :- Project [ss_sold_date_sk#31, ss_sold_time_sk#32, ss_item_sk#33, ss_customer_sk#34, ss_cdemo_sk#35, ss_hdemo_sk#36, ss_addr_sk#37, ss_store_sk#38, ss_promo_sk#39, ss_ticket_number#40, ss_quantity#41, ss_wholesale_cost#42, ss_list_price#43, ss_sales_price#44, ss_ext_discount_amt#45, ss_ext_sales_price#46, ss_ext_wholesale_cost#47, ss_ext_list_price#48, ss_ext_tax#49, ss_coupon_amt#50, ss_net_paid#51, ss_net_paid_inc_tax#52, ss_net_profit#53, d_date_sk#54, d_date_id#55, d_date#56, d_month_seq#57, d_week_seq#58, d_quarter_seq#59, d_year#60, d_dow#61, d_moy#62, d_dom#63, d_qoy#64, d_fy_year#65, d_fy_quarter_seq#66, d_fy_week_seq#67, d_day_name#68, d_quarter_name#69, d_holiday#70, d_weekend#71, d_following_holiday#72, d_first_dom#73, d_last_dom#74, d_same_day_ly#75, d_same_day_lq#76, d_current_day#77, d_current_week#78, d_current_month#79, d_current_quarter#80, d_current_year#81]
               :  :  +- Filter (((outer(c_customer_sk#30) = ss_customer_sk#34) AND (ss_sold_date_sk#31 = d_date_sk#54)) AND ((d_year#60 = 1999) AND (d_qoy#64 < 4)))
               :  :     +- Join Inner
               :  :        :- SubqueryAlias spark_catalog.default.store_sales
               :  :        :  +- Relation[ss_sold_date_sk#31,ss_sold_time_sk#32,ss_item_sk#33,ss_customer_sk#34,ss_cdemo_sk#35,ss_hdemo_sk#36,ss_addr_sk#37,ss_store_sk#38,ss_promo_sk#39,ss_ticket_number#40,ss_quantity#41,ss_wholesale_cost#42,ss_list_price#43,ss_sales_price#44,ss_ext_discount_amt#45,ss_ext_sales_price#46,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
               :  :        +- SubqueryAlias spark_catalog.default.date_dim
               :  :           +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               :  +- Project [customsk#6]
               :     +- Filter (customsk#6 = outer(c_customer_sk#30))
               :        +- SubqueryAlias x
               :           +- Union
               :              :- Project [ws_bill_customer_sk#82 AS customsk#6]
               :              :  +- Filter (((ws_sold_date_sk#83 = d_date_sk#54) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4))
               :              :     +- Join Inner
               :              :        :- SubqueryAlias spark_catalog.default.web_sales
               :              :        :  +- Relation[ws_sold_date_sk#83,ws_sold_time_sk#84,ws_ship_date_sk#85,ws_item_sk#86,ws_bill_customer_sk#82,ws_bill_cdemo_sk#87,ws_bill_hdemo_sk#88,ws_bill_addr_sk#89,ws_ship_customer_sk#90,ws_ship_cdemo_sk#91,ws_ship_hdemo_sk#92,ws_ship_addr_sk#93,ws_web_page_sk#94,ws_web_site_sk#95,ws_ship_mode_sk#96,ws_warehouse_sk#97,ws_promo_sk#98,ws_order_number#99,ws_quantity#100,ws_wholesale_cost#101,ws_list_price#102,ws_sales_price#103,ws_ext_discount_amt#104,ws_ext_sales_price#105,ws_ext_wholesale_cost#106,ws_ext_list_price#107,ws_ext_tax#108,ws_coupon_amt#109,ws_ext_ship_cost#110,ws_net_paid#111,ws_net_paid_inc_tax#112,ws_net_paid_inc_ship#113,ws_net_paid_inc_ship_tax#114,ws_net_profit#115] parquet
               :              :        +- SubqueryAlias spark_catalog.default.date_dim
               :              :           +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               :              +- Project [cs_ship_customer_sk#116 AS customsk#7]
               :                 +- Filter (((cs_sold_date_sk#117 = d_date_sk#54) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4))
               :                    +- Join Inner
               :                       :- SubqueryAlias spark_catalog.default.catalog_sales
               :                       :  +- Relation[cs_sold_date_sk#117,cs_sold_time_sk#118,cs_ship_date_sk#119,cs_bill_customer_sk#120,cs_bill_cdemo_sk#121,cs_bill_hdemo_sk#122,cs_bill_addr_sk#123,cs_ship_customer_sk#116,cs_ship_cdemo_sk#124,cs_ship_hdemo_sk#125,cs_ship_addr_sk#126,cs_call_center_sk#127,cs_catalog_page_sk#128,cs_ship_mode_sk#129,cs_warehouse_sk#130,cs_item_sk#131,cs_promo_sk#132,cs_order_number#133,cs_quantity#134,cs_wholesale_cost#135,cs_list_price#136,cs_sales_price#137,cs_ext_discount_amt#138,cs_ext_sales_price#139,cs_ext_wholesale_cost#140,cs_ext_list_price#141,cs_ext_tax#142,cs_coupon_amt#143,cs_ext_ship_cost#144,cs_net_paid#145,cs_net_paid_inc_tax#146,cs_net_paid_inc_ship#147,cs_net_paid_inc_ship_tax#148,cs_net_profit#149] parquet
               :                       +- SubqueryAlias spark_catalog.default.date_dim
               :                          +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               +- Join Inner
                  :- Join Inner
                  :  :- SubqueryAlias c
                  :  :  +- SubqueryAlias spark_catalog.default.customer
                  :  :     +- Relation[c_customer_sk#30,c_customer_id#150,c_current_cdemo_sk#29,c_current_hdemo_sk#151,c_current_addr_sk#26,c_first_shipto_date_sk#152,c_first_sales_date_sk#153,c_salutation#154,c_first_name#155,c_last_name#156,c_preferred_cust_flag#157,c_birth_day#158,c_birth_month#159,c_birth_year#160,c_birth_country#161,c_login#162,c_email_address#163,c_last_review_date#164] parquet
                  :  +- SubqueryAlias ca
                  :     +- SubqueryAlias spark_catalog.default.customer_address
                  :        +- Relation[ca_address_sk#27,ca_address_id#165,ca_street_number#166,ca_street_name#167,ca_street_type#168,ca_suite_number#169,ca_city#170,ca_county#171,ca_state#8,ca_zip#172,ca_country#173,ca_gmt_offset#174,ca_location_type#175] parquet
                  +- SubqueryAlias spark_catalog.default.customer_demographics
                     +- Relation[cd_demo_sk#28,cd_gender#9,cd_marital_status#10,cd_education_status#176,cd_purchase_estimate#177,cd_credit_rating#178,cd_dep_count#11,cd_dep_employed_count#16,cd_dep_college_count#21] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ca_state#8 ASC NULLS FIRST, cd_gender#9 ASC NULLS FIRST, cd_marital_status#10 ASC NULLS FIRST, cd_dep_count#11 ASC NULLS FIRST, cd_dep_employed_count#16 ASC NULLS FIRST, cd_dep_college_count#21 ASC NULLS FIRST], true
      +- Aggregate [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21], [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, count(1) AS cnt1#12, avg(cast(cd_dep_count#11 as bigint)) AS avg(cd_dep_count)#13, max(cd_dep_count#11) AS max(cd_dep_count)#14, sum(cast(cd_dep_count#11 as bigint)) AS sum(cd_dep_count)#15, cd_dep_employed_count#16, count(1) AS cnt2#17, avg(cast(cd_dep_employed_count#16 as bigint)) AS avg(cd_dep_employed_count)#18, max(cd_dep_employed_count#16) AS max(cd_dep_employed_count)#19, sum(cast(cd_dep_employed_count#16 as bigint)) AS sum(cd_dep_employed_count)#20, cd_dep_college_count#21, count(1) AS cnt3#22, avg(cast(cd_dep_college_count#21 as bigint)) AS avg(cd_dep_college_count)#23, max(cd_dep_college_count#21) AS max(cd_dep_college_count)#24, sum(cast(cd_dep_college_count#21 as bigint)) AS sum(cd_dep_college_count)#25]
         +- Project [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21]
            +- Join Inner, (cd_demo_sk#28 = c_current_cdemo_sk#29)
               :- Project [c_current_cdemo_sk#29, ca_state#8]
               :  +- Join Inner, (c_current_addr_sk#26 = ca_address_sk#27)
               :     :- Project [c_current_cdemo_sk#29, c_current_addr_sk#26]
               :     :  +- Join LeftSemi, (customsk#6 = c_customer_sk#30)
               :     :     :- Join LeftSemi, (c_customer_sk#30 = ss_customer_sk#34)
               :     :     :  :- Project [c_customer_sk#30, c_current_cdemo_sk#29, c_current_addr_sk#26]
               :     :     :  :  +- Filter (isnotnull(c_current_addr_sk#26) AND isnotnull(c_current_cdemo_sk#29))
               :     :     :  :     +- Relation[c_customer_sk#30,c_customer_id#150,c_current_cdemo_sk#29,c_current_hdemo_sk#151,c_current_addr_sk#26,c_first_shipto_date_sk#152,c_first_sales_date_sk#153,c_salutation#154,c_first_name#155,c_last_name#156,c_preferred_cust_flag#157,c_birth_day#158,c_birth_month#159,c_birth_year#160,c_birth_country#161,c_login#162,c_email_address#163,c_last_review_date#164] parquet
               :     :     :  +- Project [ss_customer_sk#34]
               :     :     :     +- Join Inner, (ss_sold_date_sk#31 = d_date_sk#54)
               :     :     :        :- Project [ss_sold_date_sk#31, ss_customer_sk#34]
               :     :     :        :  +- Filter isnotnull(ss_sold_date_sk#31)
               :     :     :        :     +- Relation[ss_sold_date_sk#31,ss_sold_time_sk#32,ss_item_sk#33,ss_customer_sk#34,ss_cdemo_sk#35,ss_hdemo_sk#36,ss_addr_sk#37,ss_store_sk#38,ss_promo_sk#39,ss_ticket_number#40,ss_quantity#41,ss_wholesale_cost#42,ss_list_price#43,ss_sales_price#44,ss_ext_discount_amt#45,ss_ext_sales_price#46,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
               :     :     :        +- Project [d_date_sk#54]
               :     :     :           +- Filter ((((isnotnull(d_year#60) AND isnotnull(d_qoy#64)) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4)) AND isnotnull(d_date_sk#54))
               :     :     :              +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               :     :     +- Union
               :     :        :- Project [ws_bill_customer_sk#82 AS customsk#6]
               :     :        :  +- Join Inner, (ws_sold_date_sk#83 = d_date_sk#54)
               :     :        :     :- Project [ws_sold_date_sk#83, ws_bill_customer_sk#82]
               :     :        :     :  +- Filter isnotnull(ws_sold_date_sk#83)
               :     :        :     :     +- Relation[ws_sold_date_sk#83,ws_sold_time_sk#84,ws_ship_date_sk#85,ws_item_sk#86,ws_bill_customer_sk#82,ws_bill_cdemo_sk#87,ws_bill_hdemo_sk#88,ws_bill_addr_sk#89,ws_ship_customer_sk#90,ws_ship_cdemo_sk#91,ws_ship_hdemo_sk#92,ws_ship_addr_sk#93,ws_web_page_sk#94,ws_web_site_sk#95,ws_ship_mode_sk#96,ws_warehouse_sk#97,ws_promo_sk#98,ws_order_number#99,ws_quantity#100,ws_wholesale_cost#101,ws_list_price#102,ws_sales_price#103,ws_ext_discount_amt#104,ws_ext_sales_price#105,ws_ext_wholesale_cost#106,ws_ext_list_price#107,ws_ext_tax#108,ws_coupon_amt#109,ws_ext_ship_cost#110,ws_net_paid#111,ws_net_paid_inc_tax#112,ws_net_paid_inc_ship#113,ws_net_paid_inc_ship_tax#114,ws_net_profit#115] parquet
               :     :        :     +- Project [d_date_sk#54]
               :     :        :        +- Filter ((((isnotnull(d_year#60) AND isnotnull(d_qoy#64)) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4)) AND isnotnull(d_date_sk#54))
               :     :        :           +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               :     :        +- Project [cs_ship_customer_sk#116 AS customsk#7]
               :     :           +- Join Inner, (cs_sold_date_sk#117 = d_date_sk#54)
               :     :              :- Project [cs_sold_date_sk#117, cs_ship_customer_sk#116]
               :     :              :  +- Filter isnotnull(cs_sold_date_sk#117)
               :     :              :     +- Relation[cs_sold_date_sk#117,cs_sold_time_sk#118,cs_ship_date_sk#119,cs_bill_customer_sk#120,cs_bill_cdemo_sk#121,cs_bill_hdemo_sk#122,cs_bill_addr_sk#123,cs_ship_customer_sk#116,cs_ship_cdemo_sk#124,cs_ship_hdemo_sk#125,cs_ship_addr_sk#126,cs_call_center_sk#127,cs_catalog_page_sk#128,cs_ship_mode_sk#129,cs_warehouse_sk#130,cs_item_sk#131,cs_promo_sk#132,cs_order_number#133,cs_quantity#134,cs_wholesale_cost#135,cs_list_price#136,cs_sales_price#137,cs_ext_discount_amt#138,cs_ext_sales_price#139,cs_ext_wholesale_cost#140,cs_ext_list_price#141,cs_ext_tax#142,cs_coupon_amt#143,cs_ext_ship_cost#144,cs_net_paid#145,cs_net_paid_inc_tax#146,cs_net_paid_inc_ship#147,cs_net_paid_inc_ship_tax#148,cs_net_profit#149] parquet
               :     :              +- Project [d_date_sk#54]
               :     :                 +- Filter ((((isnotnull(d_year#60) AND isnotnull(d_qoy#64)) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4)) AND isnotnull(d_date_sk#54))
               :     :                    +- Relation[d_date_sk#54,d_date_id#55,d_date#56,d_month_seq#57,d_week_seq#58,d_quarter_seq#59,d_year#60,d_dow#61,d_moy#62,d_dom#63,d_qoy#64,d_fy_year#65,d_fy_quarter_seq#66,d_fy_week_seq#67,d_day_name#68,d_quarter_name#69,d_holiday#70,d_weekend#71,d_following_holiday#72,d_first_dom#73,d_last_dom#74,d_same_day_ly#75,d_same_day_lq#76,d_current_day#77,d_current_week#78,d_current_month#79,d_current_quarter#80,d_current_year#81] parquet
               :     +- Project [ca_address_sk#27, ca_state#8]
               :        +- Filter isnotnull(ca_address_sk#27)
               :           +- Relation[ca_address_sk#27,ca_address_id#165,ca_street_number#166,ca_street_name#167,ca_street_type#168,ca_suite_number#169,ca_city#170,ca_county#171,ca_state#8,ca_zip#172,ca_country#173,ca_gmt_offset#174,ca_location_type#175] parquet
               +- Project [cd_demo_sk#28, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21]
                  +- Filter isnotnull(cd_demo_sk#28)
                     +- Relation[cd_demo_sk#28,cd_gender#9,cd_marital_status#10,cd_education_status#176,cd_purchase_estimate#177,cd_credit_rating#178,cd_dep_count#11,cd_dep_employed_count#16,cd_dep_college_count#21] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[ca_state#8 ASC NULLS FIRST,cd_gender#9 ASC NULLS FIRST,cd_marital_status#10 ASC NULLS FIRST,cd_dep_count#11 ASC NULLS FIRST,cd_dep_employed_count#16 ASC NULLS FIRST,cd_dep_college_count#21 ASC NULLS FIRST], output=[ca_state#8,cd_gender#9,cd_marital_status#10,cd_dep_count#11,cnt1#12,avg(cd_dep_count)#13,max(cd_dep_count)#14,sum(cd_dep_count)#15,cd_dep_employed_count#16,cnt2#17,avg(cd_dep_employed_count)#18,max(cd_dep_employed_count)#19,sum(cd_dep_employed_count)#20,cd_dep_college_count#21,cnt3#22,avg(cd_dep_college_count)#23,max(cd_dep_college_count)#24,sum(cd_dep_college_count)#25])
+- *(10) HashAggregate(keys=[ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21], functions=[count(1), avg(cast(cd_dep_count#11 as bigint)), max(cd_dep_count#11), sum(cast(cd_dep_count#11 as bigint)), avg(cast(cd_dep_employed_count#16 as bigint)), max(cd_dep_employed_count#16), sum(cast(cd_dep_employed_count#16 as bigint)), avg(cast(cd_dep_college_count#21 as bigint)), max(cd_dep_college_count#21), sum(cast(cd_dep_college_count#21 as bigint))], output=[ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cnt1#12, avg(cd_dep_count)#13, max(cd_dep_count)#14, sum(cd_dep_count)#15, cd_dep_employed_count#16, cnt2#17, avg(cd_dep_employed_count)#18, max(cd_dep_employed_count)#19, sum(cd_dep_employed_count)#20, cd_dep_college_count#21, cnt3#22, avg(cd_dep_college_count)#23, max(cd_dep_college_count)#24, sum(cd_dep_college_count)#25])
   +- Exchange hashpartitioning(ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21, 5), true, [id=#179]
      +- *(9) HashAggregate(keys=[ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21], functions=[partial_count(1), partial_avg(cast(cd_dep_count#11 as bigint)), partial_max(cd_dep_count#11), partial_sum(cast(cd_dep_count#11 as bigint)), partial_avg(cast(cd_dep_employed_count#16 as bigint)), partial_max(cd_dep_employed_count#16), partial_sum(cast(cd_dep_employed_count#16 as bigint)), partial_avg(cast(cd_dep_college_count#21 as bigint)), partial_max(cd_dep_college_count#21), partial_sum(cast(cd_dep_college_count#21 as bigint))], output=[ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21, count#180, sum#181, count#182, max#183, sum#184, sum#185, count#186, max#187, sum#188, sum#189, count#190, max#191, sum#192])
         +- *(9) Project [ca_state#8, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21]
            +- *(9) BroadcastHashJoin [c_current_cdemo_sk#29], [cd_demo_sk#28], Inner, BuildRight
               :- *(9) Project [c_current_cdemo_sk#29, ca_state#8]
               :  +- *(9) BroadcastHashJoin [c_current_addr_sk#26], [ca_address_sk#27], Inner, BuildRight
               :     :- *(9) Project [c_current_cdemo_sk#29, c_current_addr_sk#26]
               :     :  +- *(9) BroadcastHashJoin [c_customer_sk#30], [customsk#6], LeftSemi, BuildRight
               :     :     :- *(9) BroadcastHashJoin [c_customer_sk#30], [ss_customer_sk#34], LeftSemi, BuildRight
               :     :     :  :- *(9) Project [c_customer_sk#30, c_current_cdemo_sk#29, c_current_addr_sk#26]
               :     :     :  :  +- *(9) Filter (isnotnull(c_current_addr_sk#26) AND isnotnull(c_current_cdemo_sk#29))
               :     :     :  :     +- *(9) ColumnarToRow
               :     :     :  :        +- FileScan parquet default.customer[c_customer_sk#30,c_current_cdemo_sk#29,c_current_addr_sk#26] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#26), isnotnull(c_current_cdemo_sk#29)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
               :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#193]
               :     :     :     +- *(2) Project [ss_customer_sk#34]
               :     :     :        +- *(2) BroadcastHashJoin [ss_sold_date_sk#31], [d_date_sk#54], Inner, BuildRight
               :     :     :           :- *(2) Project [ss_sold_date_sk#31, ss_customer_sk#34]
               :     :     :           :  +- *(2) Filter isnotnull(ss_sold_date_sk#31)
               :     :     :           :     +- *(2) ColumnarToRow
               :     :     :           :        +- FileScan parquet default.store_sales[ss_sold_date_sk#31,ss_customer_sk#34] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
               :     :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#194]
               :     :     :              +- *(1) Project [d_date_sk#54]
               :     :     :                 +- *(1) Filter ((((isnotnull(d_year#60) AND isnotnull(d_qoy#64)) AND (d_year#60 = 1999)) AND (d_qoy#64 < 4)) AND isnotnull(d_date_sk#54))
               :     :     :                    +- *(1) ColumnarToRow
               :     :     :                       +- FileScan parquet default.date_dim[d_date_sk#54,d_year#60,d_qoy#64] Batched: true, DataFilters: [isnotnull(d_year#60), isnotnull(d_qoy#64), (d_year#60 = 1999), (d_qoy#64 < 4), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#195]
               :     :        +- Union
               :     :           :- *(4) Project [ws_bill_customer_sk#82 AS customsk#6]
               :     :           :  +- *(4) BroadcastHashJoin [ws_sold_date_sk#83], [d_date_sk#54], Inner, BuildRight
               :     :           :     :- *(4) Project [ws_sold_date_sk#83, ws_bill_customer_sk#82]
               :     :           :     :  +- *(4) Filter isnotnull(ws_sold_date_sk#83)
               :     :           :     :     +- *(4) ColumnarToRow
               :     :           :     :        +- FileScan parquet default.web_sales[ws_sold_date_sk#83,ws_bill_customer_sk#82] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#83)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
               :     :           :     +- ReusedExchange [d_date_sk#54], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#194]
               :     :           +- *(6) Project [cs_ship_customer_sk#116 AS customsk#7]
               :     :              +- *(6) BroadcastHashJoin [cs_sold_date_sk#117], [d_date_sk#54], Inner, BuildRight
               :     :                 :- *(6) Project [cs_sold_date_sk#117, cs_ship_customer_sk#116]
               :     :                 :  +- *(6) Filter isnotnull(cs_sold_date_sk#117)
               :     :                 :     +- *(6) ColumnarToRow
               :     :                 :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#117,cs_ship_customer_sk#116] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#117)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ship_customer_sk:int>
               :     :                 +- ReusedExchange [d_date_sk#54], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#194]
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#196]
               :        +- *(7) Project [ca_address_sk#27, ca_state#8]
               :           +- *(7) Filter isnotnull(ca_address_sk#27)
               :              +- *(7) ColumnarToRow
               :                 +- FileScan parquet default.customer_address[ca_address_sk#27,ca_state#8] Batched: true, DataFilters: [isnotnull(ca_address_sk#27)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#197]
                  +- *(8) Project [cd_demo_sk#28, cd_gender#9, cd_marital_status#10, cd_dep_count#11, cd_dep_employed_count#16, cd_dep_college_count#21]
                     +- *(8) Filter isnotnull(cd_demo_sk#28)
                        +- *(8) ColumnarToRow
                           +- FileScan parquet default.customer_demographics[cd_demo_sk#28,cd_gender#9,cd_marital_status#10,cd_dep_count#11,cd_dep_employed_count#16,cd_dep_college_count#21] Batched: true, DataFilters: [isnotnull(cd_demo_sk#28)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...

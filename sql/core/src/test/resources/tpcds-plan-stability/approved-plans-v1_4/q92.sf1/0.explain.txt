== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['sum('ws_ext_discount_amt) ASC NULLS FIRST], true
      +- 'Project ['sum('ws_ext_discount_amt) AS Excess Discount Amount #1]
         +- 'Filter (((('i_manufact_id = 350) AND ('i_item_sk = 'ws_item_sk)) AND (('d_date >= 2000-01-27) AND ('d_date <= (cast(2000-01-27 as date) + 90 days)))) AND (('d_date_sk = 'ws_sold_date_sk) AND ('ws_ext_discount_amt > scalar-subquery#2 [])))
            :  +- 'Project [unresolvedalias((1.3 * 'avg('ws_ext_discount_amt)), None)]
            :     +- 'Filter ((('ws_item_sk = 'i_item_sk) AND (('d_date >= 2000-01-27) AND ('d_date <= (cast(2000-01-27 as date) + 90 days)))) AND ('d_date_sk = 'ws_sold_date_sk))
            :        +- 'Join Inner
            :           :- 'UnresolvedRelation [web_sales]
            :           +- 'UnresolvedRelation [date_dim]
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'UnresolvedRelation [web_sales]
               :  +- 'UnresolvedRelation [item]
               +- 'UnresolvedRelation [date_dim]

== Analyzed Logical Plan ==
Excess Discount Amount : decimal(17,2)
GlobalLimit 100
+- LocalLimit 100
   +- Project [Excess Discount Amount #1]
      +- Sort [Excess Discount Amount #1 ASC NULLS FIRST], true
         +- Aggregate [sum(ws_ext_discount_amt#3) AS Excess Discount Amount #1]
            +- Filter ((((i_manufact_id#4 = 350) AND (i_item_sk#5 = ws_item_sk#6)) AND ((d_date#7 >= cast(2000-01-27 as date)) AND (d_date#7 <= cast(2000-01-27 as date) + 90 days))) AND ((d_date_sk#8 = ws_sold_date_sk#9) AND (cast(ws_ext_discount_amt#3 as decimal(14,7)) > cast(scalar-subquery#2 [i_item_sk#5] as decimal(14,7)))))
               :  +- Aggregate [CheckOverflow((promote_precision(cast(1.3 as decimal(11,6))) * promote_precision(cast(avg(ws_ext_discount_amt#3) as decimal(11,6)))), DecimalType(14,7), true) AS (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10]
               :     +- Filter (((ws_item_sk#6 = outer(i_item_sk#5)) AND ((d_date#7 >= cast(2000-01-27 as date)) AND (d_date#7 <= cast(2000-01-27 as date) + 90 days))) AND (d_date_sk#8 = ws_sold_date_sk#9))
               :        +- Join Inner
               :           :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.web_sales
               :           :  +- Relation[ws_sold_date_sk#9,ws_sold_time_sk#11,ws_ship_date_sk#12,ws_item_sk#6,ws_bill_customer_sk#13,ws_bill_cdemo_sk#14,ws_bill_hdemo_sk#15,ws_bill_addr_sk#16,ws_ship_customer_sk#17,ws_ship_cdemo_sk#18,ws_ship_hdemo_sk#19,ws_ship_addr_sk#20,ws_web_page_sk#21,ws_web_site_sk#22,ws_ship_mode_sk#23,ws_warehouse_sk#24,ws_promo_sk#25,ws_order_number#26,ws_quantity#27,ws_wholesale_cost#28,ws_list_price#29,ws_sales_price#30,ws_ext_discount_amt#3,ws_ext_sales_price#31,... 10 more fields] parquet
               :           +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
               :              +- Relation[d_date_sk#8,d_date_id#32,d_date#7,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet
               +- Join Inner
                  :- Join Inner
                  :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.web_sales
                  :  :  +- Relation[ws_sold_date_sk#9,ws_sold_time_sk#11,ws_ship_date_sk#12,ws_item_sk#6,ws_bill_customer_sk#13,ws_bill_cdemo_sk#14,ws_bill_hdemo_sk#15,ws_bill_addr_sk#16,ws_ship_customer_sk#17,ws_ship_cdemo_sk#18,ws_ship_hdemo_sk#19,ws_ship_addr_sk#20,ws_web_page_sk#21,ws_web_site_sk#22,ws_ship_mode_sk#23,ws_warehouse_sk#24,ws_promo_sk#25,ws_order_number#26,ws_quantity#27,ws_wholesale_cost#28,ws_list_price#29,ws_sales_price#30,ws_ext_discount_amt#3,ws_ext_sales_price#31,... 10 more fields] parquet
                  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.item
                  :     +- Relation[i_item_sk#5,i_item_id#54,i_rec_start_date#55,i_rec_end_date#56,i_item_desc#57,i_current_price#58,i_wholesale_cost#59,i_brand_id#60,i_brand#61,i_class_id#62,i_class#63,i_category_id#64,i_category#65,i_manufact_id#4,i_manufact#66,i_size#67,i_formulation#68,i_color#69,i_units#70,i_container#71,i_manager_id#72,i_product_name#73] parquet
                  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
                     +- Relation[d_date_sk#8,d_date_id#32,d_date#7,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [Excess Discount Amount #1 ASC NULLS FIRST], true
      +- Aggregate [MakeDecimal(sum(UnscaledValue(ws_ext_discount_amt#3)),17,2) AS Excess Discount Amount #1]
         +- Project [ws_ext_discount_amt#3]
            +- Join Inner, (d_date_sk#8 = ws_sold_date_sk#9)
               :- Project [ws_sold_date_sk#9, ws_ext_discount_amt#3]
               :  +- Join Inner, ((cast(ws_ext_discount_amt#3 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10) AND (ws_item_sk#6#74 = i_item_sk#5))
               :     :- Project [ws_sold_date_sk#9, ws_ext_discount_amt#3, i_item_sk#5]
               :     :  +- Join Inner, (i_item_sk#5 = ws_item_sk#6)
               :     :     :- Project [ws_sold_date_sk#9, ws_item_sk#6, ws_ext_discount_amt#3]
               :     :     :  +- Filter ((isnotnull(ws_item_sk#6) AND isnotnull(ws_ext_discount_amt#3)) AND isnotnull(ws_sold_date_sk#9))
               :     :     :     +- Relation[ws_sold_date_sk#9,ws_sold_time_sk#11,ws_ship_date_sk#12,ws_item_sk#6,ws_bill_customer_sk#13,ws_bill_cdemo_sk#14,ws_bill_hdemo_sk#15,ws_bill_addr_sk#16,ws_ship_customer_sk#17,ws_ship_cdemo_sk#18,ws_ship_hdemo_sk#19,ws_ship_addr_sk#20,ws_web_page_sk#21,ws_web_site_sk#22,ws_ship_mode_sk#23,ws_warehouse_sk#24,ws_promo_sk#25,ws_order_number#26,ws_quantity#27,ws_wholesale_cost#28,ws_list_price#29,ws_sales_price#30,ws_ext_discount_amt#3,ws_ext_sales_price#31,... 10 more fields] parquet
               :     :     +- Project [i_item_sk#5]
               :     :        +- Filter ((isnotnull(i_manufact_id#4) AND (i_manufact_id#4 = 350)) AND isnotnull(i_item_sk#5))
               :     :           +- Relation[i_item_sk#5,i_item_id#54,i_rec_start_date#55,i_rec_end_date#56,i_item_desc#57,i_current_price#58,i_wholesale_cost#59,i_brand_id#60,i_brand#61,i_class_id#62,i_class#63,i_category_id#64,i_category#65,i_manufact_id#4,i_manufact#66,i_size#67,i_formulation#68,i_color#69,i_units#70,i_container#71,i_manager_id#72,i_product_name#73] parquet
               :     +- Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10)
               :        +- Aggregate [ws_item_sk#6], [CheckOverflow((1.300000 * promote_precision(cast((avg(UnscaledValue(ws_ext_discount_amt#3)) / 100.0) as decimal(11,6)))), DecimalType(14,7), true) AS (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10, ws_item_sk#6 AS ws_item_sk#6#74]
               :           +- Project [ws_item_sk#6, ws_ext_discount_amt#3]
               :              +- Join Inner, (d_date_sk#8 = ws_sold_date_sk#9)
               :                 :- Project [ws_sold_date_sk#9, ws_item_sk#6, ws_ext_discount_amt#3]
               :                 :  +- Filter (isnotnull(ws_sold_date_sk#9) AND isnotnull(ws_item_sk#6))
               :                 :     +- Relation[ws_sold_date_sk#9,ws_sold_time_sk#11,ws_ship_date_sk#12,ws_item_sk#6,ws_bill_customer_sk#13,ws_bill_cdemo_sk#14,ws_bill_hdemo_sk#15,ws_bill_addr_sk#16,ws_ship_customer_sk#17,ws_ship_cdemo_sk#18,ws_ship_hdemo_sk#19,ws_ship_addr_sk#20,ws_web_page_sk#21,ws_web_site_sk#22,ws_ship_mode_sk#23,ws_warehouse_sk#24,ws_promo_sk#25,ws_order_number#26,ws_quantity#27,ws_wholesale_cost#28,ws_list_price#29,ws_sales_price#30,ws_ext_discount_amt#3,ws_ext_sales_price#31,... 10 more fields] parquet
               :                 +- Project [d_date_sk#8]
               :                    +- Filter (((isnotnull(d_date#7) AND (d_date#7 >= 10983)) AND (d_date#7 <= 11073)) AND isnotnull(d_date_sk#8))
               :                       +- Relation[d_date_sk#8,d_date_id#32,d_date#7,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet
               +- Project [d_date_sk#8]
                  +- Filter (((isnotnull(d_date#7) AND (d_date#7 >= 10983)) AND (d_date#7 <= 11073)) AND isnotnull(d_date_sk#8))
                     +- Relation[d_date_sk#8,d_date_id#32,d_date#7,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[Excess Discount Amount #1 ASC NULLS FIRST], output=[Excess Discount Amount #1])
+- *(9) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_discount_amt#3))], output=[Excess Discount Amount #1])
   +- Exchange SinglePartition, true, [id=#75]
      +- *(8) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ws_ext_discount_amt#3))], output=[sum#76])
         +- *(8) Project [ws_ext_discount_amt#3]
            +- *(8) BroadcastHashJoin [ws_sold_date_sk#9], [d_date_sk#8], Inner, BuildRight, false
               :- *(8) Project [ws_sold_date_sk#9, ws_ext_discount_amt#3]
               :  +- *(8) SortMergeJoin [i_item_sk#5], [ws_item_sk#6#74], Inner, (cast(ws_ext_discount_amt#3 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10)
               :     :- *(3) Sort [i_item_sk#5 ASC NULLS FIRST], false, 0
               :     :  +- Exchange hashpartitioning(i_item_sk#5, 5), true, [id=#77]
               :     :     +- *(2) Project [ws_sold_date_sk#9, ws_ext_discount_amt#3, i_item_sk#5]
               :     :        +- *(2) BroadcastHashJoin [ws_item_sk#6], [i_item_sk#5], Inner, BuildRight, false
               :     :           :- *(2) Project [ws_sold_date_sk#9, ws_item_sk#6, ws_ext_discount_amt#3]
               :     :           :  +- *(2) Filter ((isnotnull(ws_item_sk#6) AND isnotnull(ws_ext_discount_amt#3)) AND isnotnull(ws_sold_date_sk#9))
               :     :           :     +- *(2) ColumnarToRow
               :     :           :        +- FileScan parquet tpcds_sf1_parquet_stats.web_sales[ws_sold_date_sk#9,ws_item_sk#6,ws_ext_discount_amt#3] Batched: true, DataFilters: [isnotnull(ws_item_sk#6), isnotnull(ws_ext_discount_amt#3), isnotnull(ws_sold_date_sk#9)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
               :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#78]
               :     :              +- *(1) Project [i_item_sk#5]
               :     :                 +- *(1) Filter ((isnotnull(i_manufact_id#4) AND (i_manufact_id#4 = 350)) AND isnotnull(i_item_sk#5))
               :     :                    +- *(1) ColumnarToRow
               :     :                       +- FileScan parquet tpcds_sf1_parquet_stats.item[i_item_sk#5,i_manufact_id#4] Batched: true, DataFilters: [isnotnull(i_manufact_id#4), (i_manufact_id#4 = 350), isnotnull(i_item_sk#5)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
               :     +- *(6) Sort [ws_item_sk#6#74 ASC NULLS FIRST], false, 0
               :        +- *(6) Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10)
               :           +- *(6) HashAggregate(keys=[ws_item_sk#6], functions=[avg(UnscaledValue(ws_ext_discount_amt#3))], output=[(CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#10, ws_item_sk#6#74])
               :              +- Exchange hashpartitioning(ws_item_sk#6, 5), true, [id=#79]
               :                 +- *(5) HashAggregate(keys=[ws_item_sk#6], functions=[partial_avg(UnscaledValue(ws_ext_discount_amt#3))], output=[ws_item_sk#6, sum#80, count#81])
               :                    +- *(5) Project [ws_item_sk#6, ws_ext_discount_amt#3]
               :                       +- *(5) BroadcastHashJoin [ws_sold_date_sk#9], [d_date_sk#8], Inner, BuildRight, false
               :                          :- *(5) Project [ws_sold_date_sk#9, ws_item_sk#6, ws_ext_discount_amt#3]
               :                          :  +- *(5) Filter (isnotnull(ws_sold_date_sk#9) AND isnotnull(ws_item_sk#6))
               :                          :     +- *(5) ColumnarToRow
               :                          :        +- FileScan parquet tpcds_sf1_parquet_stats.web_sales[ws_sold_date_sk#9,ws_item_sk#6,ws_ext_discount_amt#3] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#9), isnotnull(ws_item_sk#6)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
               :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#82]
               :                             +- *(4) Project [d_date_sk#8]
               :                                +- *(4) Filter (((isnotnull(d_date#7) AND (d_date#7 >= 10983)) AND (d_date#7 <= 11073)) AND isnotnull(d_date_sk#8))
               :                                   +- *(4) ColumnarToRow
               :                                      +- FileScan parquet tpcds_sf1_parquet_stats.date_dim[d_date_sk#8,d_date#7] Batched: true, DataFilters: [isnotnull(d_date#7), (d_date#7 >= 10983), (d_date#7 <= 11073), isnotnull(d_date_sk#8)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
               +- ReusedExchange [d_date_sk#8], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#82]

== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['c_last_name ASC NULLS FIRST, 'ss_ticket_number ASC NULLS FIRST], true
      +- 'Project ['c_last_name, 'c_first_name, 'ca_city, 'bought_city, 'ss_ticket_number, 'extended_price, 'extended_tax, 'list_price]
         +- 'Filter ((('ss_customer_sk = 'c_customer_sk) AND ('customer.c_current_addr_sk = 'current_addr.ca_address_sk)) AND NOT ('current_addr.ca_city = 'bought_city))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'SubqueryAlias dn
               :  :  +- 'Aggregate ['ss_ticket_number, 'ss_customer_sk, 'ss_addr_sk, 'ca_city], ['ss_ticket_number, 'ss_customer_sk, 'ca_city AS bought_city#1, 'sum('ss_ext_sales_price) AS extended_price#2, 'sum('ss_ext_list_price) AS list_price#3, 'sum('ss_ext_tax) AS extended_tax#4]
               :  :     +- 'Filter (((('store_sales.ss_sold_date_sk = 'date_dim.d_date_sk) AND ('store_sales.ss_store_sk = 'store.s_store_sk)) AND (('store_sales.ss_hdemo_sk = 'household_demographics.hd_demo_sk) AND ('store_sales.ss_addr_sk = 'customer_address.ca_address_sk))) AND (((('date_dim.d_dom >= 1) AND ('date_dim.d_dom <= 2)) AND (('household_demographics.hd_dep_count = 4) OR ('household_demographics.hd_vehicle_count = 3))) AND ('date_dim.d_year IN (1999,(1999 + 1),(1999 + 2)) AND 'store.s_city IN (Midway,Fairview))))
               :  :        +- 'Join Inner
               :  :           :- 'Join Inner
               :  :           :  :- 'Join Inner
               :  :           :  :  :- 'Join Inner
               :  :           :  :  :  :- 'UnresolvedRelation [store_sales]
               :  :           :  :  :  +- 'UnresolvedRelation [date_dim]
               :  :           :  :  +- 'UnresolvedRelation [store]
               :  :           :  +- 'UnresolvedRelation [household_demographics]
               :  :           +- 'UnresolvedRelation [customer_address]
               :  +- 'UnresolvedRelation [customer]
               +- 'SubqueryAlias current_addr
                  +- 'UnresolvedRelation [customer_address]

== Analyzed Logical Plan ==
c_last_name: string, c_first_name: string, ca_city: string, bought_city: string, ss_ticket_number: int, extended_price: decimal(17,2), extended_tax: decimal(17,2), list_price: decimal(17,2)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [c_last_name#5 ASC NULLS FIRST, ss_ticket_number#6 ASC NULLS FIRST], true
      +- Project [c_last_name#5, c_first_name#7, ca_city#8, bought_city#1, ss_ticket_number#6, extended_price#2, extended_tax#4, list_price#3]
         +- Filter (((ss_customer_sk#9 = c_customer_sk#10) AND (c_current_addr_sk#11 = ca_address_sk#12)) AND NOT (ca_city#8 = bought_city#1))
            +- Join Inner
               :- Join Inner
               :  :- SubqueryAlias dn
               :  :  +- Aggregate [ss_ticket_number#6, ss_customer_sk#9, ss_addr_sk#13, ca_city#8], [ss_ticket_number#6, ss_customer_sk#9, ca_city#8 AS bought_city#1, sum(ss_ext_sales_price#14) AS extended_price#2, sum(ss_ext_list_price#15) AS list_price#3, sum(ss_ext_tax#16) AS extended_tax#4]
               :  :     +- Filter ((((ss_sold_date_sk#17 = d_date_sk#18) AND (ss_store_sk#19 = s_store_sk#20)) AND ((ss_hdemo_sk#21 = hd_demo_sk#22) AND (ss_addr_sk#13 = ca_address_sk#12))) AND ((((d_dom#23 >= 1) AND (d_dom#23 <= 2)) AND ((hd_dep_count#24 = 4) OR (hd_vehicle_count#25 = 3))) AND (d_year#26 IN (1999,(1999 + 1),(1999 + 2)) AND s_city#27 IN (Midway,Fairview))))
               :  :        +- Join Inner
               :  :           :- Join Inner
               :  :           :  :- Join Inner
               :  :           :  :  :- Join Inner
               :  :           :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
               :  :           :  :  :  :  +- Relation[ss_sold_date_sk#17,ss_sold_time_sk#28,ss_item_sk#29,ss_customer_sk#9,ss_cdemo_sk#30,ss_hdemo_sk#21,ss_addr_sk#13,ss_store_sk#19,ss_promo_sk#31,ss_ticket_number#6,ss_quantity#32,ss_wholesale_cost#33,ss_list_price#34,ss_sales_price#35,ss_ext_discount_amt#36,ss_ext_sales_price#14,ss_ext_wholesale_cost#37,ss_ext_list_price#15,ss_ext_tax#16,ss_coupon_amt#38,ss_net_paid#39,ss_net_paid_inc_tax#40,ss_net_profit#41] parquet
               :  :           :  :  :  +- SubqueryAlias spark_catalog.default.date_dim
               :  :           :  :  :     +- Relation[d_date_sk#18,d_date_id#42,d_date#43,d_month_seq#44,d_week_seq#45,d_quarter_seq#46,d_year#26,d_dow#47,d_moy#48,d_dom#23,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet
               :  :           :  :  +- SubqueryAlias spark_catalog.default.store
               :  :           :  :     +- Relation[s_store_sk#20,s_store_id#63,s_rec_start_date#64,s_rec_end_date#65,s_closed_date_sk#66,s_store_name#67,s_number_employees#68,s_floor_space#69,s_hours#70,s_manager#71,s_market_id#72,s_geography_class#73,s_market_desc#74,s_market_manager#75,s_division_id#76,s_division_name#77,s_company_id#78,s_company_name#79,s_street_number#80,s_street_name#81,s_street_type#82,s_suite_number#83,s_city#27,s_county#84,... 5 more fields] parquet
               :  :           :  +- SubqueryAlias spark_catalog.default.household_demographics
               :  :           :     +- Relation[hd_demo_sk#22,hd_income_band_sk#85,hd_buy_potential#86,hd_dep_count#24,hd_vehicle_count#25] parquet
               :  :           +- SubqueryAlias spark_catalog.default.customer_address
               :  :              +- Relation[ca_address_sk#12,ca_address_id#87,ca_street_number#88,ca_street_name#89,ca_street_type#90,ca_suite_number#91,ca_city#8,ca_county#92,ca_state#93,ca_zip#94,ca_country#95,ca_gmt_offset#96,ca_location_type#97] parquet
               :  +- SubqueryAlias spark_catalog.default.customer
               :     +- Relation[c_customer_sk#10,c_customer_id#98,c_current_cdemo_sk#99,c_current_hdemo_sk#100,c_current_addr_sk#11,c_first_shipto_date_sk#101,c_first_sales_date_sk#102,c_salutation#103,c_first_name#7,c_last_name#5,c_preferred_cust_flag#104,c_birth_day#105,c_birth_month#106,c_birth_year#107,c_birth_country#108,c_login#109,c_email_address#110,c_last_review_date#111] parquet
               +- SubqueryAlias current_addr
                  +- SubqueryAlias spark_catalog.default.customer_address
                     +- Relation[ca_address_sk#12,ca_address_id#87,ca_street_number#88,ca_street_name#89,ca_street_type#90,ca_suite_number#91,ca_city#8,ca_county#92,ca_state#93,ca_zip#94,ca_country#95,ca_gmt_offset#96,ca_location_type#97] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [c_last_name#5 ASC NULLS FIRST, ss_ticket_number#6 ASC NULLS FIRST], true
      +- Project [c_last_name#5, c_first_name#7, ca_city#8, bought_city#1, ss_ticket_number#6, extended_price#2, extended_tax#4, list_price#3]
         +- Join Inner, (NOT (ca_city#8 = bought_city#1) AND (ss_customer_sk#9 = c_customer_sk#10))
            :- Project [c_customer_sk#10, c_first_name#7, c_last_name#5, ca_city#8]
            :  +- Join Inner, (c_current_addr_sk#11 = ca_address_sk#12)
            :     :- Project [c_customer_sk#10, c_current_addr_sk#11, c_first_name#7, c_last_name#5]
            :     :  +- Filter (isnotnull(c_customer_sk#10) AND isnotnull(c_current_addr_sk#11))
            :     :     +- Relation[c_customer_sk#10,c_customer_id#98,c_current_cdemo_sk#99,c_current_hdemo_sk#100,c_current_addr_sk#11,c_first_shipto_date_sk#101,c_first_sales_date_sk#102,c_salutation#103,c_first_name#7,c_last_name#5,c_preferred_cust_flag#104,c_birth_day#105,c_birth_month#106,c_birth_year#107,c_birth_country#108,c_login#109,c_email_address#110,c_last_review_date#111] parquet
            :     +- Project [ca_address_sk#12, ca_city#8]
            :        +- Filter (isnotnull(ca_address_sk#12) AND isnotnull(ca_city#8))
            :           +- Relation[ca_address_sk#12,ca_address_id#87,ca_street_number#88,ca_street_name#89,ca_street_type#90,ca_suite_number#91,ca_city#8,ca_county#92,ca_state#93,ca_zip#94,ca_country#95,ca_gmt_offset#96,ca_location_type#97] parquet
            +- Aggregate [ss_ticket_number#6, ss_customer_sk#9, ss_addr_sk#13, ca_city#8], [ss_ticket_number#6, ss_customer_sk#9, ca_city#8 AS bought_city#1, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#14)),17,2) AS extended_price#2, MakeDecimal(sum(UnscaledValue(ss_ext_list_price#15)),17,2) AS list_price#3, MakeDecimal(sum(UnscaledValue(ss_ext_tax#16)),17,2) AS extended_tax#4]
               +- Project [ss_customer_sk#9, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16, ca_city#8]
                  +- Join Inner, (ss_addr_sk#13 = ca_address_sk#12)
                     :- Project [ss_customer_sk#9, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                     :  +- Join Inner, (ss_hdemo_sk#21 = hd_demo_sk#22)
                     :     :- Project [ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                     :     :  +- Join Inner, (ss_store_sk#19 = s_store_sk#20)
                     :     :     :- Project [ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_store_sk#19, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                     :     :     :  +- Join Inner, (ss_sold_date_sk#17 = d_date_sk#18)
                     :     :     :     :- Project [ss_sold_date_sk#17, ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_store_sk#19, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                     :     :     :     :  +- Filter ((((isnotnull(ss_sold_date_sk#17) AND isnotnull(ss_store_sk#19)) AND isnotnull(ss_hdemo_sk#21)) AND isnotnull(ss_addr_sk#13)) AND isnotnull(ss_customer_sk#9))
                     :     :     :     :     +- Relation[ss_sold_date_sk#17,ss_sold_time_sk#28,ss_item_sk#29,ss_customer_sk#9,ss_cdemo_sk#30,ss_hdemo_sk#21,ss_addr_sk#13,ss_store_sk#19,ss_promo_sk#31,ss_ticket_number#6,ss_quantity#32,ss_wholesale_cost#33,ss_list_price#34,ss_sales_price#35,ss_ext_discount_amt#36,ss_ext_sales_price#14,ss_ext_wholesale_cost#37,ss_ext_list_price#15,ss_ext_tax#16,ss_coupon_amt#38,ss_net_paid#39,ss_net_paid_inc_tax#40,ss_net_profit#41] parquet
                     :     :     :     +- Project [d_date_sk#18]
                     :     :     :        +- Filter ((((isnotnull(d_dom#23) AND (d_dom#23 >= 1)) AND (d_dom#23 <= 2)) AND d_year#26 IN (1999,2000,2001)) AND isnotnull(d_date_sk#18))
                     :     :     :           +- Relation[d_date_sk#18,d_date_id#42,d_date#43,d_month_seq#44,d_week_seq#45,d_quarter_seq#46,d_year#26,d_dow#47,d_moy#48,d_dom#23,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet
                     :     :     +- Project [s_store_sk#20]
                     :     :        +- Filter (s_city#27 IN (Midway,Fairview) AND isnotnull(s_store_sk#20))
                     :     :           +- Relation[s_store_sk#20,s_store_id#63,s_rec_start_date#64,s_rec_end_date#65,s_closed_date_sk#66,s_store_name#67,s_number_employees#68,s_floor_space#69,s_hours#70,s_manager#71,s_market_id#72,s_geography_class#73,s_market_desc#74,s_market_manager#75,s_division_id#76,s_division_name#77,s_company_id#78,s_company_name#79,s_street_number#80,s_street_name#81,s_street_type#82,s_suite_number#83,s_city#27,s_county#84,... 5 more fields] parquet
                     :     +- Project [hd_demo_sk#22]
                     :        +- Filter (((hd_dep_count#24 = 4) OR (hd_vehicle_count#25 = 3)) AND isnotnull(hd_demo_sk#22))
                     :           +- Relation[hd_demo_sk#22,hd_income_band_sk#85,hd_buy_potential#86,hd_dep_count#24,hd_vehicle_count#25] parquet
                     +- Project [ca_address_sk#12, ca_city#8]
                        +- Filter (isnotnull(ca_address_sk#12) AND isnotnull(ca_city#8))
                           +- Relation[ca_address_sk#12,ca_address_id#87,ca_street_number#88,ca_street_name#89,ca_street_type#90,ca_suite_number#91,ca_city#8,ca_county#92,ca_state#93,ca_zip#94,ca_country#95,ca_gmt_offset#96,ca_location_type#97] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[c_last_name#5 ASC NULLS FIRST,ss_ticket_number#6 ASC NULLS FIRST], output=[c_last_name#5,c_first_name#7,ca_city#8,bought_city#1,ss_ticket_number#6,extended_price#2,extended_tax#4,list_price#3])
+- *(16) Project [c_last_name#5, c_first_name#7, ca_city#8, bought_city#1, ss_ticket_number#6, extended_price#2, extended_tax#4, list_price#3]
   +- *(16) SortMergeJoin [c_customer_sk#10], [ss_customer_sk#9], Inner, NOT (ca_city#8 = bought_city#1)
      :- *(6) Sort [c_customer_sk#10 ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(c_customer_sk#10, 5), true, [id=#112]
      :     +- *(5) Project [c_customer_sk#10, c_first_name#7, c_last_name#5, ca_city#8]
      :        +- *(5) SortMergeJoin [c_current_addr_sk#11], [ca_address_sk#12], Inner
      :           :- *(2) Sort [c_current_addr_sk#11 ASC NULLS FIRST], false, 0
      :           :  +- Exchange hashpartitioning(c_current_addr_sk#11, 5), true, [id=#113]
      :           :     +- *(1) Project [c_customer_sk#10, c_current_addr_sk#11, c_first_name#7, c_last_name#5]
      :           :        +- *(1) Filter (isnotnull(c_customer_sk#10) AND isnotnull(c_current_addr_sk#11))
      :           :           +- *(1) ColumnarToRow
      :           :              +- FileScan parquet default.customer[c_customer_sk#10,c_current_addr_sk#11,c_first_name#7,c_last_name#5] Batched: true, DataFilters: [isnotnull(c_customer_sk#10), isnotnull(c_current_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
      :           +- *(4) Sort [ca_address_sk#12 ASC NULLS FIRST], false, 0
      :              +- Exchange hashpartitioning(ca_address_sk#12, 5), true, [id=#114]
      :                 +- *(3) Project [ca_address_sk#12, ca_city#8]
      :                    +- *(3) Filter (isnotnull(ca_address_sk#12) AND isnotnull(ca_city#8))
      :                       +- *(3) ColumnarToRow
      :                          +- FileScan parquet default.customer_address[ca_address_sk#12,ca_city#8] Batched: true, DataFilters: [isnotnull(ca_address_sk#12), isnotnull(ca_city#8)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_city)], ReadSchema: struct<ca_address_sk:int,ca_city:string>
      +- *(15) Sort [ss_customer_sk#9 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(ss_customer_sk#9, 5), true, [id=#115]
            +- *(14) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#9, ss_addr_sk#13, ca_city#8], functions=[sum(UnscaledValue(ss_ext_sales_price#14)), sum(UnscaledValue(ss_ext_list_price#15)), sum(UnscaledValue(ss_ext_tax#16))], output=[ss_ticket_number#6, ss_customer_sk#9, bought_city#1, extended_price#2, list_price#3, extended_tax#4])
               +- *(14) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#9, ss_addr_sk#13, ca_city#8], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#14)), partial_sum(UnscaledValue(ss_ext_list_price#15)), partial_sum(UnscaledValue(ss_ext_tax#16))], output=[ss_ticket_number#6, ss_customer_sk#9, ss_addr_sk#13, ca_city#8, sum#116, sum#117, sum#118])
                  +- *(14) Project [ss_customer_sk#9, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16, ca_city#8]
                     +- *(14) SortMergeJoin [ss_addr_sk#13], [ca_address_sk#12], Inner
                        :- *(11) Sort [ss_addr_sk#13 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(ss_addr_sk#13, 5), true, [id=#119]
                        :     +- *(10) Project [ss_customer_sk#9, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                        :        +- *(10) BroadcastHashJoin [ss_hdemo_sk#21], [hd_demo_sk#22], Inner, BuildRight, false
                        :           :- *(10) Project [ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                        :           :  +- *(10) BroadcastHashJoin [ss_store_sk#19], [s_store_sk#20], Inner, BuildRight, false
                        :           :     :- *(10) Project [ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_store_sk#19, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                        :           :     :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#17], [d_date_sk#18], Inner, BuildRight, false
                        :           :     :     :- *(10) Project [ss_sold_date_sk#17, ss_customer_sk#9, ss_hdemo_sk#21, ss_addr_sk#13, ss_store_sk#19, ss_ticket_number#6, ss_ext_sales_price#14, ss_ext_list_price#15, ss_ext_tax#16]
                        :           :     :     :  +- *(10) Filter ((((isnotnull(ss_sold_date_sk#17) AND isnotnull(ss_store_sk#19)) AND isnotnull(ss_hdemo_sk#21)) AND isnotnull(ss_addr_sk#13)) AND isnotnull(ss_customer_sk#9))
                        :           :     :     :     +- *(10) ColumnarToRow
                        :           :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#17,ss_customer_sk#9,ss_hdemo_sk#21,ss_addr_sk#13,ss_store_sk#19,ss_ticket_number#6,ss_ext_sales_price#14,ss_ext_list_price#15,ss_ext_tax#16] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#17), isnotnull(ss_store_sk#19), isnotnull(ss_hdemo_sk#21), isnot..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
                        :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#120]
                        :           :     :        +- *(7) Project [d_date_sk#18]
                        :           :     :           +- *(7) Filter ((((isnotnull(d_dom#23) AND (d_dom#23 >= 1)) AND (d_dom#23 <= 2)) AND d_year#26 IN (1999,2000,2001)) AND isnotnull(d_date_sk#18))
                        :           :     :              +- *(7) ColumnarToRow
                        :           :     :                 +- FileScan parquet default.date_dim[d_date_sk#18,d_year#26,d_dom#23] Batched: true, DataFilters: [isnotnull(d_dom#23), (d_dom#23 >= 1), (d_dom#23 <= 2), d_year#26 IN (1999,2000,2001), is..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_dom), GreaterThanOrEqual(d_dom,1), LessThanOrEqual(d_dom,2), In(d_year, [1999,2000,2..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
                        :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#121]
                        :           :        +- *(8) Project [s_store_sk#20]
                        :           :           +- *(8) Filter (s_city#27 IN (Midway,Fairview) AND isnotnull(s_store_sk#20))
                        :           :              +- *(8) ColumnarToRow
                        :           :                 +- FileScan parquet default.store[s_store_sk#20,s_city#27] Batched: true, DataFilters: [s_city#27 IN (Midway,Fairview), isnotnull(s_store_sk#20)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(s_city, [Midway,Fairview]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_city:string>
                        :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#122]
                        :              +- *(9) Project [hd_demo_sk#22]
                        :                 +- *(9) Filter (((hd_dep_count#24 = 4) OR (hd_vehicle_count#25 = 3)) AND isnotnull(hd_demo_sk#22))
                        :                    +- *(9) ColumnarToRow
                        :                       +- FileScan parquet default.household_demographics[hd_demo_sk#22,hd_dep_count#24,hd_vehicle_count#25] Batched: true, DataFilters: [((hd_dep_count#24 = 4) OR (hd_vehicle_count#25 = 3)), isnotnull(hd_demo_sk#22)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,4),EqualTo(hd_vehicle_count,3)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
                        +- *(13) Sort [ca_address_sk#12 ASC NULLS FIRST], false, 0
                           +- ReusedExchange [ca_address_sk#12, ca_city#8], Exchange hashpartitioning(ca_address_sk#12, 5), true, [id=#114]

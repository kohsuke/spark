== Parsed Logical Plan ==
'Sort ['c_last_name ASC NULLS FIRST, 'c_first_name ASC NULLS FIRST, 'c_salutation ASC NULLS FIRST, 'c_preferred_cust_flag DESC NULLS LAST], true
+- 'Project ['c_last_name, 'c_first_name, 'c_salutation, 'c_preferred_cust_flag, 'ss_ticket_number, 'cnt]
   +- 'Filter (('ss_customer_sk = 'c_customer_sk) AND (('cnt >= 15) AND ('cnt <= 20)))
      +- 'Join Inner
         :- 'SubqueryAlias dn
         :  +- 'Aggregate ['ss_ticket_number, 'ss_customer_sk], ['ss_ticket_number, 'ss_customer_sk, 'count(1) AS cnt#1]
         :     +- 'Filter ((((('store_sales.ss_sold_date_sk = 'date_dim.d_date_sk) AND ('store_sales.ss_store_sk = 'store.s_store_sk)) AND ('store_sales.ss_hdemo_sk = 'household_demographics.hd_demo_sk)) AND (((('date_dim.d_dom >= 1) AND ('date_dim.d_dom <= 3)) OR (('date_dim.d_dom >= 25) AND ('date_dim.d_dom <= 28))) AND (('household_demographics.hd_buy_potential = >10000) OR ('household_demographics.hd_buy_potential = unknown)))) AND ((('household_demographics.hd_vehicle_count > 0) AND (CASE WHEN ('household_demographics.hd_vehicle_count > 0) THEN ('household_demographics.hd_dep_count / 'household_demographics.hd_vehicle_count) ELSE null END > 1.2)) AND ('date_dim.d_year IN (1999,(1999 + 1),(1999 + 2)) AND 'store.s_county IN (Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County))))
         :        +- 'Join Inner
         :           :- 'Join Inner
         :           :  :- 'Join Inner
         :           :  :  :- 'UnresolvedRelation [store_sales]
         :           :  :  +- 'UnresolvedRelation [date_dim]
         :           :  +- 'UnresolvedRelation [store]
         :           +- 'UnresolvedRelation [household_demographics]
         +- 'UnresolvedRelation [customer]

== Analyzed Logical Plan ==
c_last_name: string, c_first_name: string, c_salutation: string, c_preferred_cust_flag: string, ss_ticket_number: int, cnt: bigint
Sort [c_last_name#2 ASC NULLS FIRST, c_first_name#3 ASC NULLS FIRST, c_salutation#4 ASC NULLS FIRST, c_preferred_cust_flag#5 DESC NULLS LAST], true
+- Project [c_last_name#2, c_first_name#3, c_salutation#4, c_preferred_cust_flag#5, ss_ticket_number#6, cnt#7]
   +- Filter ((ss_customer_sk#8 = c_customer_sk#9) AND ((cnt#7 >= cast(15 as bigint)) AND (cnt#7 <= cast(20 as bigint))))
      +- Join Inner
         :- SubqueryAlias dn
         :  +- Aggregate [ss_ticket_number#6, ss_customer_sk#8], [ss_ticket_number#6, ss_customer_sk#8, count(1) AS cnt#7]
         :     +- Filter (((((ss_sold_date_sk#10 = d_date_sk#11) AND (ss_store_sk#12 = s_store_sk#13)) AND (ss_hdemo_sk#14 = hd_demo_sk#15)) AND ((((d_dom#16 >= 1) AND (d_dom#16 <= 3)) OR ((d_dom#16 >= 25) AND (d_dom#16 <= 28))) AND ((hd_buy_potential#17 = >10000) OR (hd_buy_potential#17 = unknown)))) AND (((hd_vehicle_count#18 > 0) AND (CASE WHEN (hd_vehicle_count#18 > 0) THEN (cast(hd_dep_count#19 as double) / cast(hd_vehicle_count#18 as double)) ELSE cast(null as double) END > cast(1.2 as double))) AND (d_year#20 IN (1999,(1999 + 1),(1999 + 2)) AND s_county#21 IN (Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County,Williamson County))))
         :        +- Join Inner
         :           :- Join Inner
         :           :  :- Join Inner
         :           :  :  :- SubqueryAlias spark_catalog.default.store_sales
         :           :  :  :  +- Relation[ss_sold_date_sk#10,ss_sold_time_sk#22,ss_item_sk#23,ss_customer_sk#8,ss_cdemo_sk#24,ss_hdemo_sk#14,ss_addr_sk#25,ss_store_sk#12,ss_promo_sk#26,ss_ticket_number#6,ss_quantity#27,ss_wholesale_cost#28,ss_list_price#29,ss_sales_price#30,ss_ext_discount_amt#31,ss_ext_sales_price#32,ss_ext_wholesale_cost#33,ss_ext_list_price#34,ss_ext_tax#35,ss_coupon_amt#36,ss_net_paid#37,ss_net_paid_inc_tax#38,ss_net_profit#39] parquet
         :           :  :  +- SubqueryAlias spark_catalog.default.date_dim
         :           :  :     +- Relation[d_date_sk#11,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#20,d_dow#45,d_moy#46,d_dom#16,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet
         :           :  +- SubqueryAlias spark_catalog.default.store
         :           :     +- Relation[s_store_sk#13,s_store_id#61,s_rec_start_date#62,s_rec_end_date#63,s_closed_date_sk#64,s_store_name#65,s_number_employees#66,s_floor_space#67,s_hours#68,s_manager#69,s_market_id#70,s_geography_class#71,s_market_desc#72,s_market_manager#73,s_division_id#74,s_division_name#75,s_company_id#76,s_company_name#77,s_street_number#78,s_street_name#79,s_street_type#80,s_suite_number#81,s_city#82,s_county#21,... 5 more fields] parquet
         :           +- SubqueryAlias spark_catalog.default.household_demographics
         :              +- Relation[hd_demo_sk#15,hd_income_band_sk#83,hd_buy_potential#17,hd_dep_count#19,hd_vehicle_count#18] parquet
         +- SubqueryAlias spark_catalog.default.customer
            +- Relation[c_customer_sk#9,c_customer_id#84,c_current_cdemo_sk#85,c_current_hdemo_sk#86,c_current_addr_sk#87,c_first_shipto_date_sk#88,c_first_sales_date_sk#89,c_salutation#4,c_first_name#3,c_last_name#2,c_preferred_cust_flag#5,c_birth_day#90,c_birth_month#91,c_birth_year#92,c_birth_country#93,c_login#94,c_email_address#95,c_last_review_date#96] parquet

== Optimized Logical Plan ==
Sort [c_last_name#2 ASC NULLS FIRST, c_first_name#3 ASC NULLS FIRST, c_salutation#4 ASC NULLS FIRST, c_preferred_cust_flag#5 DESC NULLS LAST], true
+- Project [c_last_name#2, c_first_name#3, c_salutation#4, c_preferred_cust_flag#5, ss_ticket_number#6, cnt#7]
   +- Join Inner, (ss_customer_sk#8 = c_customer_sk#9)
      :- Filter ((cnt#7 >= 15) AND (cnt#7 <= 20))
      :  +- Aggregate [ss_ticket_number#6, ss_customer_sk#8], [ss_ticket_number#6, ss_customer_sk#8, count(1) AS cnt#7]
      :     +- Project [ss_customer_sk#8, ss_ticket_number#6]
      :        +- Join Inner, (ss_hdemo_sk#14 = hd_demo_sk#15)
      :           :- Project [ss_customer_sk#8, ss_hdemo_sk#14, ss_ticket_number#6]
      :           :  +- Join Inner, (ss_store_sk#12 = s_store_sk#13)
      :           :     :- Project [ss_customer_sk#8, ss_hdemo_sk#14, ss_store_sk#12, ss_ticket_number#6]
      :           :     :  +- Join Inner, (ss_sold_date_sk#10 = d_date_sk#11)
      :           :     :     :- Project [ss_sold_date_sk#10, ss_customer_sk#8, ss_hdemo_sk#14, ss_store_sk#12, ss_ticket_number#6]
      :           :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#10) AND isnotnull(ss_store_sk#12)) AND isnotnull(ss_hdemo_sk#14)) AND isnotnull(ss_customer_sk#8))
      :           :     :     :     +- Relation[ss_sold_date_sk#10,ss_sold_time_sk#22,ss_item_sk#23,ss_customer_sk#8,ss_cdemo_sk#24,ss_hdemo_sk#14,ss_addr_sk#25,ss_store_sk#12,ss_promo_sk#26,ss_ticket_number#6,ss_quantity#27,ss_wholesale_cost#28,ss_list_price#29,ss_sales_price#30,ss_ext_discount_amt#31,ss_ext_sales_price#32,ss_ext_wholesale_cost#33,ss_ext_list_price#34,ss_ext_tax#35,ss_coupon_amt#36,ss_net_paid#37,ss_net_paid_inc_tax#38,ss_net_profit#39] parquet
      :           :     :     +- Project [d_date_sk#11]
      :           :     :        +- Filter (((((d_dom#16 >= 1) AND (d_dom#16 <= 3)) OR ((d_dom#16 >= 25) AND (d_dom#16 <= 28))) AND d_year#20 IN (1999,2000,2001)) AND isnotnull(d_date_sk#11))
      :           :     :           +- Relation[d_date_sk#11,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#20,d_dow#45,d_moy#46,d_dom#16,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet
      :           :     +- Project [s_store_sk#13]
      :           :        +- Filter ((isnotnull(s_county#21) AND (s_county#21 = Williamson County)) AND isnotnull(s_store_sk#13))
      :           :           +- Relation[s_store_sk#13,s_store_id#61,s_rec_start_date#62,s_rec_end_date#63,s_closed_date_sk#64,s_store_name#65,s_number_employees#66,s_floor_space#67,s_hours#68,s_manager#69,s_market_id#70,s_geography_class#71,s_market_desc#72,s_market_manager#73,s_division_id#74,s_division_name#75,s_company_id#76,s_company_name#77,s_street_number#78,s_street_name#79,s_street_type#80,s_suite_number#81,s_city#82,s_county#21,... 5 more fields] parquet
      :           +- Project [hd_demo_sk#15]
      :              +- Filter ((((isnotnull(hd_vehicle_count#18) AND ((hd_buy_potential#17 = >10000) OR (hd_buy_potential#17 = unknown))) AND (hd_vehicle_count#18 > 0)) AND (CASE WHEN (hd_vehicle_count#18 > 0) THEN (cast(hd_dep_count#19 as double) / cast(hd_vehicle_count#18 as double)) ELSE null END > 1.2)) AND isnotnull(hd_demo_sk#15))
      :                 +- Relation[hd_demo_sk#15,hd_income_band_sk#83,hd_buy_potential#17,hd_dep_count#19,hd_vehicle_count#18] parquet
      +- Project [c_customer_sk#9, c_salutation#4, c_first_name#3, c_last_name#2, c_preferred_cust_flag#5]
         +- Filter isnotnull(c_customer_sk#9)
            +- Relation[c_customer_sk#9,c_customer_id#84,c_current_cdemo_sk#85,c_current_hdemo_sk#86,c_current_addr_sk#87,c_first_shipto_date_sk#88,c_first_sales_date_sk#89,c_salutation#4,c_first_name#3,c_last_name#2,c_preferred_cust_flag#5,c_birth_day#90,c_birth_month#91,c_birth_year#92,c_birth_country#93,c_login#94,c_email_address#95,c_last_review_date#96] parquet

== Physical Plan ==
*(10) Sort [c_last_name#2 ASC NULLS FIRST, c_first_name#3 ASC NULLS FIRST, c_salutation#4 ASC NULLS FIRST, c_preferred_cust_flag#5 DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(c_last_name#2 ASC NULLS FIRST, c_first_name#3 ASC NULLS FIRST, c_salutation#4 ASC NULLS FIRST, c_preferred_cust_flag#5 DESC NULLS LAST, 5), true, [id=#97]
   +- *(9) Project [c_last_name#2, c_first_name#3, c_salutation#4, c_preferred_cust_flag#5, ss_ticket_number#6, cnt#7]
      +- *(9) SortMergeJoin [ss_customer_sk#8], [c_customer_sk#9], Inner
         :- *(6) Sort [ss_customer_sk#8 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(ss_customer_sk#8, 5), true, [id=#98]
         :     +- *(5) Filter ((cnt#7 >= 15) AND (cnt#7 <= 20))
         :        +- *(5) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#8], functions=[count(1)], output=[ss_ticket_number#6, ss_customer_sk#8, cnt#7])
         :           +- Exchange hashpartitioning(ss_ticket_number#6, ss_customer_sk#8, 5), true, [id=#99]
         :              +- *(4) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#8], functions=[partial_count(1)], output=[ss_ticket_number#6, ss_customer_sk#8, count#100])
         :                 +- *(4) Project [ss_customer_sk#8, ss_ticket_number#6]
         :                    +- *(4) BroadcastHashJoin [ss_hdemo_sk#14], [hd_demo_sk#15], Inner, BuildRight, false
         :                       :- *(4) Project [ss_customer_sk#8, ss_hdemo_sk#14, ss_ticket_number#6]
         :                       :  +- *(4) BroadcastHashJoin [ss_store_sk#12], [s_store_sk#13], Inner, BuildRight, false
         :                       :     :- *(4) Project [ss_customer_sk#8, ss_hdemo_sk#14, ss_store_sk#12, ss_ticket_number#6]
         :                       :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#10], [d_date_sk#11], Inner, BuildRight, false
         :                       :     :     :- *(4) Project [ss_sold_date_sk#10, ss_customer_sk#8, ss_hdemo_sk#14, ss_store_sk#12, ss_ticket_number#6]
         :                       :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#10) AND isnotnull(ss_store_sk#12)) AND isnotnull(ss_hdemo_sk#14)) AND isnotnull(ss_customer_sk#8))
         :                       :     :     :     +- *(4) ColumnarToRow
         :                       :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#10,ss_customer_sk#8,ss_hdemo_sk#14,ss_store_sk#12,ss_ticket_number#6] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#10), isnotnull(ss_store_sk#12), isnotnull(ss_hdemo_sk#14), isnot..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:int>
         :                       :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#101]
         :                       :     :        +- *(1) Project [d_date_sk#11]
         :                       :     :           +- *(1) Filter (((((d_dom#16 >= 1) AND (d_dom#16 <= 3)) OR ((d_dom#16 >= 25) AND (d_dom#16 <= 28))) AND d_year#20 IN (1999,2000,2001)) AND isnotnull(d_date_sk#11))
         :                       :     :              +- *(1) ColumnarToRow
         :                       :     :                 +- FileScan parquet default.date_dim[d_date_sk#11,d_year#20,d_dom#16] Batched: true, DataFilters: [(((d_dom#16 >= 1) AND (d_dom#16 <= 3)) OR ((d_dom#16 >= 25) AND (d_dom#16 <= 28))), d_ye..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [Or(And(GreaterThanOrEqual(d_dom,1),LessThanOrEqual(d_dom,3)),And(GreaterThanOrEqual(d_dom,25),Le..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
         :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#102]
         :                       :        +- *(2) Project [s_store_sk#13]
         :                       :           +- *(2) Filter ((isnotnull(s_county#21) AND (s_county#21 = Williamson County)) AND isnotnull(s_store_sk#13))
         :                       :              +- *(2) ColumnarToRow
         :                       :                 +- FileScan parquet default.store[s_store_sk#13,s_county#21] Batched: true, DataFilters: [isnotnull(s_county#21), (s_county#21 = Williamson County), isnotnull(s_store_sk#13)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_county), EqualTo(s_county,Williamson County), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_county:string>
         :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#103]
         :                          +- *(3) Project [hd_demo_sk#15]
         :                             +- *(3) Filter ((((isnotnull(hd_vehicle_count#18) AND ((hd_buy_potential#17 = >10000) OR (hd_buy_potential#17 = unknown))) AND (hd_vehicle_count#18 > 0)) AND (CASE WHEN (hd_vehicle_count#18 > 0) THEN (cast(hd_dep_count#19 as double) / cast(hd_vehicle_count#18 as double)) ELSE null END > 1.2)) AND isnotnull(hd_demo_sk#15))
         :                                +- *(3) ColumnarToRow
         :                                   +- FileScan parquet default.household_demographics[hd_demo_sk#15,hd_buy_potential#17,hd_dep_count#19,hd_vehicle_count#18] Batched: true, DataFilters: [isnotnull(hd_vehicle_count#18), ((hd_buy_potential#17 = >10000) OR (hd_buy_potential#17 = ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(hd_vehicle_count), Or(EqualTo(hd_buy_potential,>10000),EqualTo(hd_buy_potential,unknow..., ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
         +- *(8) Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(c_customer_sk#9, 5), true, [id=#104]
               +- *(7) Project [c_customer_sk#9, c_salutation#4, c_first_name#3, c_last_name#2, c_preferred_cust_flag#5]
                  +- *(7) Filter isnotnull(c_customer_sk#9)
                     +- *(7) ColumnarToRow
                        +- FileScan parquet default.customer[c_customer_sk#9,c_salutation#4,c_first_name#3,c_last_name#2,c_preferred_cust_flag#5] Batched: true, DataFilters: [isnotnull(c_customer_sk#9)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...

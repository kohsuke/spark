== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['s_store_name ASC NULLS FIRST, 's_company_id ASC NULLS FIRST, 's_street_number ASC NULLS FIRST, 's_street_name ASC NULLS FIRST, 's_street_type ASC NULLS FIRST, 's_suite_number ASC NULLS FIRST, 's_city ASC NULLS FIRST, 's_county ASC NULLS FIRST, 's_state ASC NULLS FIRST, 's_zip ASC NULLS FIRST], true
      +- 'Aggregate ['s_store_name, 's_company_id, 's_street_number, 's_street_name, 's_street_type, 's_suite_number, 's_city, 's_county, 's_state, 's_zip], ['s_store_name, 's_company_id, 's_street_number, 's_street_name, 's_street_type, 's_suite_number, 's_city, 's_county, 's_state, 's_zip, 'sum(CASE WHEN (('sr_returned_date_sk - 'ss_sold_date_sk) <= 30) THEN 1 ELSE 0 END) AS 30 days #1, 'sum(CASE WHEN ((('sr_returned_date_sk - 'ss_sold_date_sk) > 30) AND (('sr_returned_date_sk - 'ss_sold_date_sk) <= 60)) THEN 1 ELSE 0 END) AS 31 - 60 days #2, 'sum(CASE WHEN ((('sr_returned_date_sk - 'ss_sold_date_sk) > 60) AND (('sr_returned_date_sk - 'ss_sold_date_sk) <= 90)) THEN 1 ELSE 0 END) AS 61 - 90 days #3, 'sum(CASE WHEN ((('sr_returned_date_sk - 'ss_sold_date_sk) > 90) AND (('sr_returned_date_sk - 'ss_sold_date_sk) <= 120)) THEN 1 ELSE 0 END) AS 91 - 120 days #4, 'sum(CASE WHEN (('sr_returned_date_sk - 'ss_sold_date_sk) > 120) THEN 1 ELSE 0 END) AS >120 days #5]
         +- 'Filter (((('d2.d_year = 2001) AND ('d2.d_moy = 8)) AND (('ss_ticket_number = 'sr_ticket_number) AND ('ss_item_sk = 'sr_item_sk))) AND ((('ss_sold_date_sk = 'd1.d_date_sk) AND ('sr_returned_date_sk = 'd2.d_date_sk)) AND (('ss_customer_sk = 'sr_customer_sk) AND ('ss_store_sk = 's_store_sk))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join Inner
               :  :  :  :- 'UnresolvedRelation [store_sales]
               :  :  :  +- 'UnresolvedRelation [store_returns]
               :  :  +- 'UnresolvedRelation [store]
               :  +- 'SubqueryAlias d1
               :     +- 'UnresolvedRelation [date_dim]
               +- 'SubqueryAlias d2
                  +- 'UnresolvedRelation [date_dim]

== Analyzed Logical Plan ==
s_store_name: string, s_company_id: int, s_street_number: string, s_street_name: string, s_street_type: string, s_suite_number: string, s_city: string, s_county: string, s_state: string, s_zip: string, 30 days : bigint, 31 - 60 days : bigint, 61 - 90 days : bigint, 91 - 120 days : bigint, >120 days : bigint
GlobalLimit 100
+- LocalLimit 100
   +- Project [s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, 30 days #16, 31 - 60 days #17, 61 - 90 days #18, 91 - 120 days #19, >120 days #20]
      +- Sort [s_store_name#6 ASC NULLS FIRST, s_company_id#7 ASC NULLS FIRST, s_street_number#8 ASC NULLS FIRST, s_street_name#9 ASC NULLS FIRST, s_street_type#10 ASC NULLS FIRST, s_suite_number#11 ASC NULLS FIRST, s_city#12 ASC NULLS FIRST, s_county#13 ASC NULLS FIRST, s_state#14 ASC NULLS FIRST, s_zip#15 ASC NULLS FIRST], true
         +- Aggregate [s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15], [s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= cast(30 as bigint)) THEN 1 ELSE 0 END as bigint)) AS 30 days #16, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > cast(30 as bigint)) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= cast(60 as bigint))) THEN 1 ELSE 0 END as bigint)) AS 31 - 60 days #17, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > cast(60 as bigint)) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= cast(90 as bigint))) THEN 1 ELSE 0 END as bigint)) AS 61 - 90 days #18, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > cast(90 as bigint)) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= cast(120 as bigint))) THEN 1 ELSE 0 END as bigint)) AS 91 - 120 days #19, sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > cast(120 as bigint)) THEN 1 ELSE 0 END as bigint)) AS >120 days #20]
            +- Filter ((((d_year#23 = 2001) AND (d_moy#24 = 8)) AND ((cast(ss_ticket_number#25 as bigint) = sr_ticket_number#26) AND (cast(ss_item_sk#27 as bigint) = sr_item_sk#28))) AND (((ss_sold_date_sk#22 = d_date_sk#29) AND (sr_returned_date_sk#21 = cast(d_date_sk#30 as bigint))) AND ((cast(ss_customer_sk#31 as bigint) = sr_customer_sk#32) AND (ss_store_sk#33 = s_store_sk#34))))
               +- Join Inner
                  :- Join Inner
                  :  :- Join Inner
                  :  :  :- Join Inner
                  :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
                  :  :  :  :  +- Relation[ss_sold_date_sk#22,ss_sold_time_sk#35,ss_item_sk#27,ss_customer_sk#31,ss_cdemo_sk#36,ss_hdemo_sk#37,ss_addr_sk#38,ss_store_sk#33,ss_promo_sk#39,ss_ticket_number#25,ss_quantity#40,ss_wholesale_cost#41,ss_list_price#42,ss_sales_price#43,ss_ext_discount_amt#44,ss_ext_sales_price#45,ss_ext_wholesale_cost#46,ss_ext_list_price#47,ss_ext_tax#48,ss_coupon_amt#49,ss_net_paid#50,ss_net_paid_inc_tax#51,ss_net_profit#52] parquet
                  :  :  :  +- SubqueryAlias spark_catalog.default.store_returns
                  :  :  :     +- Relation[sr_returned_date_sk#21,sr_return_time_sk#53,sr_item_sk#28,sr_customer_sk#32,sr_cdemo_sk#54,sr_hdemo_sk#55,sr_addr_sk#56,sr_store_sk#57,sr_reason_sk#58,sr_ticket_number#26,sr_return_quantity#59,sr_return_amt#60,sr_return_tax#61,sr_return_amt_inc_tax#62,sr_fee#63,sr_return_ship_cost#64,sr_refunded_cash#65,sr_reversed_charge#66,sr_store_credit#67,sr_net_loss#68] parquet
                  :  :  +- SubqueryAlias spark_catalog.default.store
                  :  :     +- Relation[s_store_sk#34,s_store_id#69,s_rec_start_date#70,s_rec_end_date#71,s_closed_date_sk#72,s_store_name#6,s_number_employees#73,s_floor_space#74,s_hours#75,s_manager#76,s_market_id#77,s_geography_class#78,s_market_desc#79,s_market_manager#80,s_division_id#81,s_division_name#82,s_company_id#7,s_company_name#83,s_street_number#8,s_street_name#9,s_street_type#10,s_suite_number#11,s_city#12,s_county#13,... 5 more fields] parquet
                  :  +- SubqueryAlias d1
                  :     +- SubqueryAlias spark_catalog.default.date_dim
                  :        +- Relation[d_date_sk#29,d_date_id#84,d_date#85,d_month_seq#86,d_week_seq#87,d_quarter_seq#88,d_year#89,d_dow#90,d_moy#91,d_dom#92,d_qoy#93,d_fy_year#94,d_fy_quarter_seq#95,d_fy_week_seq#96,d_day_name#97,d_quarter_name#98,d_holiday#99,d_weekend#100,d_following_holiday#101,d_first_dom#102,d_last_dom#103,d_same_day_ly#104,d_same_day_lq#105,d_current_day#106,... 4 more fields] parquet
                  +- SubqueryAlias d2
                     +- SubqueryAlias spark_catalog.default.date_dim
                        +- Relation[d_date_sk#30,d_date_id#107,d_date#108,d_month_seq#109,d_week_seq#110,d_quarter_seq#111,d_year#23,d_dow#112,d_moy#24,d_dom#113,d_qoy#114,d_fy_year#115,d_fy_quarter_seq#116,d_fy_week_seq#117,d_day_name#118,d_quarter_name#119,d_holiday#120,d_weekend#121,d_following_holiday#122,d_first_dom#123,d_last_dom#124,d_same_day_ly#125,d_same_day_lq#126,d_current_day#127,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [s_store_name#6 ASC NULLS FIRST, s_company_id#7 ASC NULLS FIRST, s_street_number#8 ASC NULLS FIRST, s_street_name#9 ASC NULLS FIRST, s_street_type#10 ASC NULLS FIRST, s_suite_number#11 ASC NULLS FIRST, s_city#12 ASC NULLS FIRST, s_county#13 ASC NULLS FIRST, s_state#14 ASC NULLS FIRST, s_zip#15 ASC NULLS FIRST], true
      +- Aggregate [s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15], [s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 30) THEN 1 ELSE 0 END as bigint)) AS 30 days #16, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 30) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 60)) THEN 1 ELSE 0 END as bigint)) AS 31 - 60 days #17, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 60) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 90)) THEN 1 ELSE 0 END as bigint)) AS 61 - 90 days #18, sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 90) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 120)) THEN 1 ELSE 0 END as bigint)) AS 91 - 120 days #19, sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 120) THEN 1 ELSE 0 END as bigint)) AS >120 days #20]
         +- Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
            +- Join Inner, (sr_returned_date_sk#21 = cast(d_date_sk#30 as bigint))
               :- Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
               :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#29)
               :     :- Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
               :     :  +- Join Inner, (ss_store_sk#33 = s_store_sk#34)
               :     :     :- Project [ss_sold_date_sk#22, ss_store_sk#33, sr_returned_date_sk#21]
               :     :     :  +- Join Inner, (((cast(ss_ticket_number#25 as bigint) = sr_ticket_number#26) AND (cast(ss_item_sk#27 as bigint) = sr_item_sk#28)) AND (cast(ss_customer_sk#31 as bigint) = sr_customer_sk#32))
               :     :     :     :- Project [ss_sold_date_sk#22, ss_item_sk#27, ss_customer_sk#31, ss_store_sk#33, ss_ticket_number#25]
               :     :     :     :  +- Filter ((((isnotnull(ss_item_sk#27) AND isnotnull(ss_customer_sk#31)) AND isnotnull(ss_ticket_number#25)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_sold_date_sk#22))
               :     :     :     :     +- Relation[ss_sold_date_sk#22,ss_sold_time_sk#35,ss_item_sk#27,ss_customer_sk#31,ss_cdemo_sk#36,ss_hdemo_sk#37,ss_addr_sk#38,ss_store_sk#33,ss_promo_sk#39,ss_ticket_number#25,ss_quantity#40,ss_wholesale_cost#41,ss_list_price#42,ss_sales_price#43,ss_ext_discount_amt#44,ss_ext_sales_price#45,ss_ext_wholesale_cost#46,ss_ext_list_price#47,ss_ext_tax#48,ss_coupon_amt#49,ss_net_paid#50,ss_net_paid_inc_tax#51,ss_net_profit#52] parquet
               :     :     :     +- Project [sr_returned_date_sk#21, sr_item_sk#28, sr_customer_sk#32, sr_ticket_number#26]
               :     :     :        +- Filter (((isnotnull(sr_ticket_number#26) AND isnotnull(sr_customer_sk#32)) AND isnotnull(sr_item_sk#28)) AND isnotnull(sr_returned_date_sk#21))
               :     :     :           +- Relation[sr_returned_date_sk#21,sr_return_time_sk#53,sr_item_sk#28,sr_customer_sk#32,sr_cdemo_sk#54,sr_hdemo_sk#55,sr_addr_sk#56,sr_store_sk#57,sr_reason_sk#58,sr_ticket_number#26,sr_return_quantity#59,sr_return_amt#60,sr_return_tax#61,sr_return_amt_inc_tax#62,sr_fee#63,sr_return_ship_cost#64,sr_refunded_cash#65,sr_reversed_charge#66,sr_store_credit#67,sr_net_loss#68] parquet
               :     :     +- Project [s_store_sk#34, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
               :     :        +- Filter isnotnull(s_store_sk#34)
               :     :           +- Relation[s_store_sk#34,s_store_id#69,s_rec_start_date#70,s_rec_end_date#71,s_closed_date_sk#72,s_store_name#6,s_number_employees#73,s_floor_space#74,s_hours#75,s_manager#76,s_market_id#77,s_geography_class#78,s_market_desc#79,s_market_manager#80,s_division_id#81,s_division_name#82,s_company_id#7,s_company_name#83,s_street_number#8,s_street_name#9,s_street_type#10,s_suite_number#11,s_city#12,s_county#13,... 5 more fields] parquet
               :     +- Project [d_date_sk#29]
               :        +- Filter isnotnull(d_date_sk#29)
               :           +- Relation[d_date_sk#29,d_date_id#84,d_date#85,d_month_seq#86,d_week_seq#87,d_quarter_seq#88,d_year#89,d_dow#90,d_moy#91,d_dom#92,d_qoy#93,d_fy_year#94,d_fy_quarter_seq#95,d_fy_week_seq#96,d_day_name#97,d_quarter_name#98,d_holiday#99,d_weekend#100,d_following_holiday#101,d_first_dom#102,d_last_dom#103,d_same_day_ly#104,d_same_day_lq#105,d_current_day#106,... 4 more fields] parquet
               +- Project [d_date_sk#30]
                  +- Filter ((((isnotnull(d_year#23) AND isnotnull(d_moy#24)) AND (d_year#23 = 2001)) AND (d_moy#24 = 8)) AND isnotnull(d_date_sk#30))
                     +- Relation[d_date_sk#30,d_date_id#107,d_date#108,d_month_seq#109,d_week_seq#110,d_quarter_seq#111,d_year#23,d_dow#112,d_moy#24,d_dom#113,d_qoy#114,d_fy_year#115,d_fy_quarter_seq#116,d_fy_week_seq#117,d_day_name#118,d_quarter_name#119,d_holiday#120,d_weekend#121,d_following_holiday#122,d_first_dom#123,d_last_dom#124,d_same_day_ly#125,d_same_day_lq#126,d_current_day#127,... 4 more fields] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[s_store_name#6 ASC NULLS FIRST,s_company_id#7 ASC NULLS FIRST,s_street_number#8 ASC NULLS FIRST,s_street_name#9 ASC NULLS FIRST,s_street_type#10 ASC NULLS FIRST,s_suite_number#11 ASC NULLS FIRST,s_city#12 ASC NULLS FIRST,s_county#13 ASC NULLS FIRST,s_state#14 ASC NULLS FIRST,s_zip#15 ASC NULLS FIRST], output=[s_store_name#6,s_company_id#7,s_street_number#8,s_street_name#9,s_street_type#10,s_suite_number#11,s_city#12,s_county#13,s_state#14,s_zip#15,30 days #16,31 - 60 days #17,61 - 90 days #18,91 - 120 days #19,>120 days #20])
+- *(6) HashAggregate(keys=[s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15], functions=[sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 30) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 60) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 90) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 120) THEN 1 ELSE 0 END as bigint))], output=[s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, 30 days #16, 31 - 60 days #17, 61 - 90 days #18, 91 - 120 days #19, >120 days #20])
   +- Exchange hashpartitioning(s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, 5), true, [id=#128]
      +- *(5) HashAggregate(keys=[s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15], functions=[partial_sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 30) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 60) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 90) AND ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((sr_returned_date_sk#21 - cast(ss_sold_date_sk#22 as bigint)) > 120) THEN 1 ELSE 0 END as bigint))], output=[s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15, sum#129, sum#130, sum#131, sum#132, sum#133])
         +- *(5) Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
            +- *(5) BroadcastHashJoin [sr_returned_date_sk#21], [cast(d_date_sk#30 as bigint)], Inner, BuildRight, false
               :- *(5) Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
               :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#29], Inner, BuildRight, false
               :     :- *(5) Project [ss_sold_date_sk#22, sr_returned_date_sk#21, s_store_name#6, s_company_id#7, s_street_number#8, s_street_name#9, s_street_type#10, s_suite_number#11, s_city#12, s_county#13, s_state#14, s_zip#15]
               :     :  +- *(5) BroadcastHashJoin [ss_store_sk#33], [s_store_sk#34], Inner, BuildRight, false
               :     :     :- *(5) Project [ss_sold_date_sk#22, ss_store_sk#33, sr_returned_date_sk#21]
               :     :     :  +- *(5) BroadcastHashJoin [cast(ss_ticket_number#25 as bigint), cast(ss_item_sk#27 as bigint), cast(ss_customer_sk#31 as bigint)], [sr_ticket_number#26, sr_item_sk#28, sr_customer_sk#32], Inner, BuildRight, false
               :     :     :     :- *(5) Filter ((((isnotnull(ss_item_sk#27) AND isnotnull(ss_customer_sk#31)) AND isnotnull(ss_ticket_number#25)) AND isnotnull(ss_store_sk#33)) AND isnotnull(ss_sold_date_sk#22))
               :     :     :     :  +- *(5) ColumnarToRow
               :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#22,ss_item_sk#27,ss_customer_sk#31,ss_store_sk#33,ss_ticket_number#25] Batched: true, DataFilters: [isnotnull(ss_item_sk#27), isnotnull(ss_customer_sk#31), isnotnull(ss_ticket_number#25), isnot..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int>
               :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[3, bigint, false], input[1, bigint, false], input[2, bigint, false]),false), [id=#134]
               :     :     :        +- *(1) Filter (((isnotnull(sr_ticket_number#26) AND isnotnull(sr_customer_sk#32)) AND isnotnull(sr_item_sk#28)) AND isnotnull(sr_returned_date_sk#21))
               :     :     :           +- *(1) ColumnarToRow
               :     :     :              +- FileScan parquet default.store_returns[sr_returned_date_sk#21,sr_item_sk#28,sr_customer_sk#32,sr_ticket_number#26] Batched: true, DataFilters: [isnotnull(sr_ticket_number#26), isnotnull(sr_customer_sk#32), isnotnull(sr_item_sk#28), isnotnu..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:bigint,sr_item_sk:bigint,sr_customer_sk:bigint,sr_ticket_number:bigint>
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#135]
               :     :        +- *(2) Filter isnotnull(s_store_sk#34)
               :     :           +- *(2) ColumnarToRow
               :     :              +- FileScan parquet default.store[s_store_sk#34,s_store_name#6,s_company_id#7,s_street_number#8,s_street_name#9,s_street_type#10,s_suite_number#11,s_city#12,s_county#13,s_state#14,s_zip#15] Batched: true, DataFilters: [isnotnull(s_store_sk#34)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#136]
               :        +- *(3) Filter isnotnull(d_date_sk#29)
               :           +- *(3) ColumnarToRow
               :              +- FileScan parquet default.date_dim[d_date_sk#29] Batched: true, DataFilters: [isnotnull(d_date_sk#29)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#137]
                  +- *(4) Project [d_date_sk#30]
                     +- *(4) Filter ((((isnotnull(d_year#23) AND isnotnull(d_moy#24)) AND (d_year#23 = 2001)) AND (d_moy#24 = 8)) AND isnotnull(d_date_sk#30))
                        +- *(4) ColumnarToRow
                           +- FileScan parquet default.date_dim[d_date_sk#30,d_year#23,d_moy#24] Batched: true, DataFilters: [isnotnull(d_year#23), isnotnull(d_moy#24), (d_year#23 = 2001), (d_moy#24 = 8), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,8), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

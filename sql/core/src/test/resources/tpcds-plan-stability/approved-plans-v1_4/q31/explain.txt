== Parsed Logical Plan ==
CTE [ss, ws]
:  :- 'SubqueryAlias ss
:  :  +- 'Aggregate ['ca_county, 'd_qoy, 'd_year], ['ca_county, 'd_qoy, 'd_year, 'sum('ss_ext_sales_price) AS store_sales#1]
:  :     +- 'Filter (('ss_sold_date_sk = 'd_date_sk) AND ('ss_addr_sk = 'ca_address_sk))
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'UnresolvedRelation [store_sales]
:  :           :  +- 'UnresolvedRelation [date_dim]
:  :           +- 'UnresolvedRelation [customer_address]
:  +- 'SubqueryAlias ws
:     +- 'Aggregate ['ca_county, 'd_qoy, 'd_year], ['ca_county, 'd_qoy, 'd_year, 'sum('ws_ext_sales_price) AS web_sales#2]
:        +- 'Filter (('ws_sold_date_sk = 'd_date_sk) AND ('ws_bill_addr_sk = 'ca_address_sk))
:           +- 'Join Inner
:              :- 'Join Inner
:              :  :- 'UnresolvedRelation [web_sales]
:              :  +- 'UnresolvedRelation [date_dim]
:              +- 'UnresolvedRelation [customer_address]
+- 'Sort ['ss1.ca_county ASC NULLS FIRST], true
   +- 'Project ['ss1.ca_county, 'ss1.d_year, ('ws2.web_sales / 'ws1.web_sales) AS web_q1_q2_increase#3, ('ss2.store_sales / 'ss1.store_sales) AS store_q1_q2_increase#4, ('ws3.web_sales / 'ws2.web_sales) AS web_q2_q3_increase#5, ('ss3.store_sales / 'ss2.store_sales) AS store_q2_q3_increase#6]
      +- 'Filter (((((('ss1.d_qoy = 1) AND ('ss1.d_year = 2000)) AND ('ss1.ca_county = 'ss2.ca_county)) AND (('ss2.d_qoy = 2) AND ('ss2.d_year = 2000))) AND (((('ss2.ca_county = 'ss3.ca_county) AND ('ss3.d_qoy = 3)) AND ('ss3.d_year = 2000)) AND (('ss1.ca_county = 'ws1.ca_county) AND ('ws1.d_qoy = 1)))) AND ((((('ws1.d_year = 2000) AND ('ws1.ca_county = 'ws2.ca_county)) AND ('ws2.d_qoy = 2)) AND (('ws2.d_year = 2000) AND ('ws1.ca_county = 'ws3.ca_county))) AND ((('ws3.d_qoy = 3) AND ('ws3.d_year = 2000)) AND ((CASE WHEN ('ws1.web_sales > 0) THEN ('ws2.web_sales / 'ws1.web_sales) ELSE null END > CASE WHEN ('ss1.store_sales > 0) THEN ('ss2.store_sales / 'ss1.store_sales) ELSE null END) AND (CASE WHEN ('ws2.web_sales > 0) THEN ('ws3.web_sales / 'ws2.web_sales) ELSE null END > CASE WHEN ('ss2.store_sales > 0) THEN ('ss3.store_sales / 'ss2.store_sales) ELSE null END)))))
         +- 'Join Inner
            :- 'Join Inner
            :  :- 'Join Inner
            :  :  :- 'Join Inner
            :  :  :  :- 'Join Inner
            :  :  :  :  :- 'SubqueryAlias ss1
            :  :  :  :  :  +- 'UnresolvedRelation [ss]
            :  :  :  :  +- 'SubqueryAlias ss2
            :  :  :  :     +- 'UnresolvedRelation [ss]
            :  :  :  +- 'SubqueryAlias ss3
            :  :  :     +- 'UnresolvedRelation [ss]
            :  :  +- 'SubqueryAlias ws1
            :  :     +- 'UnresolvedRelation [ws]
            :  +- 'SubqueryAlias ws2
            :     +- 'UnresolvedRelation [ws]
            +- 'SubqueryAlias ws3
               +- 'UnresolvedRelation [ws]

== Analyzed Logical Plan ==
ca_county: string, d_year: int, web_q1_q2_increase: decimal(37,20), store_q1_q2_increase: decimal(37,20), web_q2_q3_increase: decimal(37,20), store_q2_q3_increase: decimal(37,20)
Sort [ca_county#7 ASC NULLS FIRST], true
+- Project [ca_county#7, d_year#8, CheckOverflow((promote_precision(cast(web_sales#9 as decimal(17,2))) / promote_precision(cast(web_sales#2 as decimal(17,2)))), DecimalType(37,20), true) AS web_q1_q2_increase#3, CheckOverflow((promote_precision(cast(store_sales#10 as decimal(17,2))) / promote_precision(cast(store_sales#1 as decimal(17,2)))), DecimalType(37,20), true) AS store_q1_q2_increase#4, CheckOverflow((promote_precision(cast(web_sales#11 as decimal(17,2))) / promote_precision(cast(web_sales#9 as decimal(17,2)))), DecimalType(37,20), true) AS web_q2_q3_increase#5, CheckOverflow((promote_precision(cast(store_sales#12 as decimal(17,2))) / promote_precision(cast(store_sales#10 as decimal(17,2)))), DecimalType(37,20), true) AS store_q2_q3_increase#6]
   +- Filter ((((((d_qoy#13 = 1) AND (d_year#8 = 2000)) AND (ca_county#7 = ca_county#14)) AND ((d_qoy#15 = 2) AND (d_year#16 = 2000))) AND ((((ca_county#14 = ca_county#17) AND (d_qoy#18 = 3)) AND (d_year#19 = 2000)) AND ((ca_county#7 = ca_county#20) AND (d_qoy#21 = 1)))) AND (((((d_year#22 = 2000) AND (ca_county#20 = ca_county#23)) AND (d_qoy#24 = 2)) AND ((d_year#25 = 2000) AND (ca_county#20 = ca_county#26))) AND (((d_qoy#27 = 3) AND (d_year#28 = 2000)) AND ((CASE WHEN (cast(web_sales#2 as decimal(17,2)) > cast(cast(0 as decimal(1,0)) as decimal(17,2))) THEN CheckOverflow((promote_precision(cast(web_sales#9 as decimal(17,2))) / promote_precision(cast(web_sales#2 as decimal(17,2)))), DecimalType(37,20), true) ELSE cast(null as decimal(37,20)) END > CASE WHEN (cast(store_sales#1 as decimal(17,2)) > cast(cast(0 as decimal(1,0)) as decimal(17,2))) THEN CheckOverflow((promote_precision(cast(store_sales#10 as decimal(17,2))) / promote_precision(cast(store_sales#1 as decimal(17,2)))), DecimalType(37,20), true) ELSE cast(null as decimal(37,20)) END) AND (CASE WHEN (cast(web_sales#9 as decimal(17,2)) > cast(cast(0 as decimal(1,0)) as decimal(17,2))) THEN CheckOverflow((promote_precision(cast(web_sales#11 as decimal(17,2))) / promote_precision(cast(web_sales#9 as decimal(17,2)))), DecimalType(37,20), true) ELSE cast(null as decimal(37,20)) END > CASE WHEN (cast(store_sales#10 as decimal(17,2)) > cast(cast(0 as decimal(1,0)) as decimal(17,2))) THEN CheckOverflow((promote_precision(cast(store_sales#12 as decimal(17,2))) / promote_precision(cast(store_sales#10 as decimal(17,2)))), DecimalType(37,20), true) ELSE cast(null as decimal(37,20)) END)))))
      +- Join Inner
         :- Join Inner
         :  :- Join Inner
         :  :  :- Join Inner
         :  :  :  :- Join Inner
         :  :  :  :  :- SubqueryAlias ss1
         :  :  :  :  :  +- SubqueryAlias ss
         :  :  :  :  :     +- Aggregate [ca_county#7, d_qoy#13, d_year#8], [ca_county#7, d_qoy#13, d_year#8, sum(ss_ext_sales_price#29) AS store_sales#1]
         :  :  :  :  :        +- Filter ((ss_sold_date_sk#30 = d_date_sk#31) AND (ss_addr_sk#32 = ca_address_sk#33))
         :  :  :  :  :           +- Join Inner
         :  :  :  :  :              :- Join Inner
         :  :  :  :  :              :  :- SubqueryAlias spark_catalog.default.store_sales
         :  :  :  :  :              :  :  +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
         :  :  :  :  :              :  +- SubqueryAlias spark_catalog.default.date_dim
         :  :  :  :  :              :     +- Relation[d_date_sk#31,d_date_id#54,d_date#55,d_month_seq#56,d_week_seq#57,d_quarter_seq#58,d_year#8,d_dow#59,d_moy#60,d_dom#61,d_qoy#13,d_fy_year#62,d_fy_quarter_seq#63,d_fy_week_seq#64,d_day_name#65,d_quarter_name#66,d_holiday#67,d_weekend#68,d_following_holiday#69,d_first_dom#70,d_last_dom#71,d_same_day_ly#72,d_same_day_lq#73,d_current_day#74,... 4 more fields] parquet
         :  :  :  :  :              +- SubqueryAlias spark_catalog.default.customer_address
         :  :  :  :  :                 +- Relation[ca_address_sk#33,ca_address_id#75,ca_street_number#76,ca_street_name#77,ca_street_type#78,ca_suite_number#79,ca_city#80,ca_county#7,ca_state#81,ca_zip#82,ca_country#83,ca_gmt_offset#84,ca_location_type#85] parquet
         :  :  :  :  +- SubqueryAlias ss2
         :  :  :  :     +- SubqueryAlias ss
         :  :  :  :        +- Aggregate [ca_county#14, d_qoy#15, d_year#16], [ca_county#14, d_qoy#15, d_year#16, sum(ss_ext_sales_price#29) AS store_sales#10]
         :  :  :  :           +- Filter ((ss_sold_date_sk#30 = d_date_sk#86) AND (ss_addr_sk#32 = ca_address_sk#87))
         :  :  :  :              +- Join Inner
         :  :  :  :                 :- Join Inner
         :  :  :  :                 :  :- SubqueryAlias spark_catalog.default.store_sales
         :  :  :  :                 :  :  +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
         :  :  :  :                 :  +- SubqueryAlias spark_catalog.default.date_dim
         :  :  :  :                 :     +- Relation[d_date_sk#86,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#16,d_dow#93,d_moy#94,d_dom#95,d_qoy#15,d_fy_year#96,d_fy_quarter_seq#97,d_fy_week_seq#98,d_day_name#99,d_quarter_name#100,d_holiday#101,d_weekend#102,d_following_holiday#103,d_first_dom#104,d_last_dom#105,d_same_day_ly#106,d_same_day_lq#107,d_current_day#108,... 4 more fields] parquet
         :  :  :  :                 +- SubqueryAlias spark_catalog.default.customer_address
         :  :  :  :                    +- Relation[ca_address_sk#87,ca_address_id#109,ca_street_number#110,ca_street_name#111,ca_street_type#112,ca_suite_number#113,ca_city#114,ca_county#14,ca_state#115,ca_zip#116,ca_country#117,ca_gmt_offset#118,ca_location_type#119] parquet
         :  :  :  +- SubqueryAlias ss3
         :  :  :     +- SubqueryAlias ss
         :  :  :        +- Aggregate [ca_county#17, d_qoy#18, d_year#19], [ca_county#17, d_qoy#18, d_year#19, sum(ss_ext_sales_price#29) AS store_sales#12]
         :  :  :           +- Filter ((ss_sold_date_sk#30 = d_date_sk#120) AND (ss_addr_sk#32 = ca_address_sk#121))
         :  :  :              +- Join Inner
         :  :  :                 :- Join Inner
         :  :  :                 :  :- SubqueryAlias spark_catalog.default.store_sales
         :  :  :                 :  :  +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
         :  :  :                 :  +- SubqueryAlias spark_catalog.default.date_dim
         :  :  :                 :     +- Relation[d_date_sk#120,d_date_id#122,d_date#123,d_month_seq#124,d_week_seq#125,d_quarter_seq#126,d_year#19,d_dow#127,d_moy#128,d_dom#129,d_qoy#18,d_fy_year#130,d_fy_quarter_seq#131,d_fy_week_seq#132,d_day_name#133,d_quarter_name#134,d_holiday#135,d_weekend#136,d_following_holiday#137,d_first_dom#138,d_last_dom#139,d_same_day_ly#140,d_same_day_lq#141,d_current_day#142,... 4 more fields] parquet
         :  :  :                 +- SubqueryAlias spark_catalog.default.customer_address
         :  :  :                    +- Relation[ca_address_sk#121,ca_address_id#143,ca_street_number#144,ca_street_name#145,ca_street_type#146,ca_suite_number#147,ca_city#148,ca_county#17,ca_state#149,ca_zip#150,ca_country#151,ca_gmt_offset#152,ca_location_type#153] parquet
         :  :  +- SubqueryAlias ws1
         :  :     +- SubqueryAlias ws
         :  :        +- Aggregate [ca_county#20, d_qoy#21, d_year#22], [ca_county#20, d_qoy#21, d_year#22, sum(ws_ext_sales_price#154) AS web_sales#2]
         :  :           +- Filter ((ws_sold_date_sk#155 = d_date_sk#156) AND (ws_bill_addr_sk#157 = ca_address_sk#158))
         :  :              +- Join Inner
         :  :                 :- Join Inner
         :  :                 :  :- SubqueryAlias spark_catalog.default.web_sales
         :  :                 :  :  +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
         :  :                 :  +- SubqueryAlias spark_catalog.default.date_dim
         :  :                 :     +- Relation[d_date_sk#156,d_date_id#180,d_date#181,d_month_seq#182,d_week_seq#183,d_quarter_seq#184,d_year#22,d_dow#185,d_moy#186,d_dom#187,d_qoy#21,d_fy_year#188,d_fy_quarter_seq#189,d_fy_week_seq#190,d_day_name#191,d_quarter_name#192,d_holiday#193,d_weekend#194,d_following_holiday#195,d_first_dom#196,d_last_dom#197,d_same_day_ly#198,d_same_day_lq#199,d_current_day#200,... 4 more fields] parquet
         :  :                 +- SubqueryAlias spark_catalog.default.customer_address
         :  :                    +- Relation[ca_address_sk#158,ca_address_id#201,ca_street_number#202,ca_street_name#203,ca_street_type#204,ca_suite_number#205,ca_city#206,ca_county#20,ca_state#207,ca_zip#208,ca_country#209,ca_gmt_offset#210,ca_location_type#211] parquet
         :  +- SubqueryAlias ws2
         :     +- SubqueryAlias ws
         :        +- Aggregate [ca_county#23, d_qoy#24, d_year#25], [ca_county#23, d_qoy#24, d_year#25, sum(ws_ext_sales_price#154) AS web_sales#9]
         :           +- Filter ((ws_sold_date_sk#155 = d_date_sk#212) AND (ws_bill_addr_sk#157 = ca_address_sk#213))
         :              +- Join Inner
         :                 :- Join Inner
         :                 :  :- SubqueryAlias spark_catalog.default.web_sales
         :                 :  :  +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
         :                 :  +- SubqueryAlias spark_catalog.default.date_dim
         :                 :     +- Relation[d_date_sk#212,d_date_id#214,d_date#215,d_month_seq#216,d_week_seq#217,d_quarter_seq#218,d_year#25,d_dow#219,d_moy#220,d_dom#221,d_qoy#24,d_fy_year#222,d_fy_quarter_seq#223,d_fy_week_seq#224,d_day_name#225,d_quarter_name#226,d_holiday#227,d_weekend#228,d_following_holiday#229,d_first_dom#230,d_last_dom#231,d_same_day_ly#232,d_same_day_lq#233,d_current_day#234,... 4 more fields] parquet
         :                 +- SubqueryAlias spark_catalog.default.customer_address
         :                    +- Relation[ca_address_sk#213,ca_address_id#235,ca_street_number#236,ca_street_name#237,ca_street_type#238,ca_suite_number#239,ca_city#240,ca_county#23,ca_state#241,ca_zip#242,ca_country#243,ca_gmt_offset#244,ca_location_type#245] parquet
         +- SubqueryAlias ws3
            +- SubqueryAlias ws
               +- Aggregate [ca_county#26, d_qoy#27, d_year#28], [ca_county#26, d_qoy#27, d_year#28, sum(ws_ext_sales_price#154) AS web_sales#11]
                  +- Filter ((ws_sold_date_sk#155 = d_date_sk#246) AND (ws_bill_addr_sk#157 = ca_address_sk#247))
                     +- Join Inner
                        :- Join Inner
                        :  :- SubqueryAlias spark_catalog.default.web_sales
                        :  :  +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
                        :  +- SubqueryAlias spark_catalog.default.date_dim
                        :     +- Relation[d_date_sk#246,d_date_id#248,d_date#249,d_month_seq#250,d_week_seq#251,d_quarter_seq#252,d_year#28,d_dow#253,d_moy#254,d_dom#255,d_qoy#27,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet
                        +- SubqueryAlias spark_catalog.default.customer_address
                           +- Relation[ca_address_sk#247,ca_address_id#269,ca_street_number#270,ca_street_name#271,ca_street_type#272,ca_suite_number#273,ca_city#274,ca_county#26,ca_state#275,ca_zip#276,ca_country#277,ca_gmt_offset#278,ca_location_type#279] parquet

== Optimized Logical Plan ==
Sort [ca_county#7 ASC NULLS FIRST], true
+- Project [ca_county#7, d_year#8, CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#2)), DecimalType(37,20), true) AS web_q1_q2_increase#3, CheckOverflow((promote_precision(store_sales#10) / promote_precision(store_sales#1)), DecimalType(37,20), true) AS store_q1_q2_increase#4, CheckOverflow((promote_precision(web_sales#11) / promote_precision(web_sales#9)), DecimalType(37,20), true) AS web_q2_q3_increase#5, CheckOverflow((promote_precision(store_sales#12) / promote_precision(store_sales#10)), DecimalType(37,20), true) AS store_q2_q3_increase#6]
   +- Join Inner, ((ca_county#20 = ca_county#26) AND (CASE WHEN (web_sales#9 > 0.00) THEN CheckOverflow((promote_precision(web_sales#11) / promote_precision(web_sales#9)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#10 > 0.00) THEN CheckOverflow((promote_precision(store_sales#12) / promote_precision(store_sales#10)), DecimalType(37,20), true) ELSE null END))
      :- Project [ca_county#7, d_year#8, store_sales#1, store_sales#10, store_sales#12, ca_county#20, web_sales#2, web_sales#9]
      :  +- Join Inner, ((ca_county#20 = ca_county#23) AND (CASE WHEN (web_sales#2 > 0.00) THEN CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#2)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#1 > 0.00) THEN CheckOverflow((promote_precision(store_sales#10) / promote_precision(store_sales#1)), DecimalType(37,20), true) ELSE null END))
      :     :- Join Inner, (ca_county#7 = ca_county#20)
      :     :  :- Project [ca_county#7, d_year#8, store_sales#1, store_sales#10, store_sales#12]
      :     :  :  +- Join Inner, (ca_county#14 = ca_county#17)
      :     :  :     :- Join Inner, (ca_county#7 = ca_county#14)
      :     :  :     :  :- Aggregate [ca_county#7, d_qoy#13, d_year#8], [ca_county#7, d_year#8, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#29)),17,2) AS store_sales#1]
      :     :  :     :  :  +- Project [ss_ext_sales_price#29, d_year#8, d_qoy#13, ca_county#7]
      :     :  :     :  :     +- Join Inner, (ss_addr_sk#32 = ca_address_sk#33)
      :     :  :     :  :        :- Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#8, d_qoy#13]
      :     :  :     :  :        :  +- Join Inner, (ss_sold_date_sk#30 = d_date_sk#31)
      :     :  :     :  :        :     :- Project [ss_sold_date_sk#30, ss_addr_sk#32, ss_ext_sales_price#29]
      :     :  :     :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
      :     :  :     :  :        :     :     +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
      :     :  :     :  :        :     +- Project [d_date_sk#31, d_year#8, d_qoy#13]
      :     :  :     :  :        :        +- Filter ((((isnotnull(d_qoy#13) AND isnotnull(d_year#8)) AND (d_qoy#13 = 1)) AND (d_year#8 = 2000)) AND isnotnull(d_date_sk#31))
      :     :  :     :  :        :           +- Relation[d_date_sk#31,d_date_id#54,d_date#55,d_month_seq#56,d_week_seq#57,d_quarter_seq#58,d_year#8,d_dow#59,d_moy#60,d_dom#61,d_qoy#13,d_fy_year#62,d_fy_quarter_seq#63,d_fy_week_seq#64,d_day_name#65,d_quarter_name#66,d_holiday#67,d_weekend#68,d_following_holiday#69,d_first_dom#70,d_last_dom#71,d_same_day_ly#72,d_same_day_lq#73,d_current_day#74,... 4 more fields] parquet
      :     :  :     :  :        +- Project [ca_address_sk#33, ca_county#7]
      :     :  :     :  :           +- Filter (isnotnull(ca_address_sk#33) AND isnotnull(ca_county#7))
      :     :  :     :  :              +- Relation[ca_address_sk#33,ca_address_id#75,ca_street_number#76,ca_street_name#77,ca_street_type#78,ca_suite_number#79,ca_city#80,ca_county#7,ca_state#81,ca_zip#82,ca_country#83,ca_gmt_offset#84,ca_location_type#85] parquet
      :     :  :     :  +- Aggregate [ca_county#14, d_qoy#15, d_year#16], [ca_county#14, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#29)),17,2) AS store_sales#10]
      :     :  :     :     +- Project [ss_ext_sales_price#29, d_year#16, d_qoy#15, ca_county#14]
      :     :  :     :        +- Join Inner, (ss_addr_sk#32 = ca_address_sk#87)
      :     :  :     :           :- Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#16, d_qoy#15]
      :     :  :     :           :  +- Join Inner, (ss_sold_date_sk#30 = d_date_sk#86)
      :     :  :     :           :     :- Project [ss_sold_date_sk#30, ss_addr_sk#32, ss_ext_sales_price#29]
      :     :  :     :           :     :  +- Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
      :     :  :     :           :     :     +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
      :     :  :     :           :     +- Project [d_date_sk#86, d_year#16, d_qoy#15]
      :     :  :     :           :        +- Filter ((((isnotnull(d_qoy#15) AND isnotnull(d_year#16)) AND (d_qoy#15 = 2)) AND (d_year#16 = 2000)) AND isnotnull(d_date_sk#86))
      :     :  :     :           :           +- Relation[d_date_sk#86,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#16,d_dow#93,d_moy#94,d_dom#95,d_qoy#15,d_fy_year#96,d_fy_quarter_seq#97,d_fy_week_seq#98,d_day_name#99,d_quarter_name#100,d_holiday#101,d_weekend#102,d_following_holiday#103,d_first_dom#104,d_last_dom#105,d_same_day_ly#106,d_same_day_lq#107,d_current_day#108,... 4 more fields] parquet
      :     :  :     :           +- Project [ca_address_sk#87, ca_county#14]
      :     :  :     :              +- Filter (isnotnull(ca_address_sk#87) AND isnotnull(ca_county#14))
      :     :  :     :                 +- Relation[ca_address_sk#87,ca_address_id#109,ca_street_number#110,ca_street_name#111,ca_street_type#112,ca_suite_number#113,ca_city#114,ca_county#14,ca_state#115,ca_zip#116,ca_country#117,ca_gmt_offset#118,ca_location_type#119] parquet
      :     :  :     +- Aggregate [ca_county#17, d_qoy#18, d_year#19], [ca_county#17, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#29)),17,2) AS store_sales#12]
      :     :  :        +- Project [ss_ext_sales_price#29, d_year#19, d_qoy#18, ca_county#17]
      :     :  :           +- Join Inner, (ss_addr_sk#32 = ca_address_sk#121)
      :     :  :              :- Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#19, d_qoy#18]
      :     :  :              :  +- Join Inner, (ss_sold_date_sk#30 = d_date_sk#120)
      :     :  :              :     :- Project [ss_sold_date_sk#30, ss_addr_sk#32, ss_ext_sales_price#29]
      :     :  :              :     :  +- Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
      :     :  :              :     :     +- Relation[ss_sold_date_sk#30,ss_sold_time_sk#34,ss_item_sk#35,ss_customer_sk#36,ss_cdemo_sk#37,ss_hdemo_sk#38,ss_addr_sk#32,ss_store_sk#39,ss_promo_sk#40,ss_ticket_number#41,ss_quantity#42,ss_wholesale_cost#43,ss_list_price#44,ss_sales_price#45,ss_ext_discount_amt#46,ss_ext_sales_price#29,ss_ext_wholesale_cost#47,ss_ext_list_price#48,ss_ext_tax#49,ss_coupon_amt#50,ss_net_paid#51,ss_net_paid_inc_tax#52,ss_net_profit#53] parquet
      :     :  :              :     +- Project [d_date_sk#120, d_year#19, d_qoy#18]
      :     :  :              :        +- Filter ((((isnotnull(d_qoy#18) AND isnotnull(d_year#19)) AND (d_qoy#18 = 3)) AND (d_year#19 = 2000)) AND isnotnull(d_date_sk#120))
      :     :  :              :           +- Relation[d_date_sk#120,d_date_id#122,d_date#123,d_month_seq#124,d_week_seq#125,d_quarter_seq#126,d_year#19,d_dow#127,d_moy#128,d_dom#129,d_qoy#18,d_fy_year#130,d_fy_quarter_seq#131,d_fy_week_seq#132,d_day_name#133,d_quarter_name#134,d_holiday#135,d_weekend#136,d_following_holiday#137,d_first_dom#138,d_last_dom#139,d_same_day_ly#140,d_same_day_lq#141,d_current_day#142,... 4 more fields] parquet
      :     :  :              +- Project [ca_address_sk#121, ca_county#17]
      :     :  :                 +- Filter (isnotnull(ca_address_sk#121) AND isnotnull(ca_county#17))
      :     :  :                    +- Relation[ca_address_sk#121,ca_address_id#143,ca_street_number#144,ca_street_name#145,ca_street_type#146,ca_suite_number#147,ca_city#148,ca_county#17,ca_state#149,ca_zip#150,ca_country#151,ca_gmt_offset#152,ca_location_type#153] parquet
      :     :  +- Aggregate [ca_county#20, d_qoy#21, d_year#22], [ca_county#20, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#154)),17,2) AS web_sales#2]
      :     :     +- Project [ws_ext_sales_price#154, d_year#22, d_qoy#21, ca_county#20]
      :     :        +- Join Inner, (ws_bill_addr_sk#157 = ca_address_sk#158)
      :     :           :- Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#22, d_qoy#21]
      :     :           :  +- Join Inner, (ws_sold_date_sk#155 = d_date_sk#156)
      :     :           :     :- Project [ws_sold_date_sk#155, ws_bill_addr_sk#157, ws_ext_sales_price#154]
      :     :           :     :  +- Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
      :     :           :     :     +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
      :     :           :     +- Project [d_date_sk#156, d_year#22, d_qoy#21]
      :     :           :        +- Filter ((((isnotnull(d_qoy#21) AND isnotnull(d_year#22)) AND (d_qoy#21 = 1)) AND (d_year#22 = 2000)) AND isnotnull(d_date_sk#156))
      :     :           :           +- Relation[d_date_sk#156,d_date_id#180,d_date#181,d_month_seq#182,d_week_seq#183,d_quarter_seq#184,d_year#22,d_dow#185,d_moy#186,d_dom#187,d_qoy#21,d_fy_year#188,d_fy_quarter_seq#189,d_fy_week_seq#190,d_day_name#191,d_quarter_name#192,d_holiday#193,d_weekend#194,d_following_holiday#195,d_first_dom#196,d_last_dom#197,d_same_day_ly#198,d_same_day_lq#199,d_current_day#200,... 4 more fields] parquet
      :     :           +- Project [ca_address_sk#158, ca_county#20]
      :     :              +- Filter (isnotnull(ca_address_sk#158) AND isnotnull(ca_county#20))
      :     :                 +- Relation[ca_address_sk#158,ca_address_id#201,ca_street_number#202,ca_street_name#203,ca_street_type#204,ca_suite_number#205,ca_city#206,ca_county#20,ca_state#207,ca_zip#208,ca_country#209,ca_gmt_offset#210,ca_location_type#211] parquet
      :     +- Aggregate [ca_county#23, d_qoy#24, d_year#25], [ca_county#23, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#154)),17,2) AS web_sales#9]
      :        +- Project [ws_ext_sales_price#154, d_year#25, d_qoy#24, ca_county#23]
      :           +- Join Inner, (ws_bill_addr_sk#157 = ca_address_sk#213)
      :              :- Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#25, d_qoy#24]
      :              :  +- Join Inner, (ws_sold_date_sk#155 = d_date_sk#212)
      :              :     :- Project [ws_sold_date_sk#155, ws_bill_addr_sk#157, ws_ext_sales_price#154]
      :              :     :  +- Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
      :              :     :     +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
      :              :     +- Project [d_date_sk#212, d_year#25, d_qoy#24]
      :              :        +- Filter ((((isnotnull(d_qoy#24) AND isnotnull(d_year#25)) AND (d_qoy#24 = 2)) AND (d_year#25 = 2000)) AND isnotnull(d_date_sk#212))
      :              :           +- Relation[d_date_sk#212,d_date_id#214,d_date#215,d_month_seq#216,d_week_seq#217,d_quarter_seq#218,d_year#25,d_dow#219,d_moy#220,d_dom#221,d_qoy#24,d_fy_year#222,d_fy_quarter_seq#223,d_fy_week_seq#224,d_day_name#225,d_quarter_name#226,d_holiday#227,d_weekend#228,d_following_holiday#229,d_first_dom#230,d_last_dom#231,d_same_day_ly#232,d_same_day_lq#233,d_current_day#234,... 4 more fields] parquet
      :              +- Project [ca_address_sk#213, ca_county#23]
      :                 +- Filter (isnotnull(ca_address_sk#213) AND isnotnull(ca_county#23))
      :                    +- Relation[ca_address_sk#213,ca_address_id#235,ca_street_number#236,ca_street_name#237,ca_street_type#238,ca_suite_number#239,ca_city#240,ca_county#23,ca_state#241,ca_zip#242,ca_country#243,ca_gmt_offset#244,ca_location_type#245] parquet
      +- Aggregate [ca_county#26, d_qoy#27, d_year#28], [ca_county#26, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#154)),17,2) AS web_sales#11]
         +- Project [ws_ext_sales_price#154, d_year#28, d_qoy#27, ca_county#26]
            +- Join Inner, (ws_bill_addr_sk#157 = ca_address_sk#247)
               :- Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#28, d_qoy#27]
               :  +- Join Inner, (ws_sold_date_sk#155 = d_date_sk#246)
               :     :- Project [ws_sold_date_sk#155, ws_bill_addr_sk#157, ws_ext_sales_price#154]
               :     :  +- Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
               :     :     +- Relation[ws_sold_date_sk#155,ws_sold_time_sk#159,ws_ship_date_sk#160,ws_item_sk#161,ws_bill_customer_sk#162,ws_bill_cdemo_sk#163,ws_bill_hdemo_sk#164,ws_bill_addr_sk#157,ws_ship_customer_sk#165,ws_ship_cdemo_sk#166,ws_ship_hdemo_sk#167,ws_ship_addr_sk#168,ws_web_page_sk#169,ws_web_site_sk#170,ws_ship_mode_sk#171,ws_warehouse_sk#172,ws_promo_sk#173,ws_order_number#174,ws_quantity#175,ws_wholesale_cost#176,ws_list_price#177,ws_sales_price#178,ws_ext_discount_amt#179,ws_ext_sales_price#154,... 10 more fields] parquet
               :     +- Project [d_date_sk#246, d_year#28, d_qoy#27]
               :        +- Filter ((((isnotnull(d_qoy#27) AND isnotnull(d_year#28)) AND (d_qoy#27 = 3)) AND (d_year#28 = 2000)) AND isnotnull(d_date_sk#246))
               :           +- Relation[d_date_sk#246,d_date_id#248,d_date#249,d_month_seq#250,d_week_seq#251,d_quarter_seq#252,d_year#28,d_dow#253,d_moy#254,d_dom#255,d_qoy#27,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet
               +- Project [ca_address_sk#247, ca_county#26]
                  +- Filter (isnotnull(ca_address_sk#247) AND isnotnull(ca_county#26))
                     +- Relation[ca_address_sk#247,ca_address_id#269,ca_street_number#270,ca_street_name#271,ca_street_type#272,ca_suite_number#273,ca_city#274,ca_county#26,ca_state#275,ca_zip#276,ca_country#277,ca_gmt_offset#278,ca_location_type#279] parquet

== Physical Plan ==
*(25) Sort [ca_county#7 ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(ca_county#7 ASC NULLS FIRST, 5), true, [id=#280]
   +- *(24) Project [ca_county#7, d_year#8, CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#2)), DecimalType(37,20), true) AS web_q1_q2_increase#3, CheckOverflow((promote_precision(store_sales#10) / promote_precision(store_sales#1)), DecimalType(37,20), true) AS store_q1_q2_increase#4, CheckOverflow((promote_precision(web_sales#11) / promote_precision(web_sales#9)), DecimalType(37,20), true) AS web_q2_q3_increase#5, CheckOverflow((promote_precision(store_sales#12) / promote_precision(store_sales#10)), DecimalType(37,20), true) AS store_q2_q3_increase#6]
      +- *(24) BroadcastHashJoin [ca_county#20], [ca_county#26], Inner, BuildRight, (CASE WHEN (web_sales#9 > 0.00) THEN CheckOverflow((promote_precision(web_sales#11) / promote_precision(web_sales#9)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#10 > 0.00) THEN CheckOverflow((promote_precision(store_sales#12) / promote_precision(store_sales#10)), DecimalType(37,20), true) ELSE null END), false
         :- *(24) Project [ca_county#7, d_year#8, store_sales#1, store_sales#10, store_sales#12, ca_county#20, web_sales#2, web_sales#9]
         :  +- *(24) BroadcastHashJoin [ca_county#20], [ca_county#23], Inner, BuildRight, (CASE WHEN (web_sales#2 > 0.00) THEN CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#2)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#1 > 0.00) THEN CheckOverflow((promote_precision(store_sales#10) / promote_precision(store_sales#1)), DecimalType(37,20), true) ELSE null END), false
         :     :- *(24) BroadcastHashJoin [ca_county#7], [ca_county#20], Inner, BuildRight, false
         :     :  :- *(24) Project [ca_county#7, d_year#8, store_sales#1, store_sales#10, store_sales#12]
         :     :  :  +- *(24) BroadcastHashJoin [ca_county#14], [ca_county#17], Inner, BuildRight, false
         :     :  :     :- *(24) BroadcastHashJoin [ca_county#7], [ca_county#14], Inner, BuildRight, false
         :     :  :     :  :- *(24) HashAggregate(keys=[ca_county#7, d_qoy#13, d_year#8], functions=[sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#7, d_year#8, store_sales#1])
         :     :  :     :  :  +- Exchange hashpartitioning(ca_county#7, d_qoy#13, d_year#8, 5), true, [id=#281]
         :     :  :     :  :     +- *(3) HashAggregate(keys=[ca_county#7, d_qoy#13, d_year#8], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#7, d_qoy#13, d_year#8, sum#282])
         :     :  :     :  :        +- *(3) Project [ss_ext_sales_price#29, d_year#8, d_qoy#13, ca_county#7]
         :     :  :     :  :           +- *(3) BroadcastHashJoin [ss_addr_sk#32], [ca_address_sk#33], Inner, BuildRight, false
         :     :  :     :  :              :- *(3) Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#8, d_qoy#13]
         :     :  :     :  :              :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#30], [d_date_sk#31], Inner, BuildRight, false
         :     :  :     :  :              :     :- *(3) Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
         :     :  :     :  :              :     :  +- *(3) ColumnarToRow
         :     :  :     :  :              :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#30,ss_addr_sk#32,ss_ext_sales_price#29] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#30), isnotnull(ss_addr_sk#32)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :     :  :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#283]
         :     :  :     :  :              :        +- *(1) Filter ((((isnotnull(d_qoy#13) AND isnotnull(d_year#8)) AND (d_qoy#13 = 1)) AND (d_year#8 = 2000)) AND isnotnull(d_date_sk#31))
         :     :  :     :  :              :           +- *(1) ColumnarToRow
         :     :  :     :  :              :              +- FileScan parquet default.date_dim[d_date_sk#31,d_year#8,d_qoy#13] Batched: true, DataFilters: [isnotnull(d_qoy#13), isnotnull(d_year#8), (d_qoy#13 = 1), (d_year#8 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]
         :     :  :     :  :                 +- *(2) Filter (isnotnull(ca_address_sk#33) AND isnotnull(ca_county#7))
         :     :  :     :  :                    +- *(2) ColumnarToRow
         :     :  :     :  :                       +- FileScan parquet default.customer_address[ca_address_sk#33,ca_county#7] Batched: true, DataFilters: [isnotnull(ca_address_sk#33), isnotnull(ca_county#7)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>
         :     :  :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#285]
         :     :  :     :     +- *(7) HashAggregate(keys=[ca_county#14, d_qoy#15, d_year#16], functions=[sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#14, store_sales#10])
         :     :  :     :        +- Exchange hashpartitioning(ca_county#14, d_qoy#15, d_year#16, 5), true, [id=#286]
         :     :  :     :           +- *(6) HashAggregate(keys=[ca_county#14, d_qoy#15, d_year#16], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#14, d_qoy#15, d_year#16, sum#287])
         :     :  :     :              +- *(6) Project [ss_ext_sales_price#29, d_year#16, d_qoy#15, ca_county#14]
         :     :  :     :                 +- *(6) BroadcastHashJoin [ss_addr_sk#32], [ca_address_sk#87], Inner, BuildRight, false
         :     :  :     :                    :- *(6) Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#16, d_qoy#15]
         :     :  :     :                    :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#30], [d_date_sk#86], Inner, BuildRight, false
         :     :  :     :                    :     :- *(6) Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
         :     :  :     :                    :     :  +- *(6) ColumnarToRow
         :     :  :     :                    :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#30,ss_addr_sk#32,ss_ext_sales_price#29] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#30), isnotnull(ss_addr_sk#32)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#288]
         :     :  :     :                    :        +- *(4) Filter ((((isnotnull(d_qoy#15) AND isnotnull(d_year#16)) AND (d_qoy#15 = 2)) AND (d_year#16 = 2000)) AND isnotnull(d_date_sk#86))
         :     :  :     :                    :           +- *(4) ColumnarToRow
         :     :  :     :                    :              +- FileScan parquet default.date_dim[d_date_sk#86,d_year#16,d_qoy#15] Batched: true, DataFilters: [isnotnull(d_qoy#15), isnotnull(d_year#16), (d_qoy#15 = 2), (d_year#16 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :     :                    +- ReusedExchange [ca_address_sk#87, ca_county#14], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]
         :     :  :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#289]
         :     :  :        +- *(11) HashAggregate(keys=[ca_county#17, d_qoy#18, d_year#19], functions=[sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#17, store_sales#12])
         :     :  :           +- Exchange hashpartitioning(ca_county#17, d_qoy#18, d_year#19, 5), true, [id=#290]
         :     :  :              +- *(10) HashAggregate(keys=[ca_county#17, d_qoy#18, d_year#19], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#29))], output=[ca_county#17, d_qoy#18, d_year#19, sum#291])
         :     :  :                 +- *(10) Project [ss_ext_sales_price#29, d_year#19, d_qoy#18, ca_county#17]
         :     :  :                    +- *(10) BroadcastHashJoin [ss_addr_sk#32], [ca_address_sk#121], Inner, BuildRight, false
         :     :  :                       :- *(10) Project [ss_addr_sk#32, ss_ext_sales_price#29, d_year#19, d_qoy#18]
         :     :  :                       :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#30], [d_date_sk#120], Inner, BuildRight, false
         :     :  :                       :     :- *(10) Filter (isnotnull(ss_sold_date_sk#30) AND isnotnull(ss_addr_sk#32))
         :     :  :                       :     :  +- *(10) ColumnarToRow
         :     :  :                       :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#30,ss_addr_sk#32,ss_ext_sales_price#29] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#30), isnotnull(ss_addr_sk#32)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#292]
         :     :  :                       :        +- *(8) Filter ((((isnotnull(d_qoy#18) AND isnotnull(d_year#19)) AND (d_qoy#18 = 3)) AND (d_year#19 = 2000)) AND isnotnull(d_date_sk#120))
         :     :  :                       :           +- *(8) ColumnarToRow
         :     :  :                       :              +- FileScan parquet default.date_dim[d_date_sk#120,d_year#19,d_qoy#18] Batched: true, DataFilters: [isnotnull(d_qoy#18), isnotnull(d_year#19), (d_qoy#18 = 3), (d_year#19 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :                       +- ReusedExchange [ca_address_sk#121, ca_county#17], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]
         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#293]
         :     :     +- *(15) HashAggregate(keys=[ca_county#20, d_qoy#21, d_year#22], functions=[sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#20, web_sales#2])
         :     :        +- Exchange hashpartitioning(ca_county#20, d_qoy#21, d_year#22, 5), true, [id=#294]
         :     :           +- *(14) HashAggregate(keys=[ca_county#20, d_qoy#21, d_year#22], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#20, d_qoy#21, d_year#22, sum#295])
         :     :              +- *(14) Project [ws_ext_sales_price#154, d_year#22, d_qoy#21, ca_county#20]
         :     :                 +- *(14) BroadcastHashJoin [ws_bill_addr_sk#157], [ca_address_sk#158], Inner, BuildRight, false
         :     :                    :- *(14) Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#22, d_qoy#21]
         :     :                    :  +- *(14) BroadcastHashJoin [ws_sold_date_sk#155], [d_date_sk#156], Inner, BuildRight, false
         :     :                    :     :- *(14) Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
         :     :                    :     :  +- *(14) ColumnarToRow
         :     :                    :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#155,ws_bill_addr_sk#157,ws_ext_sales_price#154] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#155), isnotnull(ws_bill_addr_sk#157)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
         :     :                    :     +- ReusedExchange [d_date_sk#156, d_year#22, d_qoy#21], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#283]
         :     :                    +- ReusedExchange [ca_address_sk#158, ca_county#20], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]
         :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#296]
         :        +- *(19) HashAggregate(keys=[ca_county#23, d_qoy#24, d_year#25], functions=[sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#23, web_sales#9])
         :           +- Exchange hashpartitioning(ca_county#23, d_qoy#24, d_year#25, 5), true, [id=#297]
         :              +- *(18) HashAggregate(keys=[ca_county#23, d_qoy#24, d_year#25], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#23, d_qoy#24, d_year#25, sum#298])
         :                 +- *(18) Project [ws_ext_sales_price#154, d_year#25, d_qoy#24, ca_county#23]
         :                    +- *(18) BroadcastHashJoin [ws_bill_addr_sk#157], [ca_address_sk#213], Inner, BuildRight, false
         :                       :- *(18) Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#25, d_qoy#24]
         :                       :  +- *(18) BroadcastHashJoin [ws_sold_date_sk#155], [d_date_sk#212], Inner, BuildRight, false
         :                       :     :- *(18) Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
         :                       :     :  +- *(18) ColumnarToRow
         :                       :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#155,ws_bill_addr_sk#157,ws_ext_sales_price#154] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#155), isnotnull(ws_bill_addr_sk#157)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
         :                       :     +- ReusedExchange [d_date_sk#212, d_year#25, d_qoy#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#288]
         :                       +- ReusedExchange [ca_address_sk#213, ca_county#23], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]
         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#299]
            +- *(23) HashAggregate(keys=[ca_county#26, d_qoy#27, d_year#28], functions=[sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#26, web_sales#11])
               +- Exchange hashpartitioning(ca_county#26, d_qoy#27, d_year#28, 5), true, [id=#300]
                  +- *(22) HashAggregate(keys=[ca_county#26, d_qoy#27, d_year#28], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#154))], output=[ca_county#26, d_qoy#27, d_year#28, sum#301])
                     +- *(22) Project [ws_ext_sales_price#154, d_year#28, d_qoy#27, ca_county#26]
                        +- *(22) BroadcastHashJoin [ws_bill_addr_sk#157], [ca_address_sk#247], Inner, BuildRight, false
                           :- *(22) Project [ws_bill_addr_sk#157, ws_ext_sales_price#154, d_year#28, d_qoy#27]
                           :  +- *(22) BroadcastHashJoin [ws_sold_date_sk#155], [d_date_sk#246], Inner, BuildRight, false
                           :     :- *(22) Filter (isnotnull(ws_sold_date_sk#155) AND isnotnull(ws_bill_addr_sk#157))
                           :     :  +- *(22) ColumnarToRow
                           :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#155,ws_bill_addr_sk#157,ws_ext_sales_price#154] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#155), isnotnull(ws_bill_addr_sk#157)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                           :     +- ReusedExchange [d_date_sk#246, d_year#28, d_qoy#27], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#292]
                           +- ReusedExchange [ca_address_sk#247, ca_county#26], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#284]

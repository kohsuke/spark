== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['ext_price DESC NULLS LAST, 'brand ASC NULLS FIRST, 'brand_id ASC NULLS FIRST, 'i_manufact_id ASC NULLS FIRST, 'i_manufact ASC NULLS FIRST], true
      +- 'Aggregate ['i_brand, 'i_brand_id, 'i_manufact_id, 'i_manufact], ['i_brand_id AS brand_id#1, 'i_brand AS brand#2, 'i_manufact_id, 'i_manufact, 'sum('ss_ext_sales_price) AS ext_price#3]
         +- 'Filter ((((('d_date_sk = 'ss_sold_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND ('i_manager_id = 8)) AND (('d_moy = 11) AND ('d_year = 1998))) AND ((('ss_customer_sk = 'c_customer_sk) AND ('c_current_addr_sk = 'ca_address_sk)) AND (NOT ('substr('ca_zip, 1, 5) = 'substr('s_zip, 1, 5)) AND ('ss_store_sk = 's_store_sk))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join Inner
               :  :  :  :- 'Join Inner
               :  :  :  :  :- 'UnresolvedRelation [date_dim]
               :  :  :  :  +- 'UnresolvedRelation [store_sales]
               :  :  :  +- 'UnresolvedRelation [item]
               :  :  +- 'UnresolvedRelation [customer]
               :  +- 'UnresolvedRelation [customer_address]
               +- 'UnresolvedRelation [store]

== Analyzed Logical Plan ==
brand_id: int, brand: string, i_manufact_id: int, i_manufact: string, ext_price: decimal(17,2)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ext_price#3 DESC NULLS LAST, brand#2 ASC NULLS FIRST, brand_id#1 ASC NULLS FIRST, i_manufact_id#4 ASC NULLS FIRST, i_manufact#5 ASC NULLS FIRST], true
      +- Aggregate [i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5], [i_brand_id#7 AS brand_id#1, i_brand#6 AS brand#2, i_manufact_id#4, i_manufact#5, sum(ss_ext_sales_price#8) AS ext_price#3]
         +- Filter (((((d_date_sk#9 = ss_sold_date_sk#10) AND (ss_item_sk#11 = i_item_sk#12)) AND (i_manager_id#13 = 8)) AND ((d_moy#14 = 11) AND (d_year#15 = 1998))) AND (((ss_customer_sk#16 = c_customer_sk#17) AND (c_current_addr_sk#18 = ca_address_sk#19)) AND (NOT (substr(ca_zip#20, 1, 5) = substr(s_zip#21, 1, 5)) AND (ss_store_sk#22 = s_store_sk#23))))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- Join Inner
               :  :  :  :- Join Inner
               :  :  :  :  :- SubqueryAlias spark_catalog.default.date_dim
               :  :  :  :  :  +- Relation[d_date_sk#9,d_date_id#24,d_date#25,d_month_seq#26,d_week_seq#27,d_quarter_seq#28,d_year#15,d_dow#29,d_moy#14,d_dom#30,d_qoy#31,d_fy_year#32,d_fy_quarter_seq#33,d_fy_week_seq#34,d_day_name#35,d_quarter_name#36,d_holiday#37,d_weekend#38,d_following_holiday#39,d_first_dom#40,d_last_dom#41,d_same_day_ly#42,d_same_day_lq#43,d_current_day#44,d_current_week#45,d_current_month#46,d_current_quarter#47,d_current_year#48] parquet
               :  :  :  :  +- SubqueryAlias spark_catalog.default.store_sales
               :  :  :  :     +- Relation[ss_sold_date_sk#10,ss_sold_time_sk#49,ss_item_sk#11,ss_customer_sk#16,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#22,ss_promo_sk#53,ss_ticket_number#54,ss_quantity#55,ss_wholesale_cost#56,ss_list_price#57,ss_sales_price#58,ss_ext_discount_amt#59,ss_ext_sales_price#8,ss_ext_wholesale_cost#60,ss_ext_list_price#61,ss_ext_tax#62,ss_coupon_amt#63,ss_net_paid#64,ss_net_paid_inc_tax#65,ss_net_profit#66] parquet
               :  :  :  +- SubqueryAlias spark_catalog.default.item
               :  :  :     +- Relation[i_item_sk#12,i_item_id#67,i_rec_start_date#68,i_rec_end_date#69,i_item_desc#70,i_current_price#71,i_wholesale_cost#72,i_brand_id#7,i_brand#6,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#4,i_manufact#5,i_size#77,i_formulation#78,i_color#79,i_units#80,i_container#81,i_manager_id#13,i_product_name#82] parquet
               :  :  +- SubqueryAlias spark_catalog.default.customer
               :  :     +- Relation[c_customer_sk#17,c_customer_id#83,c_current_cdemo_sk#84,c_current_hdemo_sk#85,c_current_addr_sk#18,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :  +- SubqueryAlias spark_catalog.default.customer_address
               :     +- Relation[ca_address_sk#19,ca_address_id#99,ca_street_number#100,ca_street_name#101,ca_street_type#102,ca_suite_number#103,ca_city#104,ca_county#105,ca_state#106,ca_zip#20,ca_country#107,ca_gmt_offset#108,ca_location_type#109] parquet
               +- SubqueryAlias spark_catalog.default.store
                  +- Relation[s_store_sk#23,s_store_id#110,s_rec_start_date#111,s_rec_end_date#112,s_closed_date_sk#113,s_store_name#114,s_number_employees#115,s_floor_space#116,s_hours#117,s_manager#118,s_market_id#119,s_geography_class#120,s_market_desc#121,s_market_manager#122,s_division_id#123,s_division_name#124,s_company_id#125,s_company_name#126,s_street_number#127,s_street_name#128,s_street_type#129,s_suite_number#130,s_city#131,s_county#132,s_state#133,s_zip#21,s_country#134,s_gmt_offset#135,s_tax_percentage#136] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ext_price#3 DESC NULLS LAST, brand#2 ASC NULLS FIRST, brand_id#1 ASC NULLS FIRST, i_manufact_id#4 ASC NULLS FIRST, i_manufact#5 ASC NULLS FIRST], true
      +- Aggregate [i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5], [i_brand_id#7 AS brand_id#1, i_brand#6 AS brand#2, i_manufact_id#4, i_manufact#5, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#8)),17,2) AS ext_price#3]
         +- Project [ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
            +- Join Inner, (NOT (substr(ca_zip#20, 1, 5) = substr(s_zip#21, 1, 5)) AND (ss_store_sk#22 = s_store_sk#23))
               :- Project [ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5, ca_zip#20]
               :  +- Join Inner, (c_current_addr_sk#18 = ca_address_sk#19)
               :     :- Project [ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5, c_current_addr_sk#18]
               :     :  +- Join Inner, (ss_customer_sk#16 = c_customer_sk#17)
               :     :     :- Project [ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
               :     :     :  +- Join Inner, (ss_item_sk#11 = i_item_sk#12)
               :     :     :     :- Project [ss_item_sk#11, ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8]
               :     :     :     :  +- Join Inner, (d_date_sk#9 = ss_sold_date_sk#10)
               :     :     :     :     :- Project [d_date_sk#9]
               :     :     :     :     :  +- Filter ((((isnotnull(d_moy#14) AND isnotnull(d_year#15)) AND (d_moy#14 = 11)) AND (d_year#15 = 1998)) AND isnotnull(d_date_sk#9))
               :     :     :     :     :     +- Relation[d_date_sk#9,d_date_id#24,d_date#25,d_month_seq#26,d_week_seq#27,d_quarter_seq#28,d_year#15,d_dow#29,d_moy#14,d_dom#30,d_qoy#31,d_fy_year#32,d_fy_quarter_seq#33,d_fy_week_seq#34,d_day_name#35,d_quarter_name#36,d_holiday#37,d_weekend#38,d_following_holiday#39,d_first_dom#40,d_last_dom#41,d_same_day_ly#42,d_same_day_lq#43,d_current_day#44,d_current_week#45,d_current_month#46,d_current_quarter#47,d_current_year#48] parquet
               :     :     :     :     +- Project [ss_sold_date_sk#10, ss_item_sk#11, ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8]
               :     :     :     :        +- Filter (((isnotnull(ss_sold_date_sk#10) AND isnotnull(ss_item_sk#11)) AND isnotnull(ss_customer_sk#16)) AND isnotnull(ss_store_sk#22))
               :     :     :     :           +- Relation[ss_sold_date_sk#10,ss_sold_time_sk#49,ss_item_sk#11,ss_customer_sk#16,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#22,ss_promo_sk#53,ss_ticket_number#54,ss_quantity#55,ss_wholesale_cost#56,ss_list_price#57,ss_sales_price#58,ss_ext_discount_amt#59,ss_ext_sales_price#8,ss_ext_wholesale_cost#60,ss_ext_list_price#61,ss_ext_tax#62,ss_coupon_amt#63,ss_net_paid#64,ss_net_paid_inc_tax#65,ss_net_profit#66] parquet
               :     :     :     +- Project [i_item_sk#12, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
               :     :     :        +- Filter ((isnotnull(i_manager_id#13) AND (i_manager_id#13 = 8)) AND isnotnull(i_item_sk#12))
               :     :     :           +- Relation[i_item_sk#12,i_item_id#67,i_rec_start_date#68,i_rec_end_date#69,i_item_desc#70,i_current_price#71,i_wholesale_cost#72,i_brand_id#7,i_brand#6,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#4,i_manufact#5,i_size#77,i_formulation#78,i_color#79,i_units#80,i_container#81,i_manager_id#13,i_product_name#82] parquet
               :     :     +- Project [c_customer_sk#17, c_current_addr_sk#18]
               :     :        +- Filter (isnotnull(c_customer_sk#17) AND isnotnull(c_current_addr_sk#18))
               :     :           +- Relation[c_customer_sk#17,c_customer_id#83,c_current_cdemo_sk#84,c_current_hdemo_sk#85,c_current_addr_sk#18,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :     +- Project [ca_address_sk#19, ca_zip#20]
               :        +- Filter (isnotnull(ca_address_sk#19) AND isnotnull(ca_zip#20))
               :           +- Relation[ca_address_sk#19,ca_address_id#99,ca_street_number#100,ca_street_name#101,ca_street_type#102,ca_suite_number#103,ca_city#104,ca_county#105,ca_state#106,ca_zip#20,ca_country#107,ca_gmt_offset#108,ca_location_type#109] parquet
               +- Project [s_store_sk#23, s_zip#21]
                  +- Filter (isnotnull(s_zip#21) AND isnotnull(s_store_sk#23))
                     +- Relation[s_store_sk#23,s_store_id#110,s_rec_start_date#111,s_rec_end_date#112,s_closed_date_sk#113,s_store_name#114,s_number_employees#115,s_floor_space#116,s_hours#117,s_manager#118,s_market_id#119,s_geography_class#120,s_market_desc#121,s_market_manager#122,s_division_id#123,s_division_name#124,s_company_id#125,s_company_name#126,s_street_number#127,s_street_name#128,s_street_type#129,s_suite_number#130,s_city#131,s_county#132,s_state#133,s_zip#21,s_country#134,s_gmt_offset#135,s_tax_percentage#136] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[ext_price#3 DESC NULLS LAST,brand#2 ASC NULLS FIRST,brand_id#1 ASC NULLS FIRST,i_manufact_id#4 ASC NULLS FIRST,i_manufact#5 ASC NULLS FIRST], output=[brand_id#1,brand#2,i_manufact_id#4,i_manufact#5,ext_price#3])
+- *(7) HashAggregate(keys=[i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5], functions=[sum(UnscaledValue(ss_ext_sales_price#8))], output=[brand_id#1, brand#2, i_manufact_id#4, i_manufact#5, ext_price#3])
   +- Exchange hashpartitioning(i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5, 5), true, [id=#137]
      +- *(6) HashAggregate(keys=[i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#8))], output=[i_brand#6, i_brand_id#7, i_manufact_id#4, i_manufact#5, sum#138])
         +- *(6) Project [ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
            +- *(6) BroadcastHashJoin [ss_store_sk#22], [s_store_sk#23], Inner, BuildRight, NOT (substr(ca_zip#20, 1, 5) = substr(s_zip#21, 1, 5))
               :- *(6) Project [ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5, ca_zip#20]
               :  +- *(6) BroadcastHashJoin [c_current_addr_sk#18], [ca_address_sk#19], Inner, BuildRight
               :     :- *(6) Project [ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5, c_current_addr_sk#18]
               :     :  +- *(6) BroadcastHashJoin [ss_customer_sk#16], [c_customer_sk#17], Inner, BuildRight
               :     :     :- *(6) Project [ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
               :     :     :  +- *(6) BroadcastHashJoin [ss_item_sk#11], [i_item_sk#12], Inner, BuildRight
               :     :     :     :- *(6) Project [ss_item_sk#11, ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8]
               :     :     :     :  +- *(6) BroadcastHashJoin [d_date_sk#9], [ss_sold_date_sk#10], Inner, BuildRight
               :     :     :     :     :- *(6) Project [d_date_sk#9]
               :     :     :     :     :  +- *(6) Filter ((((isnotnull(d_moy#14) AND isnotnull(d_year#15)) AND (d_moy#14 = 11)) AND (d_year#15 = 1998)) AND isnotnull(d_date_sk#9))
               :     :     :     :     :     +- *(6) ColumnarToRow
               :     :     :     :     :        +- FileScan parquet default.date_dim[d_date_sk#9,d_year#15,d_moy#14] Batched: true, DataFilters: [isnotnull(d_moy#14), isnotnull(d_year#15), (d_moy#14 = 11), (d_year#15 = 1998), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#139]
               :     :     :     :        +- *(1) Project [ss_sold_date_sk#10, ss_item_sk#11, ss_customer_sk#16, ss_store_sk#22, ss_ext_sales_price#8]
               :     :     :     :           +- *(1) Filter (((isnotnull(ss_sold_date_sk#10) AND isnotnull(ss_item_sk#11)) AND isnotnull(ss_customer_sk#16)) AND isnotnull(ss_store_sk#22))
               :     :     :     :              +- *(1) ColumnarToRow
               :     :     :     :                 +- FileScan parquet default.store_sales[ss_sold_date_sk#10,ss_item_sk#11,ss_customer_sk#16,ss_store_sk#22,ss_ext_sales_price#8] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#10), isnotnull(ss_item_sk#11), isnotnull(ss_customer_sk#16), isnotn..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
               :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#140]
               :     :     :        +- *(2) Project [i_item_sk#12, i_brand_id#7, i_brand#6, i_manufact_id#4, i_manufact#5]
               :     :     :           +- *(2) Filter ((isnotnull(i_manager_id#13) AND (i_manager_id#13 = 8)) AND isnotnull(i_item_sk#12))
               :     :     :              +- *(2) ColumnarToRow
               :     :     :                 +- FileScan parquet default.item[i_item_sk#12,i_brand_id#7,i_brand#6,i_manufact_id#4,i_manufact#5,i_manager_id#13] Batched: true, DataFilters: [isnotnull(i_manager_id#13), (i_manager_id#13 = 8), isnotnull(i_item_sk#12)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,8), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#141]
               :     :        +- *(3) Project [c_customer_sk#17, c_current_addr_sk#18]
               :     :           +- *(3) Filter (isnotnull(c_customer_sk#17) AND isnotnull(c_current_addr_sk#18))
               :     :              +- *(3) ColumnarToRow
               :     :                 +- FileScan parquet default.customer[c_customer_sk#17,c_current_addr_sk#18] Batched: true, DataFilters: [isnotnull(c_customer_sk#17), isnotnull(c_current_addr_sk#18)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#142]
               :        +- *(4) Project [ca_address_sk#19, ca_zip#20]
               :           +- *(4) Filter (isnotnull(ca_address_sk#19) AND isnotnull(ca_zip#20))
               :              +- *(4) ColumnarToRow
               :                 +- FileScan parquet default.customer_address[ca_address_sk#19,ca_zip#20] Batched: true, DataFilters: [isnotnull(ca_address_sk#19), isnotnull(ca_zip#20)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#143]
                  +- *(5) Project [s_store_sk#23, s_zip#21]
                     +- *(5) Filter (isnotnull(s_zip#21) AND isnotnull(s_store_sk#23))
                        +- *(5) ColumnarToRow
                           +- FileScan parquet default.store[s_store_sk#23,s_zip#21] Batched: true, DataFilters: [isnotnull(s_zip#21), isnotnull(s_store_sk#23)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_zip:string>

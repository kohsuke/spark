== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['w_warehouse_name ASC NULLS FIRST], true
      +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year, 'sum('jan_sales) AS jan_sales#1, 'sum('feb_sales) AS feb_sales#2, 'sum('mar_sales) AS mar_sales#3, 'sum('apr_sales) AS apr_sales#4, 'sum('may_sales) AS may_sales#5, 'sum('jun_sales) AS jun_sales#6, 'sum('jul_sales) AS jul_sales#7, 'sum('aug_sales) AS aug_sales#8, 'sum('sep_sales) AS sep_sales#9, 'sum('oct_sales) AS oct_sales#10, 'sum('nov_sales) AS nov_sales#11, 'sum('dec_sales) AS dec_sales#12, 'sum(('jan_sales / 'w_warehouse_sq_ft)) AS jan_sales_per_sq_foot#13, 'sum(('feb_sales / 'w_warehouse_sq_ft)) AS feb_sales_per_sq_foot#14, 'sum(('mar_sales / 'w_warehouse_sq_ft)) AS mar_sales_per_sq_foot#15, 'sum(('apr_sales / 'w_warehouse_sq_ft)) AS apr_sales_per_sq_foot#16, 'sum(('may_sales / 'w_warehouse_sq_ft)) AS may_sales_per_sq_foot#17, 'sum(('jun_sales / 'w_warehouse_sq_ft)) AS jun_sales_per_sq_foot#18, 'sum(('jul_sales / 'w_warehouse_sq_ft)) AS jul_sales_per_sq_foot#19, 'sum(('aug_sales / 'w_warehouse_sq_ft)) AS aug_sales_per_sq_foot#20, 'sum(('sep_sales / 'w_warehouse_sq_ft)) AS sep_sales_per_sq_foot#21, 'sum(('oct_sales / 'w_warehouse_sq_ft)) AS oct_sales_per_sq_foot#22, 'sum(('nov_sales / 'w_warehouse_sq_ft)) AS nov_sales_per_sq_foot#23, 'sum(('dec_sales / 'w_warehouse_sq_ft)) AS dec_sales_per_sq_foot#24, 'sum('jan_net) AS jan_net#25, 'sum('feb_net) AS feb_net#26, 'sum('mar_net) AS mar_net#27, 'sum('apr_net) AS apr_net#28, 'sum('may_net) AS may_net#29, 'sum('jun_net) AS jun_net#30, 'sum('jul_net) AS jul_net#31, 'sum('aug_net) AS aug_net#32, 'sum('sep_net) AS sep_net#33, 'sum('oct_net) AS oct_net#34, 'sum('nov_net) AS nov_net#35, 'sum('dec_net) AS dec_net#36]
         +- 'SubqueryAlias x
            +- 'Union
               :- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#37, 'd_year AS year#38, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jan_sales#39, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS feb_sales#40, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS mar_sales#41, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS apr_sales#42, 'sum(CASE WHEN ('d_moy = 5) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS may_sales#43, 'sum(CASE WHEN ('d_moy = 6) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jun_sales#44, 'sum(CASE WHEN ('d_moy = 7) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jul_sales#45, 'sum(CASE WHEN ('d_moy = 8) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS aug_sales#46, 'sum(CASE WHEN ('d_moy = 9) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS sep_sales#47, 'sum(CASE WHEN ('d_moy = 10) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS oct_sales#48, 'sum(CASE WHEN ('d_moy = 11) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS nov_sales#49, 'sum(CASE WHEN ('d_moy = 12) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS dec_sales#50, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS jan_net#51, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS feb_net#52, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS mar_net#53, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS apr_net#54, 'sum(CASE WHEN ('d_moy = 5) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS may_net#55, 'sum(CASE WHEN ('d_moy = 6) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS jun_net#56, 'sum(CASE WHEN ('d_moy = 7) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS jul_net#57, 'sum(CASE WHEN ('d_moy = 8) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS aug_net#58, 'sum(CASE WHEN ('d_moy = 9) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS sep_net#59, 'sum(CASE WHEN ('d_moy = 10) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS oct_net#60, 'sum(CASE WHEN ('d_moy = 11) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS nov_net#61, 'sum(CASE WHEN ('d_moy = 12) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS dec_net#62]
               :  +- 'Filter (((('ws_warehouse_sk = 'w_warehouse_sk) AND ('ws_sold_date_sk = 'd_date_sk)) AND (('ws_sold_time_sk = 't_time_sk) AND ('ws_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
               :     +- 'Join Inner
               :        :- 'Join Inner
               :        :  :- 'Join Inner
               :        :  :  :- 'Join Inner
               :        :  :  :  :- 'UnresolvedRelation [web_sales]
               :        :  :  :  +- 'UnresolvedRelation [warehouse]
               :        :  :  +- 'UnresolvedRelation [date_dim]
               :        :  +- 'UnresolvedRelation [time_dim]
               :        +- 'UnresolvedRelation [ship_mode]
               +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#63, 'd_year AS year#64, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jan_sales#65, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS feb_sales#66, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS mar_sales#67, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS apr_sales#68, 'sum(CASE WHEN ('d_moy = 5) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS may_sales#69, 'sum(CASE WHEN ('d_moy = 6) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jun_sales#70, 'sum(CASE WHEN ('d_moy = 7) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jul_sales#71, 'sum(CASE WHEN ('d_moy = 8) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS aug_sales#72, 'sum(CASE WHEN ('d_moy = 9) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS sep_sales#73, 'sum(CASE WHEN ('d_moy = 10) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS oct_sales#74, 'sum(CASE WHEN ('d_moy = 11) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS nov_sales#75, 'sum(CASE WHEN ('d_moy = 12) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS dec_sales#76, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS jan_net#77, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS feb_net#78, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS mar_net#79, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS apr_net#80, 'sum(CASE WHEN ('d_moy = 5) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS may_net#81, 'sum(CASE WHEN ('d_moy = 6) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS jun_net#82, 'sum(CASE WHEN ('d_moy = 7) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS jul_net#83, 'sum(CASE WHEN ('d_moy = 8) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS aug_net#84, 'sum(CASE WHEN ('d_moy = 9) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS sep_net#85, 'sum(CASE WHEN ('d_moy = 10) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS oct_net#86, 'sum(CASE WHEN ('d_moy = 11) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS nov_net#87, 'sum(CASE WHEN ('d_moy = 12) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS dec_net#88]
                  +- 'Filter (((('cs_warehouse_sk = 'w_warehouse_sk) AND ('cs_sold_date_sk = 'd_date_sk)) AND (('cs_sold_time_sk = 't_time_sk) AND ('cs_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
                     +- 'Join Inner
                        :- 'Join Inner
                        :  :- 'Join Inner
                        :  :  :- 'Join Inner
                        :  :  :  :- 'UnresolvedRelation [catalog_sales]
                        :  :  :  +- 'UnresolvedRelation [warehouse]
                        :  :  +- 'UnresolvedRelation [date_dim]
                        :  +- 'UnresolvedRelation [time_dim]
                        +- 'UnresolvedRelation [ship_mode]

== Analyzed Logical Plan ==
w_warehouse_name: string, w_warehouse_sq_ft: int, w_city: string, w_county: string, w_state: string, w_country: string, ship_carriers: string, year: int, jan_sales: decimal(38,2), feb_sales: decimal(38,2), mar_sales: decimal(38,2), apr_sales: decimal(38,2), may_sales: decimal(38,2), jun_sales: decimal(38,2), jul_sales: decimal(38,2), aug_sales: decimal(38,2), sep_sales: decimal(38,2), oct_sales: decimal(38,2), nov_sales: decimal(38,2), dec_sales: decimal(38,2), jan_sales_per_sq_foot: decimal(38,12), feb_sales_per_sq_foot: decimal(38,12), mar_sales_per_sq_foot: decimal(38,12), apr_sales_per_sq_foot: decimal(38,12), may_sales_per_sq_foot: decimal(38,12), jun_sales_per_sq_foot: decimal(38,12), jul_sales_per_sq_foot: decimal(38,12), aug_sales_per_sq_foot: decimal(38,12), sep_sales_per_sq_foot: decimal(38,12), oct_sales_per_sq_foot: decimal(38,12), nov_sales_per_sq_foot: decimal(38,12), dec_sales_per_sq_foot: decimal(38,12), jan_net: decimal(38,2), feb_net: decimal(38,2), mar_net: decimal(38,2), apr_net: decimal(38,2), may_net: decimal(38,2), jun_net: decimal(38,2), jul_net: decimal(38,2), aug_net: decimal(38,2), sep_net: decimal(38,2), oct_net: decimal(38,2), nov_net: decimal(38,2), dec_net: decimal(38,2)
GlobalLimit 100
+- LocalLimit 100
   +- Project [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, jan_sales#1, feb_sales#2, mar_sales#3, apr_sales#4, may_sales#5, jun_sales#6, jul_sales#7, aug_sales#8, sep_sales#9, oct_sales#10, nov_sales#11, dec_sales#12, jan_sales_per_sq_foot#13, feb_sales_per_sq_foot#14, mar_sales_per_sq_foot#15, apr_sales_per_sq_foot#16, may_sales_per_sq_foot#17, jun_sales_per_sq_foot#18, jul_sales_per_sq_foot#19, aug_sales_per_sq_foot#20, sep_sales_per_sq_foot#21, oct_sales_per_sq_foot#22, nov_sales_per_sq_foot#23, dec_sales_per_sq_foot#24, jan_net#25, feb_net#26, mar_net#27, apr_net#28, may_net#29, jun_net#30, jul_net#31, aug_net#32, sep_net#33, oct_net#34, nov_net#35, dec_net#36]
      +- Sort [w_warehouse_name#89 ASC NULLS FIRST], true
         +- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, sum(jan_sales#39) AS jan_sales#1, sum(feb_sales#40) AS feb_sales#2, sum(mar_sales#41) AS mar_sales#3, sum(apr_sales#42) AS apr_sales#4, sum(may_sales#43) AS may_sales#5, sum(jun_sales#44) AS jun_sales#6, sum(jul_sales#45) AS jul_sales#7, sum(aug_sales#46) AS aug_sales#8, sum(sep_sales#47) AS sep_sales#9, sum(oct_sales#48) AS oct_sales#10, sum(nov_sales#49) AS nov_sales#11, sum(dec_sales#50) AS dec_sales#12, sum(CheckOverflow((promote_precision(cast(jan_sales#39 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jan_sales_per_sq_foot#13, sum(CheckOverflow((promote_precision(cast(feb_sales#40 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS feb_sales_per_sq_foot#14, sum(CheckOverflow((promote_precision(cast(mar_sales#41 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS mar_sales_per_sq_foot#15, sum(CheckOverflow((promote_precision(cast(apr_sales#42 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS apr_sales_per_sq_foot#16, sum(CheckOverflow((promote_precision(cast(may_sales#43 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS may_sales_per_sq_foot#17, sum(CheckOverflow((promote_precision(cast(jun_sales#44 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jun_sales_per_sq_foot#18, sum(CheckOverflow((promote_precision(cast(jul_sales#45 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jul_sales_per_sq_foot#19, sum(CheckOverflow((promote_precision(cast(aug_sales#46 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS aug_sales_per_sq_foot#20, sum(CheckOverflow((promote_precision(cast(sep_sales#47 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS sep_sales_per_sq_foot#21, sum(CheckOverflow((promote_precision(cast(oct_sales#48 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS oct_sales_per_sq_foot#22, sum(CheckOverflow((promote_precision(cast(nov_sales#49 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS nov_sales_per_sq_foot#23, sum(CheckOverflow((promote_precision(cast(dec_sales#50 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS dec_sales_per_sq_foot#24, sum(jan_net#51) AS jan_net#25, sum(feb_net#52) AS feb_net#26, sum(mar_net#53) AS mar_net#27, sum(apr_net#54) AS apr_net#28, sum(may_net#55) AS may_net#29, sum(jun_net#56) AS jun_net#30, sum(jul_net#57) AS jul_net#31, sum(aug_net#58) AS aug_net#32, sum(sep_net#59) AS sep_net#33, sum(oct_net#60) AS oct_net#34, sum(nov_net#61) AS nov_net#35, sum(dec_net#62) AS dec_net#36]
            +- SubqueryAlias x
               +- Union
                  :- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, concat(DHL, ,, BARIAN) AS ship_carriers#37, d_year#95 AS year#38, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_sales#39, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_sales#40, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_sales#41, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_sales#42, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_sales#43, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_sales#44, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_sales#45, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_sales#46, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_sales#47, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_sales#48, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_sales#49, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_sales#50, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_net#51, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_net#52, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_net#53, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_net#54, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_net#55, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_net#56, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_net#57, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_net#58, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_net#59, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_net#60, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_net#61, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_net#62]
                  :  +- Filter ((((ws_warehouse_sk#100 = w_warehouse_sk#101) AND (ws_sold_date_sk#102 = d_date_sk#103)) AND ((ws_sold_time_sk#104 = t_time_sk#105) AND (ws_ship_mode_sk#106 = sm_ship_mode_sk#107))) AND (((d_year#95 = 2001) AND ((t_time#108 >= 30838) AND (t_time#108 <= (30838 + 28800)))) AND sm_carrier#109 IN (DHL,BARIAN)))
                  :     +- Join Inner
                  :        :- Join Inner
                  :        :  :- Join Inner
                  :        :  :  :- Join Inner
                  :        :  :  :  :- SubqueryAlias spark_catalog.default.web_sales
                  :        :  :  :  :  +- Relation[ws_sold_date_sk#102,ws_sold_time_sk#104,ws_ship_date_sk#110,ws_item_sk#111,ws_bill_customer_sk#112,ws_bill_cdemo_sk#113,ws_bill_hdemo_sk#114,ws_bill_addr_sk#115,ws_ship_customer_sk#116,ws_ship_cdemo_sk#117,ws_ship_hdemo_sk#118,ws_ship_addr_sk#119,ws_web_page_sk#120,ws_web_site_sk#121,ws_ship_mode_sk#106,ws_warehouse_sk#100,ws_promo_sk#122,ws_order_number#123,ws_quantity#98,ws_wholesale_cost#124,ws_list_price#125,ws_sales_price#126,ws_ext_discount_amt#127,ws_ext_sales_price#97,ws_ext_wholesale_cost#128,ws_ext_list_price#129,ws_ext_tax#130,ws_coupon_amt#131,ws_ext_ship_cost#132,ws_net_paid#99,ws_net_paid_inc_tax#133,ws_net_paid_inc_ship#134,ws_net_paid_inc_ship_tax#135,ws_net_profit#136] parquet
                  :        :  :  :  +- SubqueryAlias spark_catalog.default.warehouse
                  :        :  :  :     +- Relation[w_warehouse_sk#101,w_warehouse_id#137,w_warehouse_name#89,w_warehouse_sq_ft#90,w_street_number#138,w_street_name#139,w_street_type#140,w_suite_number#141,w_city#91,w_county#92,w_state#93,w_zip#142,w_country#94,w_gmt_offset#143] parquet
                  :        :  :  +- SubqueryAlias spark_catalog.default.date_dim
                  :        :  :     +- Relation[d_date_sk#103,d_date_id#144,d_date#145,d_month_seq#146,d_week_seq#147,d_quarter_seq#148,d_year#95,d_dow#149,d_moy#96,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,d_current_week#165,d_current_month#166,d_current_quarter#167,d_current_year#168] parquet
                  :        :  +- SubqueryAlias spark_catalog.default.time_dim
                  :        :     +- Relation[t_time_sk#105,t_time_id#169,t_time#108,t_hour#170,t_minute#171,t_second#172,t_am_pm#173,t_shift#174,t_sub_shift#175,t_meal_time#176] parquet
                  :        +- SubqueryAlias spark_catalog.default.ship_mode
                  :           +- Relation[sm_ship_mode_sk#107,sm_ship_mode_id#177,sm_type#178,sm_code#179,sm_carrier#109,sm_contract#180] parquet
                  +- Project [w_warehouse_name#89 AS w_warehouse_name#181, w_warehouse_sq_ft#90 AS w_warehouse_sq_ft#182, w_city#91 AS w_city#183, w_county#92 AS w_county#184, w_state#93 AS w_state#185, w_country#94 AS w_country#186, ship_carriers#63 AS ship_carriers#187, year#64 AS year#188, jan_sales#65 AS jan_sales#189, feb_sales#66 AS feb_sales#190, mar_sales#67 AS mar_sales#191, apr_sales#68 AS apr_sales#192, may_sales#69 AS may_sales#193, jun_sales#70 AS jun_sales#194, jul_sales#71 AS jul_sales#195, aug_sales#72 AS aug_sales#196, sep_sales#73 AS sep_sales#197, oct_sales#74 AS oct_sales#198, nov_sales#75 AS nov_sales#199, dec_sales#76 AS dec_sales#200, jan_net#77 AS jan_net#201, feb_net#78 AS feb_net#202, mar_net#79 AS mar_net#203, apr_net#80 AS apr_net#204, may_net#81 AS may_net#205, jun_net#82 AS jun_net#206, jul_net#83 AS jul_net#207, aug_net#84 AS aug_net#208, sep_net#85 AS sep_net#209, oct_net#86 AS oct_net#210, nov_net#87 AS nov_net#211, dec_net#88 AS dec_net#212]
                     +- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, concat(DHL, ,, BARIAN) AS ship_carriers#63, d_year#95 AS year#64, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_sales#65, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_sales#66, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_sales#67, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_sales#68, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_sales#69, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_sales#70, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_sales#71, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_sales#72, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_sales#73, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_sales#74, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_sales#75, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_sales#76, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_net#77, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_net#78, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_net#79, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_net#80, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_net#81, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_net#82, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_net#83, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_net#84, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_net#85, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_net#86, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_net#87, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_net#88]
                        +- Filter ((((cs_warehouse_sk#216 = w_warehouse_sk#101) AND (cs_sold_date_sk#217 = d_date_sk#103)) AND ((cs_sold_time_sk#218 = t_time_sk#105) AND (cs_ship_mode_sk#219 = sm_ship_mode_sk#107))) AND (((d_year#95 = 2001) AND ((t_time#108 >= 30838) AND (t_time#108 <= (30838 + 28800)))) AND sm_carrier#109 IN (DHL,BARIAN)))
                           +- Join Inner
                              :- Join Inner
                              :  :- Join Inner
                              :  :  :- Join Inner
                              :  :  :  :- SubqueryAlias spark_catalog.default.catalog_sales
                              :  :  :  :  +- Relation[cs_sold_date_sk#217,cs_sold_time_sk#218,cs_ship_date_sk#220,cs_bill_customer_sk#221,cs_bill_cdemo_sk#222,cs_bill_hdemo_sk#223,cs_bill_addr_sk#224,cs_ship_customer_sk#225,cs_ship_cdemo_sk#226,cs_ship_hdemo_sk#227,cs_ship_addr_sk#228,cs_call_center_sk#229,cs_catalog_page_sk#230,cs_ship_mode_sk#219,cs_warehouse_sk#216,cs_item_sk#231,cs_promo_sk#232,cs_order_number#233,cs_quantity#214,cs_wholesale_cost#234,cs_list_price#235,cs_sales_price#213,cs_ext_discount_amt#236,cs_ext_sales_price#237,cs_ext_wholesale_cost#238,cs_ext_list_price#239,cs_ext_tax#240,cs_coupon_amt#241,cs_ext_ship_cost#242,cs_net_paid#243,cs_net_paid_inc_tax#215,cs_net_paid_inc_ship#244,cs_net_paid_inc_ship_tax#245,cs_net_profit#246] parquet
                              :  :  :  +- SubqueryAlias spark_catalog.default.warehouse
                              :  :  :     +- Relation[w_warehouse_sk#101,w_warehouse_id#137,w_warehouse_name#89,w_warehouse_sq_ft#90,w_street_number#138,w_street_name#139,w_street_type#140,w_suite_number#141,w_city#91,w_county#92,w_state#93,w_zip#142,w_country#94,w_gmt_offset#143] parquet
                              :  :  +- SubqueryAlias spark_catalog.default.date_dim
                              :  :     +- Relation[d_date_sk#103,d_date_id#144,d_date#145,d_month_seq#146,d_week_seq#147,d_quarter_seq#148,d_year#95,d_dow#149,d_moy#96,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,d_current_week#165,d_current_month#166,d_current_quarter#167,d_current_year#168] parquet
                              :  +- SubqueryAlias spark_catalog.default.time_dim
                              :     +- Relation[t_time_sk#105,t_time_id#169,t_time#108,t_hour#170,t_minute#171,t_second#172,t_am_pm#173,t_shift#174,t_sub_shift#175,t_meal_time#176] parquet
                              +- SubqueryAlias spark_catalog.default.ship_mode
                                 +- Relation[sm_ship_mode_sk#107,sm_ship_mode_id#177,sm_type#178,sm_code#179,sm_carrier#109,sm_contract#180] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_warehouse_name#89 ASC NULLS FIRST], true
      +- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, sum(jan_sales#39) AS jan_sales#1, sum(feb_sales#40) AS feb_sales#2, sum(mar_sales#41) AS mar_sales#3, sum(apr_sales#42) AS apr_sales#4, sum(may_sales#43) AS may_sales#5, sum(jun_sales#44) AS jun_sales#6, sum(jul_sales#45) AS jul_sales#7, sum(aug_sales#46) AS aug_sales#8, sum(sep_sales#47) AS sep_sales#9, sum(oct_sales#48) AS oct_sales#10, sum(nov_sales#49) AS nov_sales#11, sum(dec_sales#50) AS dec_sales#12, sum(CheckOverflow((promote_precision(jan_sales#39) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jan_sales_per_sq_foot#13, sum(CheckOverflow((promote_precision(feb_sales#40) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS feb_sales_per_sq_foot#14, sum(CheckOverflow((promote_precision(mar_sales#41) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS mar_sales_per_sq_foot#15, sum(CheckOverflow((promote_precision(apr_sales#42) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS apr_sales_per_sq_foot#16, sum(CheckOverflow((promote_precision(may_sales#43) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS may_sales_per_sq_foot#17, sum(CheckOverflow((promote_precision(jun_sales#44) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jun_sales_per_sq_foot#18, sum(CheckOverflow((promote_precision(jul_sales#45) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jul_sales_per_sq_foot#19, sum(CheckOverflow((promote_precision(aug_sales#46) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS aug_sales_per_sq_foot#20, sum(CheckOverflow((promote_precision(sep_sales#47) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS sep_sales_per_sq_foot#21, sum(CheckOverflow((promote_precision(oct_sales#48) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS oct_sales_per_sq_foot#22, sum(CheckOverflow((promote_precision(nov_sales#49) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS nov_sales_per_sq_foot#23, sum(CheckOverflow((promote_precision(dec_sales#50) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS dec_sales_per_sq_foot#24, sum(jan_net#51) AS jan_net#25, sum(feb_net#52) AS feb_net#26, sum(mar_net#53) AS mar_net#27, sum(apr_net#54) AS apr_net#28, sum(may_net#55) AS may_net#29, sum(jun_net#56) AS jun_net#30, sum(jul_net#57) AS jul_net#31, sum(aug_net#58) AS aug_net#32, sum(sep_net#59) AS sep_net#33, sum(oct_net#60) AS oct_net#34, sum(nov_net#61) AS nov_net#35, sum(dec_net#62) AS dec_net#36]
         +- Union
            :- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, DHL,BARIAN AS ship_carriers#37, d_year#95 AS year#38, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_sales#39, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_sales#40, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_sales#41, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_sales#42, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_sales#43, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_sales#44, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_sales#45, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_sales#46, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_sales#47, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_sales#48, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_sales#49, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_sales#50, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_net#51, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_net#52, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_net#53, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_net#54, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_net#55, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_net#56, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_net#57, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_net#58, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_net#59, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_net#60, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_net#61, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_net#62]
            :  +- Project [ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :     +- Join Inner, (ws_ship_mode_sk#106 = sm_ship_mode_sk#107)
            :        :- Project [ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :        :  +- Join Inner, (ws_sold_time_sk#104 = t_time_sk#105)
            :        :     :- Project [ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :        :     :  +- Join Inner, (ws_sold_date_sk#102 = d_date_sk#103)
            :        :     :     :- Project [ws_sold_date_sk#102, ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
            :        :     :     :  +- Join Inner, (ws_warehouse_sk#100 = w_warehouse_sk#101)
            :        :     :     :     :- Project [ws_sold_date_sk#102, ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_warehouse_sk#100, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99]
            :        :     :     :     :  +- Filter (((isnotnull(ws_warehouse_sk#100) AND isnotnull(ws_sold_date_sk#102)) AND isnotnull(ws_sold_time_sk#104)) AND isnotnull(ws_ship_mode_sk#106))
            :        :     :     :     :     +- Relation[ws_sold_date_sk#102,ws_sold_time_sk#104,ws_ship_date_sk#110,ws_item_sk#111,ws_bill_customer_sk#112,ws_bill_cdemo_sk#113,ws_bill_hdemo_sk#114,ws_bill_addr_sk#115,ws_ship_customer_sk#116,ws_ship_cdemo_sk#117,ws_ship_hdemo_sk#118,ws_ship_addr_sk#119,ws_web_page_sk#120,ws_web_site_sk#121,ws_ship_mode_sk#106,ws_warehouse_sk#100,ws_promo_sk#122,ws_order_number#123,ws_quantity#98,ws_wholesale_cost#124,ws_list_price#125,ws_sales_price#126,ws_ext_discount_amt#127,ws_ext_sales_price#97,ws_ext_wholesale_cost#128,ws_ext_list_price#129,ws_ext_tax#130,ws_coupon_amt#131,ws_ext_ship_cost#132,ws_net_paid#99,ws_net_paid_inc_tax#133,ws_net_paid_inc_ship#134,ws_net_paid_inc_ship_tax#135,ws_net_profit#136] parquet
            :        :     :     :     +- Project [w_warehouse_sk#101, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
            :        :     :     :        +- Filter isnotnull(w_warehouse_sk#101)
            :        :     :     :           +- Relation[w_warehouse_sk#101,w_warehouse_id#137,w_warehouse_name#89,w_warehouse_sq_ft#90,w_street_number#138,w_street_name#139,w_street_type#140,w_suite_number#141,w_city#91,w_county#92,w_state#93,w_zip#142,w_country#94,w_gmt_offset#143] parquet
            :        :     :     +- Project [d_date_sk#103, d_year#95, d_moy#96]
            :        :     :        +- Filter ((isnotnull(d_year#95) AND (d_year#95 = 2001)) AND isnotnull(d_date_sk#103))
            :        :     :           +- Relation[d_date_sk#103,d_date_id#144,d_date#145,d_month_seq#146,d_week_seq#147,d_quarter_seq#148,d_year#95,d_dow#149,d_moy#96,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,d_current_week#165,d_current_month#166,d_current_quarter#167,d_current_year#168] parquet
            :        :     +- Project [t_time_sk#105]
            :        :        +- Filter (((isnotnull(t_time#108) AND (t_time#108 >= 30838)) AND (t_time#108 <= 59638)) AND isnotnull(t_time_sk#105))
            :        :           +- Relation[t_time_sk#105,t_time_id#169,t_time#108,t_hour#170,t_minute#171,t_second#172,t_am_pm#173,t_shift#174,t_sub_shift#175,t_meal_time#176] parquet
            :        +- Project [sm_ship_mode_sk#107]
            :           +- Filter (sm_carrier#109 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#107))
            :              +- Relation[sm_ship_mode_sk#107,sm_ship_mode_id#177,sm_type#178,sm_code#179,sm_carrier#109,sm_contract#180] parquet
            +- Aggregate [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], [w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, DHL,BARIAN AS ship_carriers#187, d_year#95 AS year#188, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_sales#189, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_sales#190, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_sales#191, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_sales#192, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_sales#193, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_sales#194, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_sales#195, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_sales#196, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_sales#197, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_sales#198, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_sales#199, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_sales#200, sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_net#201, sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_net#202, sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_net#203, sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_net#204, sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_net#205, sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_net#206, sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_net#207, sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_net#208, sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_net#209, sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_net#210, sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_net#211, sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_net#212]
               +- Project [cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                  +- Join Inner, (cs_ship_mode_sk#219 = sm_ship_mode_sk#107)
                     :- Project [cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                     :  +- Join Inner, (cs_sold_time_sk#218 = t_time_sk#105)
                     :     :- Project [cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                     :     :  +- Join Inner, (cs_sold_date_sk#217 = d_date_sk#103)
                     :     :     :- Project [cs_sold_date_sk#217, cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
                     :     :     :  +- Join Inner, (cs_warehouse_sk#216 = w_warehouse_sk#101)
                     :     :     :     :- Project [cs_sold_date_sk#217, cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_warehouse_sk#216, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215]
                     :     :     :     :  +- Filter (((isnotnull(cs_warehouse_sk#216) AND isnotnull(cs_sold_date_sk#217)) AND isnotnull(cs_sold_time_sk#218)) AND isnotnull(cs_ship_mode_sk#219))
                     :     :     :     :     +- Relation[cs_sold_date_sk#217,cs_sold_time_sk#218,cs_ship_date_sk#220,cs_bill_customer_sk#221,cs_bill_cdemo_sk#222,cs_bill_hdemo_sk#223,cs_bill_addr_sk#224,cs_ship_customer_sk#225,cs_ship_cdemo_sk#226,cs_ship_hdemo_sk#227,cs_ship_addr_sk#228,cs_call_center_sk#229,cs_catalog_page_sk#230,cs_ship_mode_sk#219,cs_warehouse_sk#216,cs_item_sk#231,cs_promo_sk#232,cs_order_number#233,cs_quantity#214,cs_wholesale_cost#234,cs_list_price#235,cs_sales_price#213,cs_ext_discount_amt#236,cs_ext_sales_price#237,cs_ext_wholesale_cost#238,cs_ext_list_price#239,cs_ext_tax#240,cs_coupon_amt#241,cs_ext_ship_cost#242,cs_net_paid#243,cs_net_paid_inc_tax#215,cs_net_paid_inc_ship#244,cs_net_paid_inc_ship_tax#245,cs_net_profit#246] parquet
                     :     :     :     +- Project [w_warehouse_sk#101, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
                     :     :     :        +- Filter isnotnull(w_warehouse_sk#101)
                     :     :     :           +- Relation[w_warehouse_sk#101,w_warehouse_id#137,w_warehouse_name#89,w_warehouse_sq_ft#90,w_street_number#138,w_street_name#139,w_street_type#140,w_suite_number#141,w_city#91,w_county#92,w_state#93,w_zip#142,w_country#94,w_gmt_offset#143] parquet
                     :     :     +- Project [d_date_sk#103, d_year#95, d_moy#96]
                     :     :        +- Filter ((isnotnull(d_year#95) AND (d_year#95 = 2001)) AND isnotnull(d_date_sk#103))
                     :     :           +- Relation[d_date_sk#103,d_date_id#144,d_date#145,d_month_seq#146,d_week_seq#147,d_quarter_seq#148,d_year#95,d_dow#149,d_moy#96,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,d_current_week#165,d_current_month#166,d_current_quarter#167,d_current_year#168] parquet
                     :     +- Project [t_time_sk#105]
                     :        +- Filter (((isnotnull(t_time#108) AND (t_time#108 >= 30838)) AND (t_time#108 <= 59638)) AND isnotnull(t_time_sk#105))
                     :           +- Relation[t_time_sk#105,t_time_id#169,t_time#108,t_hour#170,t_minute#171,t_second#172,t_am_pm#173,t_shift#174,t_sub_shift#175,t_meal_time#176] parquet
                     +- Project [sm_ship_mode_sk#107]
                        +- Filter (sm_carrier#109 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#107))
                           +- Relation[sm_ship_mode_sk#107,sm_ship_mode_id#177,sm_type#178,sm_code#179,sm_carrier#109,sm_contract#180] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#89 ASC NULLS FIRST], output=[w_warehouse_name#89,w_warehouse_sq_ft#90,w_city#91,w_county#92,w_state#93,w_country#94,ship_carriers#37,year#38,jan_sales#1,feb_sales#2,mar_sales#3,apr_sales#4,may_sales#5,jun_sales#6,jul_sales#7,aug_sales#8,sep_sales#9,oct_sales#10,nov_sales#11,dec_sales#12,jan_sales_per_sq_foot#13,feb_sales_per_sq_foot#14,mar_sales_per_sq_foot#15,apr_sales_per_sq_foot#16,may_sales_per_sq_foot#17,jun_sales_per_sq_foot#18,jul_sales_per_sq_foot#19,aug_sales_per_sq_foot#20,sep_sales_per_sq_foot#21,oct_sales_per_sq_foot#22,nov_sales_per_sq_foot#23,dec_sales_per_sq_foot#24,jan_net#25,feb_net#26,mar_net#27,apr_net#28,may_net#29,jun_net#30,jul_net#31,aug_net#32,sep_net#33,oct_net#34,nov_net#35,dec_net#36])
+- *(14) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38], functions=[sum(jan_sales#39), sum(feb_sales#40), sum(mar_sales#41), sum(apr_sales#42), sum(may_sales#43), sum(jun_sales#44), sum(jul_sales#45), sum(aug_sales#46), sum(sep_sales#47), sum(oct_sales#48), sum(nov_sales#49), sum(dec_sales#50), sum(CheckOverflow((promote_precision(jan_sales#39) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#40) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#41) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#42) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#43) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#44) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#45) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#46) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#47) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#48) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#49) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#50) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(jan_net#51), sum(feb_net#52), sum(mar_net#53), sum(apr_net#54), sum(may_net#55), sum(jun_net#56), sum(jul_net#57), sum(aug_net#58), sum(sep_net#59), sum(oct_net#60), sum(nov_net#61), sum(dec_net#62)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, jan_sales#1, feb_sales#2, mar_sales#3, apr_sales#4, may_sales#5, jun_sales#6, jul_sales#7, aug_sales#8, sep_sales#9, oct_sales#10, nov_sales#11, dec_sales#12, jan_sales_per_sq_foot#13, feb_sales_per_sq_foot#14, mar_sales_per_sq_foot#15, apr_sales_per_sq_foot#16, may_sales_per_sq_foot#17, jun_sales_per_sq_foot#18, jul_sales_per_sq_foot#19, aug_sales_per_sq_foot#20, sep_sales_per_sq_foot#21, oct_sales_per_sq_foot#22, nov_sales_per_sq_foot#23, dec_sales_per_sq_foot#24, jan_net#25, feb_net#26, mar_net#27, apr_net#28, may_net#29, jun_net#30, jul_net#31, aug_net#32, sep_net#33, oct_net#34, nov_net#35, dec_net#36])
   +- Exchange hashpartitioning(w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, 5), true, [id=#247]
      +- *(13) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38], functions=[partial_sum(jan_sales#39), partial_sum(feb_sales#40), partial_sum(mar_sales#41), partial_sum(apr_sales#42), partial_sum(may_sales#43), partial_sum(jun_sales#44), partial_sum(jul_sales#45), partial_sum(aug_sales#46), partial_sum(sep_sales#47), partial_sum(oct_sales#48), partial_sum(nov_sales#49), partial_sum(dec_sales#50), partial_sum(CheckOverflow((promote_precision(jan_sales#39) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#40) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#41) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#42) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#43) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#44) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#45) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#46) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#47) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#48) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#49) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#50) / promote_precision(cast(cast(w_warehouse_sq_ft#90 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(jan_net#51), partial_sum(feb_net#52), partial_sum(mar_net#53), partial_sum(apr_net#54), partial_sum(may_net#55), partial_sum(jun_net#56), partial_sum(jul_net#57), partial_sum(aug_net#58), partial_sum(sep_net#59), partial_sum(oct_net#60), partial_sum(nov_net#61), partial_sum(dec_net#62)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261, sum#262, isEmpty#263, sum#264, isEmpty#265, sum#266, isEmpty#267, sum#268, isEmpty#269, sum#270, isEmpty#271, sum#272, isEmpty#273, sum#274, isEmpty#275, sum#276, isEmpty#277, sum#278, isEmpty#279, sum#280, isEmpty#281, sum#282, isEmpty#283, sum#284, isEmpty#285, sum#286, isEmpty#287, sum#288, isEmpty#289, sum#290, isEmpty#291, sum#292, isEmpty#293, sum#294, isEmpty#295, sum#296, isEmpty#297, sum#298, isEmpty#299, sum#300, isEmpty#301, sum#302, isEmpty#303, sum#304, isEmpty#305, sum#306, isEmpty#307, sum#308, isEmpty#309, sum#310, isEmpty#311, sum#312, isEmpty#313, sum#314, isEmpty#315, sum#316, isEmpty#317, sum#318, isEmpty#319])
         +- Union
            :- *(6) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], functions=[sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#37, year#38, jan_sales#39, feb_sales#40, mar_sales#41, apr_sales#42, may_sales#43, jun_sales#44, jul_sales#45, aug_sales#46, sep_sales#47, oct_sales#48, nov_sales#49, dec_sales#50, jan_net#51, feb_net#52, mar_net#53, apr_net#54, may_net#55, jun_net#56, jul_net#57, aug_net#58, sep_net#59, oct_net#60, nov_net#61, dec_net#62])
            :  +- Exchange hashpartitioning(w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, 5), true, [id=#320]
            :     +- *(5) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], functions=[partial_sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#97 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#99 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#98 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, sum#321, isEmpty#322, sum#323, isEmpty#324, sum#325, isEmpty#326, sum#327, isEmpty#328, sum#329, isEmpty#330, sum#331, isEmpty#332, sum#333, isEmpty#334, sum#335, isEmpty#336, sum#337, isEmpty#338, sum#339, isEmpty#340, sum#341, isEmpty#342, sum#343, isEmpty#344, sum#345, isEmpty#346, sum#347, isEmpty#348, sum#349, isEmpty#350, sum#351, isEmpty#352, sum#353, isEmpty#354, sum#355, isEmpty#356, sum#357, isEmpty#358, sum#359, isEmpty#360, sum#361, isEmpty#362, sum#363, isEmpty#364, sum#365, isEmpty#366, sum#367, isEmpty#368])
            :        +- *(5) Project [ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :           +- *(5) BroadcastHashJoin [ws_ship_mode_sk#106], [sm_ship_mode_sk#107], Inner, BuildRight
            :              :- *(5) Project [ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :              :  +- *(5) BroadcastHashJoin [ws_sold_time_sk#104], [t_time_sk#105], Inner, BuildRight
            :              :     :- *(5) Project [ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
            :              :     :  +- *(5) BroadcastHashJoin [ws_sold_date_sk#102], [d_date_sk#103], Inner, BuildRight
            :              :     :     :- *(5) Project [ws_sold_date_sk#102, ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
            :              :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#100], [w_warehouse_sk#101], Inner, BuildRight
            :              :     :     :     :- *(5) Project [ws_sold_date_sk#102, ws_sold_time_sk#104, ws_ship_mode_sk#106, ws_warehouse_sk#100, ws_quantity#98, ws_ext_sales_price#97, ws_net_paid#99]
            :              :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#100) AND isnotnull(ws_sold_date_sk#102)) AND isnotnull(ws_sold_time_sk#104)) AND isnotnull(ws_ship_mode_sk#106))
            :              :     :     :     :     +- *(5) ColumnarToRow
            :              :     :     :     :        +- FileScan parquet default.web_sales[ws_sold_date_sk#102,ws_sold_time_sk#104,ws_ship_mode_sk#106,ws_warehouse_sk#100,ws_quantity#98,ws_ext_sales_price#97,ws_net_paid#99] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#100), isnotnull(ws_sold_date_sk#102), isnotnull(ws_sold_time_sk#104), ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
            :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#369]
            :              :     :     :        +- *(1) Project [w_warehouse_sk#101, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
            :              :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#101)
            :              :     :     :              +- *(1) ColumnarToRow
            :              :     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#101,w_warehouse_name#89,w_warehouse_sq_ft#90,w_city#91,w_county#92,w_state#93,w_country#94] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#101)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
            :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#370]
            :              :     :        +- *(2) Project [d_date_sk#103, d_year#95, d_moy#96]
            :              :     :           +- *(2) Filter ((isnotnull(d_year#95) AND (d_year#95 = 2001)) AND isnotnull(d_date_sk#103))
            :              :     :              +- *(2) ColumnarToRow
            :              :     :                 +- FileScan parquet default.date_dim[d_date_sk#103,d_year#95,d_moy#96] Batched: true, DataFilters: [isnotnull(d_year#95), (d_year#95 = 2001), isnotnull(d_date_sk#103)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#371]
            :              :        +- *(3) Project [t_time_sk#105]
            :              :           +- *(3) Filter (((isnotnull(t_time#108) AND (t_time#108 >= 30838)) AND (t_time#108 <= 59638)) AND isnotnull(t_time_sk#105))
            :              :              +- *(3) ColumnarToRow
            :              :                 +- FileScan parquet default.time_dim[t_time_sk#105,t_time#108] Batched: true, DataFilters: [isnotnull(t_time#108), (t_time#108 >= 30838), (t_time#108 <= 59638), isnotnull(t_time_sk#105)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
            :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#372]
            :                 +- *(4) Project [sm_ship_mode_sk#107]
            :                    +- *(4) Filter (sm_carrier#109 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#107))
            :                       +- *(4) ColumnarToRow
            :                          +- FileScan parquet default.ship_mode[sm_ship_mode_sk#107,sm_carrier#109] Batched: true, DataFilters: [sm_carrier#109 IN (DHL,BARIAN), isnotnull(sm_ship_mode_sk#107)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(sm_carrier, [DHL,BARIAN]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
            +- *(12) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], functions=[sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, ship_carriers#187, year#188, jan_sales#189, feb_sales#190, mar_sales#191, apr_sales#192, may_sales#193, jun_sales#194, jul_sales#195, aug_sales#196, sep_sales#197, oct_sales#198, nov_sales#199, dec_sales#200, jan_net#201, feb_net#202, mar_net#203, apr_net#204, may_net#205, jun_net#206, jul_net#207, aug_net#208, sep_net#209, oct_net#210, nov_net#211, dec_net#212])
               +- Exchange hashpartitioning(w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, 5), true, [id=#373]
                  +- *(11) HashAggregate(keys=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95], functions=[partial_sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#213 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#96 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#215 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#214 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, sum#374, isEmpty#375, sum#376, isEmpty#377, sum#378, isEmpty#379, sum#380, isEmpty#381, sum#382, isEmpty#383, sum#384, isEmpty#385, sum#386, isEmpty#387, sum#388, isEmpty#389, sum#390, isEmpty#391, sum#392, isEmpty#393, sum#394, isEmpty#395, sum#396, isEmpty#397, sum#398, isEmpty#399, sum#400, isEmpty#401, sum#402, isEmpty#403, sum#404, isEmpty#405, sum#406, isEmpty#407, sum#408, isEmpty#409, sum#410, isEmpty#411, sum#412, isEmpty#413, sum#414, isEmpty#415, sum#416, isEmpty#417, sum#418, isEmpty#419, sum#420, isEmpty#421])
                     +- *(11) Project [cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                        +- *(11) BroadcastHashJoin [cs_ship_mode_sk#219], [sm_ship_mode_sk#107], Inner, BuildRight
                           :- *(11) Project [cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                           :  +- *(11) BroadcastHashJoin [cs_sold_time_sk#218], [t_time_sk#105], Inner, BuildRight
                           :     :- *(11) Project [cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94, d_year#95, d_moy#96]
                           :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#217], [d_date_sk#103], Inner, BuildRight
                           :     :     :- *(11) Project [cs_sold_date_sk#217, cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94]
                           :     :     :  +- *(11) BroadcastHashJoin [cs_warehouse_sk#216], [w_warehouse_sk#101], Inner, BuildRight
                           :     :     :     :- *(11) Project [cs_sold_date_sk#217, cs_sold_time_sk#218, cs_ship_mode_sk#219, cs_warehouse_sk#216, cs_quantity#214, cs_sales_price#213, cs_net_paid_inc_tax#215]
                           :     :     :     :  +- *(11) Filter (((isnotnull(cs_warehouse_sk#216) AND isnotnull(cs_sold_date_sk#217)) AND isnotnull(cs_sold_time_sk#218)) AND isnotnull(cs_ship_mode_sk#219))
                           :     :     :     :     +- *(11) ColumnarToRow
                           :     :     :     :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#217,cs_sold_time_sk#218,cs_ship_mode_sk#219,cs_warehouse_sk#216,cs_quantity#214,cs_sales_price#213,cs_net_paid_inc_tax#215] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#216), isnotnull(cs_sold_date_sk#217), isnotnull(cs_sold_time_sk#218), ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                           :     :     :     +- ReusedExchange [w_warehouse_sk#101, w_warehouse_name#89, w_warehouse_sq_ft#90, w_city#91, w_county#92, w_state#93, w_country#94], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#369]
                           :     :     +- ReusedExchange [d_date_sk#103, d_year#95, d_moy#96], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#370]
                           :     +- ReusedExchange [t_time_sk#105], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#371]
                           +- ReusedExchange [sm_ship_mode_sk#107], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#372]

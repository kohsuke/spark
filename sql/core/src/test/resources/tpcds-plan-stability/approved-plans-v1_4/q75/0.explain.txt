== Parsed Logical Plan ==
CTE [all_sales]
:  +- 'SubqueryAlias all_sales
:     +- 'Aggregate ['d_year, 'i_brand_id, 'i_class_id, 'i_category_id, 'i_manufact_id], ['d_year, 'i_brand_id, 'i_class_id, 'i_category_id, 'i_manufact_id, 'SUM('sales_cnt) AS sales_cnt#1, 'SUM('sales_amt) AS sales_amt#2]
:        +- 'SubqueryAlias sales_detail
:           +- 'Distinct
:              +- 'Union
:                 :- 'Distinct
:                 :  +- 'Union
:                 :     :- 'Project ['d_year, 'i_brand_id, 'i_class_id, 'i_category_id, 'i_manufact_id, ('cs_quantity - 'COALESCE('cr_return_quantity, 0)) AS sales_cnt#3, ('cs_ext_sales_price - 'COALESCE('cr_return_amount, 0.0)) AS sales_amt#4]
:                 :     :  +- 'Filter ('i_category = Books)
:                 :     :     +- 'Join LeftOuter, (('cs_order_number = 'cr_order_number) AND ('cs_item_sk = 'cr_item_sk))
:                 :     :        :- 'Join Inner, ('d_date_sk = 'cs_sold_date_sk)
:                 :     :        :  :- 'Join Inner, ('i_item_sk = 'cs_item_sk)
:                 :     :        :  :  :- 'UnresolvedRelation [catalog_sales]
:                 :     :        :  :  +- 'UnresolvedRelation [item]
:                 :     :        :  +- 'UnresolvedRelation [date_dim]
:                 :     :        +- 'UnresolvedRelation [catalog_returns]
:                 :     +- 'Project ['d_year, 'i_brand_id, 'i_class_id, 'i_category_id, 'i_manufact_id, ('ss_quantity - 'COALESCE('sr_return_quantity, 0)) AS sales_cnt#5, ('ss_ext_sales_price - 'COALESCE('sr_return_amt, 0.0)) AS sales_amt#6]
:                 :        +- 'Filter ('i_category = Books)
:                 :           +- 'Join LeftOuter, (('ss_ticket_number = 'sr_ticket_number) AND ('ss_item_sk = 'sr_item_sk))
:                 :              :- 'Join Inner, ('d_date_sk = 'ss_sold_date_sk)
:                 :              :  :- 'Join Inner, ('i_item_sk = 'ss_item_sk)
:                 :              :  :  :- 'UnresolvedRelation [store_sales]
:                 :              :  :  +- 'UnresolvedRelation [item]
:                 :              :  +- 'UnresolvedRelation [date_dim]
:                 :              +- 'UnresolvedRelation [store_returns]
:                 +- 'Project ['d_year, 'i_brand_id, 'i_class_id, 'i_category_id, 'i_manufact_id, ('ws_quantity - 'COALESCE('wr_return_quantity, 0)) AS sales_cnt#7, ('ws_ext_sales_price - 'COALESCE('wr_return_amt, 0.0)) AS sales_amt#8]
:                    +- 'Filter ('i_category = Books)
:                       +- 'Join LeftOuter, (('ws_order_number = 'wr_order_number) AND ('ws_item_sk = 'wr_item_sk))
:                          :- 'Join Inner, ('d_date_sk = 'ws_sold_date_sk)
:                          :  :- 'Join Inner, ('i_item_sk = 'ws_item_sk)
:                          :  :  :- 'UnresolvedRelation [web_sales]
:                          :  :  +- 'UnresolvedRelation [item]
:                          :  +- 'UnresolvedRelation [date_dim]
:                          +- 'UnresolvedRelation [web_returns]
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['sales_cnt_diff ASC NULLS FIRST], true
         +- 'Project ['prev_yr.d_year AS prev_year#9, 'curr_yr.d_year AS year#10, 'curr_yr.i_brand_id, 'curr_yr.i_class_id, 'curr_yr.i_category_id, 'curr_yr.i_manufact_id, 'prev_yr.sales_cnt AS prev_yr_cnt#11, 'curr_yr.sales_cnt AS curr_yr_cnt#12, ('curr_yr.sales_cnt - 'prev_yr.sales_cnt) AS sales_cnt_diff#13, ('curr_yr.sales_amt - 'prev_yr.sales_amt) AS sales_amt_diff#14]
            +- 'Filter (((('curr_yr.i_brand_id = 'prev_yr.i_brand_id) AND ('curr_yr.i_class_id = 'prev_yr.i_class_id)) AND (('curr_yr.i_category_id = 'prev_yr.i_category_id) AND ('curr_yr.i_manufact_id = 'prev_yr.i_manufact_id))) AND ((('curr_yr.d_year = 2002) AND ('prev_yr.d_year = (2002 - 1))) AND ((cast('curr_yr.sales_cnt as decimal(17,2)) / cast('prev_yr.sales_cnt as decimal(17,2))) < 0.9)))
               +- 'Join Inner
                  :- 'SubqueryAlias curr_yr
                  :  +- 'UnresolvedRelation [all_sales]
                  +- 'SubqueryAlias prev_yr
                     +- 'UnresolvedRelation [all_sales]

== Analyzed Logical Plan ==
prev_year: int, year: int, i_brand_id: int, i_class_id: int, i_category_id: int, i_manufact_id: int, prev_yr_cnt: bigint, curr_yr_cnt: bigint, sales_cnt_diff: bigint, sales_amt_diff: decimal(19,2)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [sales_cnt_diff#15 ASC NULLS FIRST], true
      +- Project [d_year#16 AS prev_year#9, d_year#17 AS year#10, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#22 AS prev_yr_cnt#23, sales_cnt#24 AS curr_yr_cnt#25, (sales_cnt#24 - sales_cnt#22) AS sales_cnt_diff#15, CheckOverflow((promote_precision(cast(sales_amt#2 as decimal(19,2))) - promote_precision(cast(sales_amt#26 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#14]
         +- Filter ((((i_brand_id#18 = i_brand_id#27) AND (i_class_id#19 = i_class_id#28)) AND ((i_category_id#20 = i_category_id#29) AND (i_manufact_id#21 = i_manufact_id#30))) AND (((d_year#17 = 2002) AND (d_year#16 = (2002 - 1))) AND (cast(CheckOverflow((promote_precision(cast(cast(sales_cnt#24 as decimal(17,2)) as decimal(17,2))) / promote_precision(cast(cast(sales_cnt#22 as decimal(17,2)) as decimal(17,2)))), DecimalType(37,20), true) as decimal(37,20)) < cast(0.9 as decimal(37,20)))))
            +- Join Inner
               :- SubqueryAlias curr_yr
               :  +- SubqueryAlias all_sales
               :     +- Aggregate [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sum(cast(sales_cnt#3 as bigint)) AS sales_cnt#24, sum(sales_amt#4) AS sales_amt#2]
               :        +- SubqueryAlias sales_detail
               :           +- Distinct
               :              +- Union
               :                 :- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4]
               :                 :  +- Distinct
               :                 :     +- Union
               :                 :        :- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4]
               :                 :        :  +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
               :                 :        :     +- Filter (i_category#35 = Books)
               :                 :        :        +- Join LeftOuter, ((cs_order_number#36 = cr_order_number#37) AND (cs_item_sk#38 = cr_item_sk#39))
               :                 :        :           :- Join Inner, (d_date_sk#40 = cs_sold_date_sk#41)
               :                 :        :           :  :- Join Inner, (i_item_sk#42 = cs_item_sk#38)
               :                 :        :           :  :  :- SubqueryAlias spark_catalog.default.catalog_sales
               :                 :        :           :  :  :  +- Relation[cs_sold_date_sk#41,cs_sold_time_sk#43,cs_ship_date_sk#44,cs_bill_customer_sk#45,cs_bill_cdemo_sk#46,cs_bill_hdemo_sk#47,cs_bill_addr_sk#48,cs_ship_customer_sk#49,cs_ship_cdemo_sk#50,cs_ship_hdemo_sk#51,cs_ship_addr_sk#52,cs_call_center_sk#53,cs_catalog_page_sk#54,cs_ship_mode_sk#55,cs_warehouse_sk#56,cs_item_sk#38,cs_promo_sk#57,cs_order_number#36,cs_quantity#31,cs_wholesale_cost#58,cs_list_price#59,cs_sales_price#60,cs_ext_discount_amt#61,cs_ext_sales_price#33,cs_ext_wholesale_cost#62,cs_ext_list_price#63,cs_ext_tax#64,cs_coupon_amt#65,cs_ext_ship_cost#66,cs_net_paid#67,cs_net_paid_inc_tax#68,cs_net_paid_inc_ship#69,cs_net_paid_inc_ship_tax#70,cs_net_profit#71] parquet
               :                 :        :           :  :  +- SubqueryAlias spark_catalog.default.item
               :                 :        :           :  :     +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
               :                 :        :           :  +- SubqueryAlias spark_catalog.default.date_dim
               :                 :        :           :     +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
               :                 :        :           +- SubqueryAlias spark_catalog.default.catalog_returns
               :                 :        :              +- Relation[cr_returned_date_sk#114,cr_returned_time_sk#115,cr_item_sk#39,cr_refunded_customer_sk#116,cr_refunded_cdemo_sk#117,cr_refunded_hdemo_sk#118,cr_refunded_addr_sk#119,cr_returning_customer_sk#120,cr_returning_cdemo_sk#121,cr_returning_hdemo_sk#122,cr_returning_addr_sk#123,cr_call_center_sk#124,cr_catalog_page_sk#125,cr_ship_mode_sk#126,cr_warehouse_sk#127,cr_reason_sk#128,cr_order_number#37,cr_return_quantity#32,cr_return_amount#34,cr_return_tax#129,cr_return_amt_inc_tax#130,cr_fee#131,cr_return_ship_cost#132,cr_refunded_cash#133,cr_reversed_charge#134,cr_store_credit#135,cr_net_loss#136] parquet
               :                 :        +- Project [d_year#137, i_brand_id#138, i_class_id#139, i_category_id#140, i_manufact_id#141, sales_cnt#142, cast(sales_amt#143 as decimal(8,2)) AS sales_amt#144]
               :                 :           +- Project [d_year#17 AS d_year#137, i_brand_id#18 AS i_brand_id#138, i_class_id#19 AS i_class_id#139, i_category_id#20 AS i_category_id#140, i_manufact_id#21 AS i_manufact_id#141, sales_cnt#5 AS sales_cnt#142, sales_amt#6 AS sales_amt#143]
               :                 :              +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#5, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#6]
               :                 :                 +- Filter (i_category#35 = Books)
               :                 :                    +- Join LeftOuter, ((cast(ss_ticket_number#149 as bigint) = sr_ticket_number#150) AND (cast(ss_item_sk#151 as bigint) = sr_item_sk#152))
               :                 :                       :- Join Inner, (d_date_sk#40 = ss_sold_date_sk#153)
               :                 :                       :  :- Join Inner, (i_item_sk#42 = ss_item_sk#151)
               :                 :                       :  :  :- SubqueryAlias spark_catalog.default.store_sales
               :                 :                       :  :  :  +- Relation[ss_sold_date_sk#153,ss_sold_time_sk#154,ss_item_sk#151,ss_customer_sk#155,ss_cdemo_sk#156,ss_hdemo_sk#157,ss_addr_sk#158,ss_store_sk#159,ss_promo_sk#160,ss_ticket_number#149,ss_quantity#145,ss_wholesale_cost#161,ss_list_price#162,ss_sales_price#163,ss_ext_discount_amt#164,ss_ext_sales_price#147,ss_ext_wholesale_cost#165,ss_ext_list_price#166,ss_ext_tax#167,ss_coupon_amt#168,ss_net_paid#169,ss_net_paid_inc_tax#170,ss_net_profit#171] parquet
               :                 :                       :  :  +- SubqueryAlias spark_catalog.default.item
               :                 :                       :  :     +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
               :                 :                       :  +- SubqueryAlias spark_catalog.default.date_dim
               :                 :                       :     +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
               :                 :                       +- SubqueryAlias spark_catalog.default.store_returns
               :                 :                          +- Relation[sr_returned_date_sk#172,sr_return_time_sk#173,sr_item_sk#152,sr_customer_sk#174,sr_cdemo_sk#175,sr_hdemo_sk#176,sr_addr_sk#177,sr_store_sk#178,sr_reason_sk#179,sr_ticket_number#150,sr_return_quantity#146,sr_return_amt#148,sr_return_tax#180,sr_return_amt_inc_tax#181,sr_fee#182,sr_return_ship_cost#183,sr_refunded_cash#184,sr_reversed_charge#185,sr_store_credit#186,sr_net_loss#187] parquet
               :                 +- Project [d_year#17 AS d_year#188, i_brand_id#18 AS i_brand_id#189, i_class_id#19 AS i_class_id#190, i_category_id#20 AS i_category_id#191, i_manufact_id#21 AS i_manufact_id#192, sales_cnt#7 AS sales_cnt#193, sales_amt#194 AS sales_amt#195]
               :                    +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#7, cast(sales_amt#8 as decimal(8,2)) AS sales_amt#194]
               :                       +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#7, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#8]
               :                          +- Filter (i_category#35 = Books)
               :                             +- Join LeftOuter, ((cast(ws_order_number#200 as bigint) = wr_order_number#201) AND (cast(ws_item_sk#202 as bigint) = wr_item_sk#203))
               :                                :- Join Inner, (d_date_sk#40 = ws_sold_date_sk#204)
               :                                :  :- Join Inner, (i_item_sk#42 = ws_item_sk#202)
               :                                :  :  :- SubqueryAlias spark_catalog.default.web_sales
               :                                :  :  :  +- Relation[ws_sold_date_sk#204,ws_sold_time_sk#205,ws_ship_date_sk#206,ws_item_sk#202,ws_bill_customer_sk#207,ws_bill_cdemo_sk#208,ws_bill_hdemo_sk#209,ws_bill_addr_sk#210,ws_ship_customer_sk#211,ws_ship_cdemo_sk#212,ws_ship_hdemo_sk#213,ws_ship_addr_sk#214,ws_web_page_sk#215,ws_web_site_sk#216,ws_ship_mode_sk#217,ws_warehouse_sk#218,ws_promo_sk#219,ws_order_number#200,ws_quantity#196,ws_wholesale_cost#220,ws_list_price#221,ws_sales_price#222,ws_ext_discount_amt#223,ws_ext_sales_price#198,ws_ext_wholesale_cost#224,ws_ext_list_price#225,ws_ext_tax#226,ws_coupon_amt#227,ws_ext_ship_cost#228,ws_net_paid#229,ws_net_paid_inc_tax#230,ws_net_paid_inc_ship#231,ws_net_paid_inc_ship_tax#232,ws_net_profit#233] parquet
               :                                :  :  +- SubqueryAlias spark_catalog.default.item
               :                                :  :     +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
               :                                :  +- SubqueryAlias spark_catalog.default.date_dim
               :                                :     +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
               :                                +- SubqueryAlias spark_catalog.default.web_returns
               :                                   +- Relation[wr_returned_date_sk#234,wr_returned_time_sk#235,wr_item_sk#203,wr_refunded_customer_sk#236,wr_refunded_cdemo_sk#237,wr_refunded_hdemo_sk#238,wr_refunded_addr_sk#239,wr_returning_customer_sk#240,wr_returning_cdemo_sk#241,wr_returning_hdemo_sk#242,wr_returning_addr_sk#243,wr_web_page_sk#244,wr_reason_sk#245,wr_order_number#201,wr_return_quantity#197,wr_return_amt#199,wr_return_tax#246,wr_return_amt_inc_tax#247,wr_fee#248,wr_return_ship_cost#249,wr_refunded_cash#250,wr_reversed_charge#251,wr_account_credit#252,wr_net_loss#253] parquet
               +- SubqueryAlias prev_yr
                  +- SubqueryAlias all_sales
                     +- Aggregate [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sum(cast(sales_cnt#3 as bigint)) AS sales_cnt#22, sum(sales_amt#4) AS sales_amt#26]
                        +- SubqueryAlias sales_detail
                           +- Distinct
                              +- Union
                                 :- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4]
                                 :  +- Distinct
                                 :     +- Union
                                 :        :- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4]
                                 :        :  +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
                                 :        :     +- Filter (i_category#254 = Books)
                                 :        :        +- Join LeftOuter, ((cs_order_number#36 = cr_order_number#37) AND (cs_item_sk#38 = cr_item_sk#39))
                                 :        :           :- Join Inner, (d_date_sk#255 = cs_sold_date_sk#41)
                                 :        :           :  :- Join Inner, (i_item_sk#256 = cs_item_sk#38)
                                 :        :           :  :  :- SubqueryAlias spark_catalog.default.catalog_sales
                                 :        :           :  :  :  +- Relation[cs_sold_date_sk#41,cs_sold_time_sk#43,cs_ship_date_sk#44,cs_bill_customer_sk#45,cs_bill_cdemo_sk#46,cs_bill_hdemo_sk#47,cs_bill_addr_sk#48,cs_ship_customer_sk#49,cs_ship_cdemo_sk#50,cs_ship_hdemo_sk#51,cs_ship_addr_sk#52,cs_call_center_sk#53,cs_catalog_page_sk#54,cs_ship_mode_sk#55,cs_warehouse_sk#56,cs_item_sk#38,cs_promo_sk#57,cs_order_number#36,cs_quantity#31,cs_wholesale_cost#58,cs_list_price#59,cs_sales_price#60,cs_ext_discount_amt#61,cs_ext_sales_price#33,cs_ext_wholesale_cost#62,cs_ext_list_price#63,cs_ext_tax#64,cs_coupon_amt#65,cs_ext_ship_cost#66,cs_net_paid#67,cs_net_paid_inc_tax#68,cs_net_paid_inc_ship#69,cs_net_paid_inc_ship_tax#70,cs_net_profit#71] parquet
                                 :        :           :  :  +- SubqueryAlias spark_catalog.default.item
                                 :        :           :  :     +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                                 :        :           :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :        :           :     +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                                 :        :           +- SubqueryAlias spark_catalog.default.catalog_returns
                                 :        :              +- Relation[cr_returned_date_sk#114,cr_returned_time_sk#115,cr_item_sk#39,cr_refunded_customer_sk#116,cr_refunded_cdemo_sk#117,cr_refunded_hdemo_sk#118,cr_refunded_addr_sk#119,cr_returning_customer_sk#120,cr_returning_cdemo_sk#121,cr_returning_hdemo_sk#122,cr_returning_addr_sk#123,cr_call_center_sk#124,cr_catalog_page_sk#125,cr_ship_mode_sk#126,cr_warehouse_sk#127,cr_reason_sk#128,cr_order_number#37,cr_return_quantity#32,cr_return_amount#34,cr_return_tax#129,cr_return_amt_inc_tax#130,cr_fee#131,cr_return_ship_cost#132,cr_refunded_cash#133,cr_reversed_charge#134,cr_store_credit#135,cr_net_loss#136] parquet
                                 :        +- Project [d_year#299, i_brand_id#300, i_class_id#301, i_category_id#302, i_manufact_id#303, sales_cnt#304, cast(sales_amt#305 as decimal(8,2)) AS sales_amt#306]
                                 :           +- Project [d_year#16 AS d_year#299, i_brand_id#27 AS i_brand_id#300, i_class_id#28 AS i_class_id#301, i_category_id#29 AS i_category_id#302, i_manufact_id#30 AS i_manufact_id#303, sales_cnt#5 AS sales_cnt#304, sales_amt#6 AS sales_amt#305]
                                 :              +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#5, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#6]
                                 :                 +- Filter (i_category#254 = Books)
                                 :                    +- Join LeftOuter, ((cast(ss_ticket_number#149 as bigint) = sr_ticket_number#150) AND (cast(ss_item_sk#151 as bigint) = sr_item_sk#152))
                                 :                       :- Join Inner, (d_date_sk#255 = ss_sold_date_sk#153)
                                 :                       :  :- Join Inner, (i_item_sk#256 = ss_item_sk#151)
                                 :                       :  :  :- SubqueryAlias spark_catalog.default.store_sales
                                 :                       :  :  :  +- Relation[ss_sold_date_sk#153,ss_sold_time_sk#154,ss_item_sk#151,ss_customer_sk#155,ss_cdemo_sk#156,ss_hdemo_sk#157,ss_addr_sk#158,ss_store_sk#159,ss_promo_sk#160,ss_ticket_number#149,ss_quantity#145,ss_wholesale_cost#161,ss_list_price#162,ss_sales_price#163,ss_ext_discount_amt#164,ss_ext_sales_price#147,ss_ext_wholesale_cost#165,ss_ext_list_price#166,ss_ext_tax#167,ss_coupon_amt#168,ss_net_paid#169,ss_net_paid_inc_tax#170,ss_net_profit#171] parquet
                                 :                       :  :  +- SubqueryAlias spark_catalog.default.item
                                 :                       :  :     +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                                 :                       :  +- SubqueryAlias spark_catalog.default.date_dim
                                 :                       :     +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                                 :                       +- SubqueryAlias spark_catalog.default.store_returns
                                 :                          +- Relation[sr_returned_date_sk#172,sr_return_time_sk#173,sr_item_sk#152,sr_customer_sk#174,sr_cdemo_sk#175,sr_hdemo_sk#176,sr_addr_sk#177,sr_store_sk#178,sr_reason_sk#179,sr_ticket_number#150,sr_return_quantity#146,sr_return_amt#148,sr_return_tax#180,sr_return_amt_inc_tax#181,sr_fee#182,sr_return_ship_cost#183,sr_refunded_cash#184,sr_reversed_charge#185,sr_store_credit#186,sr_net_loss#187] parquet
                                 +- Project [d_year#16 AS d_year#307, i_brand_id#27 AS i_brand_id#308, i_class_id#28 AS i_class_id#309, i_category_id#29 AS i_category_id#310, i_manufact_id#30 AS i_manufact_id#311, sales_cnt#7 AS sales_cnt#312, sales_amt#313 AS sales_amt#314]
                                    +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#7, cast(sales_amt#8 as decimal(8,2)) AS sales_amt#313]
                                       +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#7, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, cast(0.0 as decimal(7,2))) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#8]
                                          +- Filter (i_category#254 = Books)
                                             +- Join LeftOuter, ((cast(ws_order_number#200 as bigint) = wr_order_number#201) AND (cast(ws_item_sk#202 as bigint) = wr_item_sk#203))
                                                :- Join Inner, (d_date_sk#255 = ws_sold_date_sk#204)
                                                :  :- Join Inner, (i_item_sk#256 = ws_item_sk#202)
                                                :  :  :- SubqueryAlias spark_catalog.default.web_sales
                                                :  :  :  +- Relation[ws_sold_date_sk#204,ws_sold_time_sk#205,ws_ship_date_sk#206,ws_item_sk#202,ws_bill_customer_sk#207,ws_bill_cdemo_sk#208,ws_bill_hdemo_sk#209,ws_bill_addr_sk#210,ws_ship_customer_sk#211,ws_ship_cdemo_sk#212,ws_ship_hdemo_sk#213,ws_ship_addr_sk#214,ws_web_page_sk#215,ws_web_site_sk#216,ws_ship_mode_sk#217,ws_warehouse_sk#218,ws_promo_sk#219,ws_order_number#200,ws_quantity#196,ws_wholesale_cost#220,ws_list_price#221,ws_sales_price#222,ws_ext_discount_amt#223,ws_ext_sales_price#198,ws_ext_wholesale_cost#224,ws_ext_list_price#225,ws_ext_tax#226,ws_coupon_amt#227,ws_ext_ship_cost#228,ws_net_paid#229,ws_net_paid_inc_tax#230,ws_net_paid_inc_ship#231,ws_net_paid_inc_ship_tax#232,ws_net_profit#233] parquet
                                                :  :  +- SubqueryAlias spark_catalog.default.item
                                                :  :     +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                                                :  +- SubqueryAlias spark_catalog.default.date_dim
                                                :     +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                                                +- SubqueryAlias spark_catalog.default.web_returns
                                                   +- Relation[wr_returned_date_sk#234,wr_returned_time_sk#235,wr_item_sk#203,wr_refunded_customer_sk#236,wr_refunded_cdemo_sk#237,wr_refunded_hdemo_sk#238,wr_refunded_addr_sk#239,wr_returning_customer_sk#240,wr_returning_cdemo_sk#241,wr_returning_hdemo_sk#242,wr_returning_addr_sk#243,wr_web_page_sk#244,wr_reason_sk#245,wr_order_number#201,wr_return_quantity#197,wr_return_amt#199,wr_return_tax#246,wr_return_amt_inc_tax#247,wr_fee#248,wr_return_ship_cost#249,wr_refunded_cash#250,wr_reversed_charge#251,wr_account_credit#252,wr_net_loss#253] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [sales_cnt_diff#15 ASC NULLS FIRST], true
      +- Project [d_year#16 AS prev_year#9, d_year#17 AS year#10, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#22 AS prev_yr_cnt#23, sales_cnt#24 AS curr_yr_cnt#25, (sales_cnt#24 - sales_cnt#22) AS sales_cnt_diff#15, CheckOverflow((promote_precision(cast(sales_amt#2 as decimal(19,2))) - promote_precision(cast(sales_amt#26 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#14]
         +- Join Inner, (((((i_brand_id#18 = i_brand_id#27) AND (i_class_id#19 = i_class_id#28)) AND (i_category_id#20 = i_category_id#29)) AND (i_manufact_id#21 = i_manufact_id#30)) AND (CheckOverflow((promote_precision(cast(sales_cnt#24 as decimal(17,2))) / promote_precision(cast(sales_cnt#22 as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000))
            :- Aggregate [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sum(cast(sales_cnt#3 as bigint)) AS sales_cnt#24, MakeDecimal(sum(UnscaledValue(sales_amt#4)),18,2) AS sales_amt#2]
            :  +- Aggregate [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4]
            :     +- Union
            :        :- Aggregate [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4]
            :        :  +- Union
            :        :     :- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
            :        :     :  +- Join LeftOuter, ((cs_order_number#36 = cr_order_number#37) AND (cs_item_sk#38 = cr_item_sk#39))
            :        :     :     :- Project [cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
            :        :     :     :  +- Join Inner, (d_date_sk#40 = cs_sold_date_sk#41)
            :        :     :     :     :- Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :        :     :     :     :  +- Join Inner, (i_item_sk#42 = cs_item_sk#38)
            :        :     :     :     :     :- Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33]
            :        :     :     :     :     :  +- Filter (isnotnull(cs_item_sk#38) AND isnotnull(cs_sold_date_sk#41))
            :        :     :     :     :     :     +- Relation[cs_sold_date_sk#41,cs_sold_time_sk#43,cs_ship_date_sk#44,cs_bill_customer_sk#45,cs_bill_cdemo_sk#46,cs_bill_hdemo_sk#47,cs_bill_addr_sk#48,cs_ship_customer_sk#49,cs_ship_cdemo_sk#50,cs_ship_hdemo_sk#51,cs_ship_addr_sk#52,cs_call_center_sk#53,cs_catalog_page_sk#54,cs_ship_mode_sk#55,cs_warehouse_sk#56,cs_item_sk#38,cs_promo_sk#57,cs_order_number#36,cs_quantity#31,cs_wholesale_cost#58,cs_list_price#59,cs_sales_price#60,cs_ext_discount_amt#61,cs_ext_sales_price#33,cs_ext_wholesale_cost#62,cs_ext_list_price#63,cs_ext_tax#64,cs_coupon_amt#65,cs_ext_ship_cost#66,cs_net_paid#67,cs_net_paid_inc_tax#68,cs_net_paid_inc_ship#69,cs_net_paid_inc_ship_tax#70,cs_net_profit#71] parquet
            :        :     :     :     :     +- Project [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :        :     :     :     :        +- Filter ((((((isnotnull(i_category#35) AND (i_category#35 = Books)) AND isnotnull(i_item_sk#42)) AND isnotnull(i_manufact_id#21)) AND isnotnull(i_category_id#20)) AND isnotnull(i_brand_id#18)) AND isnotnull(i_class_id#19))
            :        :     :     :     :           +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
            :        :     :     :     +- Project [d_date_sk#40, d_year#17]
            :        :     :     :        +- Filter ((isnotnull(d_year#17) AND (d_year#17 = 2002)) AND isnotnull(d_date_sk#40))
            :        :     :     :           +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
            :        :     :     +- Project [cr_item_sk#39, cr_order_number#37, cr_return_quantity#32, cr_return_amount#34]
            :        :     :        +- Filter (isnotnull(cr_order_number#37) AND isnotnull(cr_item_sk#39))
            :        :     :           +- Relation[cr_returned_date_sk#114,cr_returned_time_sk#115,cr_item_sk#39,cr_refunded_customer_sk#116,cr_refunded_cdemo_sk#117,cr_refunded_hdemo_sk#118,cr_refunded_addr_sk#119,cr_returning_customer_sk#120,cr_returning_cdemo_sk#121,cr_returning_hdemo_sk#122,cr_returning_addr_sk#123,cr_call_center_sk#124,cr_catalog_page_sk#125,cr_ship_mode_sk#126,cr_warehouse_sk#127,cr_reason_sk#128,cr_order_number#37,cr_return_quantity#32,cr_return_amount#34,cr_return_tax#129,cr_return_amt_inc_tax#130,cr_fee#131,cr_return_ship_cost#132,cr_refunded_cash#133,cr_reversed_charge#134,cr_store_credit#135,cr_net_loss#136] parquet
            :        :     +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#142, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#144]
            :        :        +- Join LeftOuter, ((cast(ss_ticket_number#149 as bigint) = sr_ticket_number#150) AND (cast(ss_item_sk#151 as bigint) = sr_item_sk#152))
            :        :           :- Project [ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
            :        :           :  +- Join Inner, (d_date_sk#40 = ss_sold_date_sk#153)
            :        :           :     :- Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :        :           :     :  +- Join Inner, (i_item_sk#42 = ss_item_sk#151)
            :        :           :     :     :- Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147]
            :        :           :     :     :  +- Filter (isnotnull(ss_item_sk#151) AND isnotnull(ss_sold_date_sk#153))
            :        :           :     :     :     +- Relation[ss_sold_date_sk#153,ss_sold_time_sk#154,ss_item_sk#151,ss_customer_sk#155,ss_cdemo_sk#156,ss_hdemo_sk#157,ss_addr_sk#158,ss_store_sk#159,ss_promo_sk#160,ss_ticket_number#149,ss_quantity#145,ss_wholesale_cost#161,ss_list_price#162,ss_sales_price#163,ss_ext_discount_amt#164,ss_ext_sales_price#147,ss_ext_wholesale_cost#165,ss_ext_list_price#166,ss_ext_tax#167,ss_coupon_amt#168,ss_net_paid#169,ss_net_paid_inc_tax#170,ss_net_profit#171] parquet
            :        :           :     :     +- Project [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :        :           :     :        +- Filter ((((((isnotnull(i_category#35) AND (i_category#35 = Books)) AND isnotnull(i_item_sk#42)) AND isnotnull(i_manufact_id#21)) AND isnotnull(i_category_id#20)) AND isnotnull(i_brand_id#18)) AND isnotnull(i_class_id#19))
            :        :           :     :           +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
            :        :           :     +- Project [d_date_sk#40, d_year#17]
            :        :           :        +- Filter ((isnotnull(d_year#17) AND (d_year#17 = 2002)) AND isnotnull(d_date_sk#40))
            :        :           :           +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
            :        :           +- Project [sr_item_sk#152, sr_ticket_number#150, sr_return_quantity#146, sr_return_amt#148]
            :        :              +- Filter (isnotnull(sr_ticket_number#150) AND isnotnull(sr_item_sk#152))
            :        :                 +- Relation[sr_returned_date_sk#172,sr_return_time_sk#173,sr_item_sk#152,sr_customer_sk#174,sr_cdemo_sk#175,sr_hdemo_sk#176,sr_addr_sk#177,sr_store_sk#178,sr_reason_sk#179,sr_ticket_number#150,sr_return_quantity#146,sr_return_amt#148,sr_return_tax#180,sr_return_amt_inc_tax#181,sr_fee#182,sr_return_ship_cost#183,sr_refunded_cash#184,sr_reversed_charge#185,sr_store_credit#186,sr_net_loss#187] parquet
            :        +- Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#193, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#195]
            :           +- Join LeftOuter, ((cast(ws_order_number#200 as bigint) = wr_order_number#201) AND (cast(ws_item_sk#202 as bigint) = wr_item_sk#203))
            :              :- Project [ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
            :              :  +- Join Inner, (d_date_sk#40 = ws_sold_date_sk#204)
            :              :     :- Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :              :     :  +- Join Inner, (i_item_sk#42 = ws_item_sk#202)
            :              :     :     :- Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198]
            :              :     :     :  +- Filter (isnotnull(ws_item_sk#202) AND isnotnull(ws_sold_date_sk#204))
            :              :     :     :     +- Relation[ws_sold_date_sk#204,ws_sold_time_sk#205,ws_ship_date_sk#206,ws_item_sk#202,ws_bill_customer_sk#207,ws_bill_cdemo_sk#208,ws_bill_hdemo_sk#209,ws_bill_addr_sk#210,ws_ship_customer_sk#211,ws_ship_cdemo_sk#212,ws_ship_hdemo_sk#213,ws_ship_addr_sk#214,ws_web_page_sk#215,ws_web_site_sk#216,ws_ship_mode_sk#217,ws_warehouse_sk#218,ws_promo_sk#219,ws_order_number#200,ws_quantity#196,ws_wholesale_cost#220,ws_list_price#221,ws_sales_price#222,ws_ext_discount_amt#223,ws_ext_sales_price#198,ws_ext_wholesale_cost#224,ws_ext_list_price#225,ws_ext_tax#226,ws_coupon_amt#227,ws_ext_ship_cost#228,ws_net_paid#229,ws_net_paid_inc_tax#230,ws_net_paid_inc_ship#231,ws_net_paid_inc_ship_tax#232,ws_net_profit#233] parquet
            :              :     :     +- Project [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
            :              :     :        +- Filter ((((((isnotnull(i_category#35) AND (i_category#35 = Books)) AND isnotnull(i_item_sk#42)) AND isnotnull(i_manufact_id#21)) AND isnotnull(i_category_id#20)) AND isnotnull(i_brand_id#18)) AND isnotnull(i_class_id#19))
            :              :     :           +- Relation[i_item_sk#42,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#18,i_brand#78,i_class_id#19,i_class#79,i_category_id#20,i_category#35,i_manufact_id#21,i_manufact#80,i_size#81,i_formulation#82,i_color#83,i_units#84,i_container#85,i_manager_id#86,i_product_name#87] parquet
            :              :     +- Project [d_date_sk#40, d_year#17]
            :              :        +- Filter ((isnotnull(d_year#17) AND (d_year#17 = 2002)) AND isnotnull(d_date_sk#40))
            :              :           +- Relation[d_date_sk#40,d_date_id#88,d_date#89,d_month_seq#90,d_week_seq#91,d_quarter_seq#92,d_year#17,d_dow#93,d_moy#94,d_dom#95,d_qoy#96,d_fy_year#97,d_fy_quarter_seq#98,d_fy_week_seq#99,d_day_name#100,d_quarter_name#101,d_holiday#102,d_weekend#103,d_following_holiday#104,d_first_dom#105,d_last_dom#106,d_same_day_ly#107,d_same_day_lq#108,d_current_day#109,d_current_week#110,d_current_month#111,d_current_quarter#112,d_current_year#113] parquet
            :              +- Project [wr_item_sk#203, wr_order_number#201, wr_return_quantity#197, wr_return_amt#199]
            :                 +- Filter (isnotnull(wr_order_number#201) AND isnotnull(wr_item_sk#203))
            :                    +- Relation[wr_returned_date_sk#234,wr_returned_time_sk#235,wr_item_sk#203,wr_refunded_customer_sk#236,wr_refunded_cdemo_sk#237,wr_refunded_hdemo_sk#238,wr_refunded_addr_sk#239,wr_returning_customer_sk#240,wr_returning_cdemo_sk#241,wr_returning_hdemo_sk#242,wr_returning_addr_sk#243,wr_web_page_sk#244,wr_reason_sk#245,wr_order_number#201,wr_return_quantity#197,wr_return_amt#199,wr_return_tax#246,wr_return_amt_inc_tax#247,wr_fee#248,wr_return_ship_cost#249,wr_refunded_cash#250,wr_reversed_charge#251,wr_account_credit#252,wr_net_loss#253] parquet
            +- Aggregate [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sum(cast(sales_cnt#3 as bigint)) AS sales_cnt#22, MakeDecimal(sum(UnscaledValue(sales_amt#4)),18,2) AS sales_amt#26]
               +- Aggregate [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4]
                  +- Union
                     :- Aggregate [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4]
                     :  +- Union
                     :     :- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
                     :     :  +- Join LeftOuter, ((cs_order_number#36 = cr_order_number#37) AND (cs_item_sk#38 = cr_item_sk#39))
                     :     :     :- Project [cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                     :     :     :  +- Join Inner, (d_date_sk#255 = cs_sold_date_sk#41)
                     :     :     :     :- Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                     :     :     :     :  +- Join Inner, (i_item_sk#256 = cs_item_sk#38)
                     :     :     :     :     :- Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33]
                     :     :     :     :     :  +- Filter (isnotnull(cs_item_sk#38) AND isnotnull(cs_sold_date_sk#41))
                     :     :     :     :     :     +- Relation[cs_sold_date_sk#41,cs_sold_time_sk#43,cs_ship_date_sk#44,cs_bill_customer_sk#45,cs_bill_cdemo_sk#46,cs_bill_hdemo_sk#47,cs_bill_addr_sk#48,cs_ship_customer_sk#49,cs_ship_cdemo_sk#50,cs_ship_hdemo_sk#51,cs_ship_addr_sk#52,cs_call_center_sk#53,cs_catalog_page_sk#54,cs_ship_mode_sk#55,cs_warehouse_sk#56,cs_item_sk#38,cs_promo_sk#57,cs_order_number#36,cs_quantity#31,cs_wholesale_cost#58,cs_list_price#59,cs_sales_price#60,cs_ext_discount_amt#61,cs_ext_sales_price#33,cs_ext_wholesale_cost#62,cs_ext_list_price#63,cs_ext_tax#64,cs_coupon_amt#65,cs_ext_ship_cost#66,cs_net_paid#67,cs_net_paid_inc_tax#68,cs_net_paid_inc_ship#69,cs_net_paid_inc_ship_tax#70,cs_net_profit#71] parquet
                     :     :     :     :     +- Project [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                     :     :     :     :        +- Filter ((((((isnotnull(i_category#254) AND (i_category#254 = Books)) AND isnotnull(i_item_sk#256)) AND isnotnull(i_manufact_id#30)) AND isnotnull(i_class_id#28)) AND isnotnull(i_brand_id#27)) AND isnotnull(i_category_id#29))
                     :     :     :     :           +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                     :     :     :     +- Project [d_date_sk#255, d_year#16]
                     :     :     :        +- Filter ((isnotnull(d_year#16) AND (d_year#16 = 2001)) AND isnotnull(d_date_sk#255))
                     :     :     :           +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                     :     :     +- Project [cr_item_sk#39, cr_order_number#37, cr_return_quantity#32, cr_return_amount#34]
                     :     :        +- Filter (isnotnull(cr_order_number#37) AND isnotnull(cr_item_sk#39))
                     :     :           +- Relation[cr_returned_date_sk#114,cr_returned_time_sk#115,cr_item_sk#39,cr_refunded_customer_sk#116,cr_refunded_cdemo_sk#117,cr_refunded_hdemo_sk#118,cr_refunded_addr_sk#119,cr_returning_customer_sk#120,cr_returning_cdemo_sk#121,cr_returning_hdemo_sk#122,cr_returning_addr_sk#123,cr_call_center_sk#124,cr_catalog_page_sk#125,cr_ship_mode_sk#126,cr_warehouse_sk#127,cr_reason_sk#128,cr_order_number#37,cr_return_quantity#32,cr_return_amount#34,cr_return_tax#129,cr_return_amt_inc_tax#130,cr_fee#131,cr_return_ship_cost#132,cr_refunded_cash#133,cr_reversed_charge#134,cr_store_credit#135,cr_net_loss#136] parquet
                     :     +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#304, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#306]
                     :        +- Join LeftOuter, ((cast(ss_ticket_number#149 as bigint) = sr_ticket_number#150) AND (cast(ss_item_sk#151 as bigint) = sr_item_sk#152))
                     :           :- Project [ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                     :           :  +- Join Inner, (d_date_sk#255 = ss_sold_date_sk#153)
                     :           :     :- Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                     :           :     :  +- Join Inner, (i_item_sk#256 = ss_item_sk#151)
                     :           :     :     :- Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147]
                     :           :     :     :  +- Filter (isnotnull(ss_item_sk#151) AND isnotnull(ss_sold_date_sk#153))
                     :           :     :     :     +- Relation[ss_sold_date_sk#153,ss_sold_time_sk#154,ss_item_sk#151,ss_customer_sk#155,ss_cdemo_sk#156,ss_hdemo_sk#157,ss_addr_sk#158,ss_store_sk#159,ss_promo_sk#160,ss_ticket_number#149,ss_quantity#145,ss_wholesale_cost#161,ss_list_price#162,ss_sales_price#163,ss_ext_discount_amt#164,ss_ext_sales_price#147,ss_ext_wholesale_cost#165,ss_ext_list_price#166,ss_ext_tax#167,ss_coupon_amt#168,ss_net_paid#169,ss_net_paid_inc_tax#170,ss_net_profit#171] parquet
                     :           :     :     +- Project [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                     :           :     :        +- Filter ((((((isnotnull(i_category#254) AND (i_category#254 = Books)) AND isnotnull(i_item_sk#256)) AND isnotnull(i_manufact_id#30)) AND isnotnull(i_class_id#28)) AND isnotnull(i_brand_id#27)) AND isnotnull(i_category_id#29))
                     :           :     :           +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                     :           :     +- Project [d_date_sk#255, d_year#16]
                     :           :        +- Filter ((isnotnull(d_year#16) AND (d_year#16 = 2001)) AND isnotnull(d_date_sk#255))
                     :           :           +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                     :           +- Project [sr_item_sk#152, sr_ticket_number#150, sr_return_quantity#146, sr_return_amt#148]
                     :              +- Filter (isnotnull(sr_ticket_number#150) AND isnotnull(sr_item_sk#152))
                     :                 +- Relation[sr_returned_date_sk#172,sr_return_time_sk#173,sr_item_sk#152,sr_customer_sk#174,sr_cdemo_sk#175,sr_hdemo_sk#176,sr_addr_sk#177,sr_store_sk#178,sr_reason_sk#179,sr_ticket_number#150,sr_return_quantity#146,sr_return_amt#148,sr_return_tax#180,sr_return_amt_inc_tax#181,sr_fee#182,sr_return_ship_cost#183,sr_refunded_cash#184,sr_reversed_charge#185,sr_store_credit#186,sr_net_loss#187] parquet
                     +- Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#312, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#314]
                        +- Join LeftOuter, ((cast(ws_order_number#200 as bigint) = wr_order_number#201) AND (cast(ws_item_sk#202 as bigint) = wr_item_sk#203))
                           :- Project [ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                           :  +- Join Inner, (d_date_sk#255 = ws_sold_date_sk#204)
                           :     :- Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                           :     :  +- Join Inner, (i_item_sk#256 = ws_item_sk#202)
                           :     :     :- Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198]
                           :     :     :  +- Filter (isnotnull(ws_item_sk#202) AND isnotnull(ws_sold_date_sk#204))
                           :     :     :     +- Relation[ws_sold_date_sk#204,ws_sold_time_sk#205,ws_ship_date_sk#206,ws_item_sk#202,ws_bill_customer_sk#207,ws_bill_cdemo_sk#208,ws_bill_hdemo_sk#209,ws_bill_addr_sk#210,ws_ship_customer_sk#211,ws_ship_cdemo_sk#212,ws_ship_hdemo_sk#213,ws_ship_addr_sk#214,ws_web_page_sk#215,ws_web_site_sk#216,ws_ship_mode_sk#217,ws_warehouse_sk#218,ws_promo_sk#219,ws_order_number#200,ws_quantity#196,ws_wholesale_cost#220,ws_list_price#221,ws_sales_price#222,ws_ext_discount_amt#223,ws_ext_sales_price#198,ws_ext_wholesale_cost#224,ws_ext_list_price#225,ws_ext_tax#226,ws_coupon_amt#227,ws_ext_ship_cost#228,ws_net_paid#229,ws_net_paid_inc_tax#230,ws_net_paid_inc_ship#231,ws_net_paid_inc_ship_tax#232,ws_net_profit#233] parquet
                           :     :     +- Project [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                           :     :        +- Filter ((((((isnotnull(i_category#254) AND (i_category#254 = Books)) AND isnotnull(i_item_sk#256)) AND isnotnull(i_manufact_id#30)) AND isnotnull(i_class_id#28)) AND isnotnull(i_brand_id#27)) AND isnotnull(i_category_id#29))
                           :     :           +- Relation[i_item_sk#256,i_item_id#257,i_rec_start_date#258,i_rec_end_date#259,i_item_desc#260,i_current_price#261,i_wholesale_cost#262,i_brand_id#27,i_brand#263,i_class_id#28,i_class#264,i_category_id#29,i_category#254,i_manufact_id#30,i_manufact#265,i_size#266,i_formulation#267,i_color#268,i_units#269,i_container#270,i_manager_id#271,i_product_name#272] parquet
                           :     +- Project [d_date_sk#255, d_year#16]
                           :        +- Filter ((isnotnull(d_year#16) AND (d_year#16 = 2001)) AND isnotnull(d_date_sk#255))
                           :           +- Relation[d_date_sk#255,d_date_id#273,d_date#274,d_month_seq#275,d_week_seq#276,d_quarter_seq#277,d_year#16,d_dow#278,d_moy#279,d_dom#280,d_qoy#281,d_fy_year#282,d_fy_quarter_seq#283,d_fy_week_seq#284,d_day_name#285,d_quarter_name#286,d_holiday#287,d_weekend#288,d_following_holiday#289,d_first_dom#290,d_last_dom#291,d_same_day_ly#292,d_same_day_lq#293,d_current_day#294,d_current_week#295,d_current_month#296,d_current_quarter#297,d_current_year#298] parquet
                           +- Project [wr_item_sk#203, wr_order_number#201, wr_return_quantity#197, wr_return_amt#199]
                              +- Filter (isnotnull(wr_order_number#201) AND isnotnull(wr_item_sk#203))
                                 +- Relation[wr_returned_date_sk#234,wr_returned_time_sk#235,wr_item_sk#203,wr_refunded_customer_sk#236,wr_refunded_cdemo_sk#237,wr_refunded_hdemo_sk#238,wr_refunded_addr_sk#239,wr_returning_customer_sk#240,wr_returning_cdemo_sk#241,wr_returning_hdemo_sk#242,wr_returning_addr_sk#243,wr_web_page_sk#244,wr_reason_sk#245,wr_order_number#201,wr_return_quantity#197,wr_return_amt#199,wr_return_tax#246,wr_return_amt_inc_tax#247,wr_fee#248,wr_return_ship_cost#249,wr_refunded_cash#250,wr_reversed_charge#251,wr_account_credit#252,wr_net_loss#253] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#15 ASC NULLS FIRST], output=[prev_year#9,year#10,i_brand_id#18,i_class_id#19,i_category_id#20,i_manufact_id#21,prev_yr_cnt#23,curr_yr_cnt#25,sales_cnt_diff#15,sales_amt_diff#14])
+- *(34) Project [d_year#16 AS prev_year#9, d_year#17 AS year#10, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#22 AS prev_yr_cnt#23, sales_cnt#24 AS curr_yr_cnt#25, (sales_cnt#24 - sales_cnt#22) AS sales_cnt_diff#15, CheckOverflow((promote_precision(cast(sales_amt#2 as decimal(19,2))) - promote_precision(cast(sales_amt#26 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#14]
   +- *(34) BroadcastHashJoin [i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], [i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], Inner, BuildRight, (CheckOverflow((promote_precision(cast(sales_cnt#24 as decimal(17,2))) / promote_precision(cast(sales_cnt#22 as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
      :- *(34) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], functions=[sum(cast(sales_cnt#3 as bigint)), sum(UnscaledValue(sales_amt#4))], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#24, sales_amt#2])
      :  +- Exchange hashpartitioning(d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, 5), true, [id=#315]
      :     +- *(16) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], functions=[partial_sum(cast(sales_cnt#3 as bigint)), partial_sum(UnscaledValue(sales_amt#4))], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sum#316, sum#317])
      :        +- *(16) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4])
      :           +- Exchange hashpartitioning(d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4, 5), true, [id=#318]
      :              +- *(15) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4])
      :                 +- Union
      :                    :- *(10) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4])
      :                    :  +- Exchange hashpartitioning(d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4, 5), true, [id=#319]
      :                    :     +- *(9) HashAggregate(keys=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, sales_cnt#3, sales_amt#4])
      :                    :        +- Union
      :                    :           :- *(4) Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
      :                    :           :  +- *(4) BroadcastHashJoin [cs_order_number#36, cs_item_sk#38], [cr_order_number#37, cr_item_sk#39], LeftOuter, BuildRight
      :                    :           :     :- *(4) Project [cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
      :                    :           :     :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#41], [d_date_sk#40], Inner, BuildRight
      :                    :           :     :     :- *(4) Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
      :                    :           :     :     :  +- *(4) BroadcastHashJoin [cs_item_sk#38], [i_item_sk#42], Inner, BuildRight
      :                    :           :     :     :     :- *(4) Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33]
      :                    :           :     :     :     :  +- *(4) Filter (isnotnull(cs_item_sk#38) AND isnotnull(cs_sold_date_sk#41))
      :                    :           :     :     :     :     +- *(4) ColumnarToRow
      :                    :           :     :     :     :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#41,cs_item_sk#38,cs_order_number#36,cs_quantity#31,cs_ext_sales_price#33] Batched: true, DataFilters: [isnotnull(cs_item_sk#38), isnotnull(cs_sold_date_sk#41)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:int,cs_quantity:int,cs_ext_sales_price:...
      :                    :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
      :                    :           :     :     :        +- *(1) Project [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
      :                    :           :     :     :           +- *(1) Filter ((((((isnotnull(i_category#35) AND (i_category#35 = Books)) AND isnotnull(i_item_sk#42)) AND isnotnull(i_manufact_id#21)) AND isnotnull(i_category_id#20)) AND isnotnull(i_brand_id#18)) AND isnotnull(i_class_id#19))
      :                    :           :     :     :              +- *(1) ColumnarToRow
      :                    :           :     :     :                 +- FileScan parquet default.item[i_item_sk#42,i_brand_id#18,i_class_id#19,i_category_id#20,i_category#35,i_manufact_id#21] Batched: true, DataFilters: [isnotnull(i_category#35), (i_category#35 = Books), isnotnull(i_item_sk#42), isnotnull(i_manuf..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books), IsNotNull(i_item_sk), IsNotNull(i_manufact_id)..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
      :                    :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#321]
      :                    :           :     :        +- *(2) Project [d_date_sk#40, d_year#17]
      :                    :           :     :           +- *(2) Filter ((isnotnull(d_year#17) AND (d_year#17 = 2002)) AND isnotnull(d_date_sk#40))
      :                    :           :     :              +- *(2) ColumnarToRow
      :                    :           :     :                 +- FileScan parquet default.date_dim[d_date_sk#40,d_year#17] Batched: true, DataFilters: [isnotnull(d_year#17), (d_year#17 = 2002), isnotnull(d_date_sk#40)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :                    :           :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#322]
      :                    :           :        +- *(3) Project [cr_item_sk#39, cr_order_number#37, cr_return_quantity#32, cr_return_amount#34]
      :                    :           :           +- *(3) Filter (isnotnull(cr_order_number#37) AND isnotnull(cr_item_sk#39))
      :                    :           :              +- *(3) ColumnarToRow
      :                    :           :                 +- FileScan parquet default.catalog_returns[cr_item_sk#39,cr_order_number#37,cr_return_quantity#32,cr_return_amount#34] Batched: true, DataFilters: [isnotnull(cr_order_number#37), isnotnull(cr_item_sk#39)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
      :                    :           +- *(8) Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#142, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#144]
      :                    :              +- *(8) BroadcastHashJoin [cast(ss_ticket_number#149 as bigint), cast(ss_item_sk#151 as bigint)], [sr_ticket_number#150, sr_item_sk#152], LeftOuter, BuildRight
      :                    :                 :- *(8) Project [ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
      :                    :                 :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#153], [d_date_sk#40], Inner, BuildRight
      :                    :                 :     :- *(8) Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
      :                    :                 :     :  +- *(8) BroadcastHashJoin [ss_item_sk#151], [i_item_sk#42], Inner, BuildRight
      :                    :                 :     :     :- *(8) Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147]
      :                    :                 :     :     :  +- *(8) Filter (isnotnull(ss_item_sk#151) AND isnotnull(ss_sold_date_sk#153))
      :                    :                 :     :     :     +- *(8) ColumnarToRow
      :                    :                 :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#153,ss_item_sk#151,ss_ticket_number#149,ss_quantity#145,ss_ext_sales_price#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#151), isnotnull(ss_sold_date_sk#153)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:int,ss_quantity:int,ss_ext_sales_price...
      :                    :                 :     :     +- ReusedExchange [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
      :                    :                 :     +- ReusedExchange [d_date_sk#40, d_year#17], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#321]
      :                    :                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true])), [id=#323]
      :                    :                    +- *(7) Project [sr_item_sk#152, sr_ticket_number#150, sr_return_quantity#146, sr_return_amt#148]
      :                    :                       +- *(7) Filter (isnotnull(sr_ticket_number#150) AND isnotnull(sr_item_sk#152))
      :                    :                          +- *(7) ColumnarToRow
      :                    :                             +- FileScan parquet default.store_returns[sr_item_sk#152,sr_ticket_number#150,sr_return_quantity#146,sr_return_amt#148] Batched: true, DataFilters: [isnotnull(sr_ticket_number#150), isnotnull(sr_item_sk#152)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:bigint,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
      :                    +- *(14) Project [d_year#17, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#193, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#195]
      :                       +- *(14) BroadcastHashJoin [cast(ws_order_number#200 as bigint), cast(ws_item_sk#202 as bigint)], [wr_order_number#201, wr_item_sk#203], LeftOuter, BuildRight
      :                          :- *(14) Project [ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21, d_year#17]
      :                          :  +- *(14) BroadcastHashJoin [ws_sold_date_sk#204], [d_date_sk#40], Inner, BuildRight
      :                          :     :- *(14) Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21]
      :                          :     :  +- *(14) BroadcastHashJoin [ws_item_sk#202], [i_item_sk#42], Inner, BuildRight
      :                          :     :     :- *(14) Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198]
      :                          :     :     :  +- *(14) Filter (isnotnull(ws_item_sk#202) AND isnotnull(ws_sold_date_sk#204))
      :                          :     :     :     +- *(14) ColumnarToRow
      :                          :     :     :        +- FileScan parquet default.web_sales[ws_sold_date_sk#204,ws_item_sk#202,ws_order_number#200,ws_quantity#196,ws_ext_sales_price#198] Batched: true, DataFilters: [isnotnull(ws_item_sk#202), isnotnull(ws_sold_date_sk#204)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:int,ws_quantity:int,ws_ext_sales_price:...
      :                          :     :     +- ReusedExchange [i_item_sk#42, i_brand_id#18, i_class_id#19, i_category_id#20, i_manufact_id#21], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
      :                          :     +- ReusedExchange [d_date_sk#40, d_year#17], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#321]
      :                          +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true])), [id=#324]
      :                             +- *(13) Project [wr_item_sk#203, wr_order_number#201, wr_return_quantity#197, wr_return_amt#199]
      :                                +- *(13) Filter (isnotnull(wr_order_number#201) AND isnotnull(wr_item_sk#203))
      :                                   +- *(13) ColumnarToRow
      :                                      +- FileScan parquet default.web_returns[wr_item_sk#203,wr_order_number#201,wr_return_quantity#197,wr_return_amt#199] Batched: true, DataFilters: [isnotnull(wr_order_number#201), isnotnull(wr_item_sk#203)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:bigint,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true], input[4, int, true])), [id=#325]
         +- *(33) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], functions=[sum(cast(sales_cnt#3 as bigint)), sum(UnscaledValue(sales_amt#4))], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#22, sales_amt#26])
            +- Exchange hashpartitioning(d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, 5), true, [id=#326]
               +- *(32) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], functions=[partial_sum(cast(sales_cnt#3 as bigint)), partial_sum(UnscaledValue(sales_amt#4))], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sum#327, sum#328])
                  +- *(32) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4])
                     +- Exchange hashpartitioning(d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4, 5), true, [id=#329]
                        +- *(31) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4])
                           +- Union
                              :- *(26) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4])
                              :  +- Exchange hashpartitioning(d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4, 5), true, [id=#330]
                              :     +- *(25) HashAggregate(keys=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4], functions=[], output=[d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#3, sales_amt#4])
                              :        +- Union
                              :           :- *(20) Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (cs_quantity#31 - coalesce(cr_return_quantity#32, 0)) AS sales_cnt#3, CheckOverflow((promote_precision(cast(cs_ext_sales_price#33 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#34, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#4]
                              :           :  +- *(20) BroadcastHashJoin [cs_order_number#36, cs_item_sk#38], [cr_order_number#37, cr_item_sk#39], LeftOuter, BuildRight
                              :           :     :- *(20) Project [cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                              :           :     :  +- *(20) BroadcastHashJoin [cs_sold_date_sk#41], [d_date_sk#255], Inner, BuildRight
                              :           :     :     :- *(20) Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                              :           :     :     :  +- *(20) BroadcastHashJoin [cs_item_sk#38], [i_item_sk#256], Inner, BuildRight
                              :           :     :     :     :- *(20) Project [cs_sold_date_sk#41, cs_item_sk#38, cs_order_number#36, cs_quantity#31, cs_ext_sales_price#33]
                              :           :     :     :     :  +- *(20) Filter (isnotnull(cs_item_sk#38) AND isnotnull(cs_sold_date_sk#41))
                              :           :     :     :     :     +- *(20) ColumnarToRow
                              :           :     :     :     :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#41,cs_item_sk#38,cs_order_number#36,cs_quantity#31,cs_ext_sales_price#33] Batched: true, DataFilters: [isnotnull(cs_item_sk#38), isnotnull(cs_sold_date_sk#41)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:int,cs_quantity:int,cs_ext_sales_price:...
                              :           :     :     :     +- ReusedExchange [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
                              :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#331]
                              :           :     :        +- *(18) Project [d_date_sk#255, d_year#16]
                              :           :     :           +- *(18) Filter ((isnotnull(d_year#16) AND (d_year#16 = 2001)) AND isnotnull(d_date_sk#255))
                              :           :     :              +- *(18) ColumnarToRow
                              :           :     :                 +- FileScan parquet default.date_dim[d_date_sk#255,d_year#16] Batched: true, DataFilters: [isnotnull(d_year#16), (d_year#16 = 2001), isnotnull(d_date_sk#255)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                              :           :     +- ReusedExchange [cr_item_sk#39, cr_order_number#37, cr_return_quantity#32, cr_return_amount#34], BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#322]
                              :           +- *(24) Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ss_quantity#145 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#304, CheckOverflow((promote_precision(cast(ss_ext_sales_price#147 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#148, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#306]
                              :              +- *(24) BroadcastHashJoin [cast(ss_ticket_number#149 as bigint), cast(ss_item_sk#151 as bigint)], [sr_ticket_number#150, sr_item_sk#152], LeftOuter, BuildRight
                              :                 :- *(24) Project [ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                              :                 :  +- *(24) BroadcastHashJoin [ss_sold_date_sk#153], [d_date_sk#255], Inner, BuildRight
                              :                 :     :- *(24) Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                              :                 :     :  +- *(24) BroadcastHashJoin [ss_item_sk#151], [i_item_sk#256], Inner, BuildRight
                              :                 :     :     :- *(24) Project [ss_sold_date_sk#153, ss_item_sk#151, ss_ticket_number#149, ss_quantity#145, ss_ext_sales_price#147]
                              :                 :     :     :  +- *(24) Filter (isnotnull(ss_item_sk#151) AND isnotnull(ss_sold_date_sk#153))
                              :                 :     :     :     +- *(24) ColumnarToRow
                              :                 :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#153,ss_item_sk#151,ss_ticket_number#149,ss_quantity#145,ss_ext_sales_price#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#151), isnotnull(ss_sold_date_sk#153)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:int,ss_quantity:int,ss_ext_sales_price...
                              :                 :     :     +- ReusedExchange [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
                              :                 :     +- ReusedExchange [d_date_sk#255, d_year#16], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#331]
                              :                 +- ReusedExchange [sr_item_sk#152, sr_ticket_number#150, sr_return_quantity#146, sr_return_amt#148], BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true])), [id=#323]
                              +- *(30) Project [d_year#16, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ws_quantity#196 - coalesce(wr_return_quantity#197, 0)) AS sales_cnt#312, CheckOverflow((promote_precision(cast(ws_ext_sales_price#198 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#199, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#314]
                                 +- *(30) BroadcastHashJoin [cast(ws_order_number#200 as bigint), cast(ws_item_sk#202 as bigint)], [wr_order_number#201, wr_item_sk#203], LeftOuter, BuildRight
                                    :- *(30) Project [ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#16]
                                    :  +- *(30) BroadcastHashJoin [ws_sold_date_sk#204], [d_date_sk#255], Inner, BuildRight
                                    :     :- *(30) Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
                                    :     :  +- *(30) BroadcastHashJoin [ws_item_sk#202], [i_item_sk#256], Inner, BuildRight
                                    :     :     :- *(30) Project [ws_sold_date_sk#204, ws_item_sk#202, ws_order_number#200, ws_quantity#196, ws_ext_sales_price#198]
                                    :     :     :  +- *(30) Filter (isnotnull(ws_item_sk#202) AND isnotnull(ws_sold_date_sk#204))
                                    :     :     :     +- *(30) ColumnarToRow
                                    :     :     :        +- FileScan parquet default.web_sales[ws_sold_date_sk#204,ws_item_sk#202,ws_order_number#200,ws_quantity#196,ws_ext_sales_price#198] Batched: true, DataFilters: [isnotnull(ws_item_sk#202), isnotnull(ws_sold_date_sk#204)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:int,ws_quantity:int,ws_ext_sales_price:...
                                    :     :     +- ReusedExchange [i_item_sk#256, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#320]
                                    :     +- ReusedExchange [d_date_sk#255, d_year#16], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#331]
                                    +- ReusedExchange [wr_item_sk#203, wr_order_number#201, wr_return_quantity#197, wr_return_amt#199], BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true])), [id=#324]

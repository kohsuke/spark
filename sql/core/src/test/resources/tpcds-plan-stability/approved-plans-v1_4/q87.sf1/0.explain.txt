== Parsed Logical Plan ==
'Project [unresolvedalias('count(1), None)]
+- 'SubqueryAlias cool_cust
   +- 'Except false
      :- 'Except false
      :  :- 'Distinct
      :  :  +- 'Project ['c_last_name, 'c_first_name, 'd_date]
      :  :     +- 'Filter ((('store_sales.ss_sold_date_sk = 'date_dim.d_date_sk) AND ('store_sales.ss_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1200) AND ('d_month_seq <= (1200 + 11))))
      :  :        +- 'Join Inner
      :  :           :- 'Join Inner
      :  :           :  :- 'UnresolvedRelation [store_sales]
      :  :           :  +- 'UnresolvedRelation [date_dim]
      :  :           +- 'UnresolvedRelation [customer]
      :  +- 'Distinct
      :     +- 'Project ['c_last_name, 'c_first_name, 'd_date]
      :        +- 'Filter ((('catalog_sales.cs_sold_date_sk = 'date_dim.d_date_sk) AND ('catalog_sales.cs_bill_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1200) AND ('d_month_seq <= (1200 + 11))))
      :           +- 'Join Inner
      :              :- 'Join Inner
      :              :  :- 'UnresolvedRelation [catalog_sales]
      :              :  +- 'UnresolvedRelation [date_dim]
      :              +- 'UnresolvedRelation [customer]
      +- 'Distinct
         +- 'Project ['c_last_name, 'c_first_name, 'd_date]
            +- 'Filter ((('web_sales.ws_sold_date_sk = 'date_dim.d_date_sk) AND ('web_sales.ws_bill_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1200) AND ('d_month_seq <= (1200 + 11))))
               +- 'Join Inner
                  :- 'Join Inner
                  :  :- 'UnresolvedRelation [web_sales]
                  :  +- 'UnresolvedRelation [date_dim]
                  +- 'UnresolvedRelation [customer]

== Analyzed Logical Plan ==
count(1): bigint
Aggregate [count(1) AS count(1)#1]
+- SubqueryAlias cool_cust
   +- Except false
      :- Except false
      :  :- Distinct
      :  :  +- Project [c_last_name#2, c_first_name#3, d_date#4]
      :  :     +- Filter (((ss_sold_date_sk#5 = d_date_sk#6) AND (ss_customer_sk#7 = c_customer_sk#8)) AND ((d_month_seq#9 >= 1200) AND (d_month_seq#9 <= (1200 + 11))))
      :  :        +- Join Inner
      :  :           :- Join Inner
      :  :           :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.store_sales
      :  :           :  :  +- Relation[ss_sold_date_sk#5,ss_sold_time_sk#10,ss_item_sk#11,ss_customer_sk#7,ss_cdemo_sk#12,ss_hdemo_sk#13,ss_addr_sk#14,ss_store_sk#15,ss_promo_sk#16,ss_ticket_number#17,ss_quantity#18,ss_wholesale_cost#19,ss_list_price#20,ss_sales_price#21,ss_ext_discount_amt#22,ss_ext_sales_price#23,ss_ext_wholesale_cost#24,ss_ext_list_price#25,ss_ext_tax#26,ss_coupon_amt#27,ss_net_paid#28,ss_net_paid_inc_tax#29,ss_net_profit#30] parquet
      :  :           :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
      :  :           :     +- Relation[d_date_sk#6,d_date_id#31,d_date#4,d_month_seq#9,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet
      :  :           +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.customer
      :  :              +- Relation[c_customer_sk#8,c_customer_id#52,c_current_cdemo_sk#53,c_current_hdemo_sk#54,c_current_addr_sk#55,c_first_shipto_date_sk#56,c_first_sales_date_sk#57,c_salutation#58,c_first_name#3,c_last_name#2,c_preferred_cust_flag#59,c_birth_day#60,c_birth_month#61,c_birth_year#62,c_birth_country#63,c_login#64,c_email_address#65,c_last_review_date#66] parquet
      :  +- Distinct
      :     +- Project [c_last_name#67, c_first_name#68, d_date#69]
      :        +- Filter (((cs_sold_date_sk#70 = d_date_sk#71) AND (cs_bill_customer_sk#72 = c_customer_sk#73)) AND ((d_month_seq#74 >= 1200) AND (d_month_seq#74 <= (1200 + 11))))
      :           +- Join Inner
      :              :- Join Inner
      :              :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.catalog_sales
      :              :  :  +- Relation[cs_sold_date_sk#70,cs_sold_time_sk#75,cs_ship_date_sk#76,cs_bill_customer_sk#72,cs_bill_cdemo_sk#77,cs_bill_hdemo_sk#78,cs_bill_addr_sk#79,cs_ship_customer_sk#80,cs_ship_cdemo_sk#81,cs_ship_hdemo_sk#82,cs_ship_addr_sk#83,cs_call_center_sk#84,cs_catalog_page_sk#85,cs_ship_mode_sk#86,cs_warehouse_sk#87,cs_item_sk#88,cs_promo_sk#89,cs_order_number#90,cs_quantity#91,cs_wholesale_cost#92,cs_list_price#93,cs_sales_price#94,cs_ext_discount_amt#95,cs_ext_sales_price#96,... 10 more fields] parquet
      :              :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
      :              :     +- Relation[d_date_sk#71,d_date_id#97,d_date#69,d_month_seq#74,d_week_seq#98,d_quarter_seq#99,d_year#100,d_dow#101,d_moy#102,d_dom#103,d_qoy#104,d_fy_year#105,d_fy_quarter_seq#106,d_fy_week_seq#107,d_day_name#108,d_quarter_name#109,d_holiday#110,d_weekend#111,d_following_holiday#112,d_first_dom#113,d_last_dom#114,d_same_day_ly#115,d_same_day_lq#116,d_current_day#117,... 4 more fields] parquet
      :              +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.customer
      :                 +- Relation[c_customer_sk#73,c_customer_id#118,c_current_cdemo_sk#119,c_current_hdemo_sk#120,c_current_addr_sk#121,c_first_shipto_date_sk#122,c_first_sales_date_sk#123,c_salutation#124,c_first_name#68,c_last_name#67,c_preferred_cust_flag#125,c_birth_day#126,c_birth_month#127,c_birth_year#128,c_birth_country#129,c_login#130,c_email_address#131,c_last_review_date#132] parquet
      +- Distinct
         +- Project [c_last_name#133, c_first_name#134, d_date#135]
            +- Filter (((ws_sold_date_sk#136 = d_date_sk#137) AND (ws_bill_customer_sk#138 = c_customer_sk#139)) AND ((d_month_seq#140 >= 1200) AND (d_month_seq#140 <= (1200 + 11))))
               +- Join Inner
                  :- Join Inner
                  :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.web_sales
                  :  :  +- Relation[ws_sold_date_sk#136,ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#138,ws_bill_cdemo_sk#144,ws_bill_hdemo_sk#145,ws_bill_addr_sk#146,ws_ship_customer_sk#147,ws_ship_cdemo_sk#148,ws_ship_hdemo_sk#149,ws_ship_addr_sk#150,ws_web_page_sk#151,ws_web_site_sk#152,ws_ship_mode_sk#153,ws_warehouse_sk#154,ws_promo_sk#155,ws_order_number#156,ws_quantity#157,ws_wholesale_cost#158,ws_list_price#159,ws_sales_price#160,ws_ext_discount_amt#161,ws_ext_sales_price#162,... 10 more fields] parquet
                  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
                  :     +- Relation[d_date_sk#137,d_date_id#163,d_date#135,d_month_seq#140,d_week_seq#164,d_quarter_seq#165,d_year#166,d_dow#167,d_moy#168,d_dom#169,d_qoy#170,d_fy_year#171,d_fy_quarter_seq#172,d_fy_week_seq#173,d_day_name#174,d_quarter_name#175,d_holiday#176,d_weekend#177,d_following_holiday#178,d_first_dom#179,d_last_dom#180,d_same_day_ly#181,d_same_day_lq#182,d_current_day#183,... 4 more fields] parquet
                  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.customer
                     +- Relation[c_customer_sk#139,c_customer_id#184,c_current_cdemo_sk#185,c_current_hdemo_sk#186,c_current_addr_sk#187,c_first_shipto_date_sk#188,c_first_sales_date_sk#189,c_salutation#190,c_first_name#134,c_last_name#133,c_preferred_cust_flag#191,c_birth_day#192,c_birth_month#193,c_birth_year#194,c_birth_country#195,c_login#196,c_email_address#197,c_last_review_date#198] parquet

== Optimized Logical Plan ==
Aggregate [count(1) AS count(1)#1]
+- Aggregate [c_last_name#2, c_first_name#3, d_date#4]
   +- Aggregate [c_last_name#2, c_first_name#3, d_date#4], [c_last_name#2, c_first_name#3, d_date#4]
      +- Aggregate [c_last_name#2, c_first_name#3, d_date#4], [c_last_name#2, c_first_name#3, d_date#4]
         +- Project [c_last_name#2, c_first_name#3, d_date#4]
            +- Join LeftAnti, (((c_last_name#2 <=> c_last_name#133) AND (c_first_name#3 <=> c_first_name#134)) AND (d_date#4 <=> d_date#135))
               :- Join LeftAnti, (((c_last_name#2 <=> c_last_name#67) AND (c_first_name#3 <=> c_first_name#68)) AND (d_date#4 <=> d_date#69))
               :  :- Project [d_date#4, c_first_name#3, c_last_name#2]
               :  :  +- Join Inner, (ss_customer_sk#7 = c_customer_sk#8)
               :  :     :- Project [ss_customer_sk#7, d_date#4]
               :  :     :  +- Join Inner, (ss_sold_date_sk#5 = d_date_sk#6)
               :  :     :     :- Project [ss_sold_date_sk#5, ss_customer_sk#7]
               :  :     :     :  +- Filter (isnotnull(ss_sold_date_sk#5) AND isnotnull(ss_customer_sk#7))
               :  :     :     :     +- Relation[ss_sold_date_sk#5,ss_sold_time_sk#10,ss_item_sk#11,ss_customer_sk#7,ss_cdemo_sk#12,ss_hdemo_sk#13,ss_addr_sk#14,ss_store_sk#15,ss_promo_sk#16,ss_ticket_number#17,ss_quantity#18,ss_wholesale_cost#19,ss_list_price#20,ss_sales_price#21,ss_ext_discount_amt#22,ss_ext_sales_price#23,ss_ext_wholesale_cost#24,ss_ext_list_price#25,ss_ext_tax#26,ss_coupon_amt#27,ss_net_paid#28,ss_net_paid_inc_tax#29,ss_net_profit#30] parquet
               :  :     :     +- Project [d_date_sk#6, d_date#4]
               :  :     :        +- Filter (((isnotnull(d_month_seq#9) AND (d_month_seq#9 >= 1200)) AND (d_month_seq#9 <= 1211)) AND isnotnull(d_date_sk#6))
               :  :     :           +- Relation[d_date_sk#6,d_date_id#31,d_date#4,d_month_seq#9,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet
               :  :     +- Project [c_customer_sk#8, c_first_name#3, c_last_name#2]
               :  :        +- Filter isnotnull(c_customer_sk#8)
               :  :           +- Relation[c_customer_sk#8,c_customer_id#52,c_current_cdemo_sk#53,c_current_hdemo_sk#54,c_current_addr_sk#55,c_first_shipto_date_sk#56,c_first_sales_date_sk#57,c_salutation#58,c_first_name#3,c_last_name#2,c_preferred_cust_flag#59,c_birth_day#60,c_birth_month#61,c_birth_year#62,c_birth_country#63,c_login#64,c_email_address#65,c_last_review_date#66] parquet
               :  +- Aggregate [c_last_name#67, c_first_name#68, d_date#69], [c_last_name#67, c_first_name#68, d_date#69]
               :     +- Project [c_last_name#67, c_first_name#68, d_date#69]
               :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#73)
               :           :- Project [cs_bill_customer_sk#72, d_date#69]
               :           :  +- Join Inner, (cs_sold_date_sk#70 = d_date_sk#71)
               :           :     :- Project [cs_sold_date_sk#70, cs_bill_customer_sk#72]
               :           :     :  +- Filter (isnotnull(cs_sold_date_sk#70) AND isnotnull(cs_bill_customer_sk#72))
               :           :     :     +- Relation[cs_sold_date_sk#70,cs_sold_time_sk#75,cs_ship_date_sk#76,cs_bill_customer_sk#72,cs_bill_cdemo_sk#77,cs_bill_hdemo_sk#78,cs_bill_addr_sk#79,cs_ship_customer_sk#80,cs_ship_cdemo_sk#81,cs_ship_hdemo_sk#82,cs_ship_addr_sk#83,cs_call_center_sk#84,cs_catalog_page_sk#85,cs_ship_mode_sk#86,cs_warehouse_sk#87,cs_item_sk#88,cs_promo_sk#89,cs_order_number#90,cs_quantity#91,cs_wholesale_cost#92,cs_list_price#93,cs_sales_price#94,cs_ext_discount_amt#95,cs_ext_sales_price#96,... 10 more fields] parquet
               :           :     +- Project [d_date_sk#71, d_date#69]
               :           :        +- Filter (((isnotnull(d_month_seq#74) AND (d_month_seq#74 >= 1200)) AND (d_month_seq#74 <= 1211)) AND isnotnull(d_date_sk#71))
               :           :           +- Relation[d_date_sk#71,d_date_id#97,d_date#69,d_month_seq#74,d_week_seq#98,d_quarter_seq#99,d_year#100,d_dow#101,d_moy#102,d_dom#103,d_qoy#104,d_fy_year#105,d_fy_quarter_seq#106,d_fy_week_seq#107,d_day_name#108,d_quarter_name#109,d_holiday#110,d_weekend#111,d_following_holiday#112,d_first_dom#113,d_last_dom#114,d_same_day_ly#115,d_same_day_lq#116,d_current_day#117,... 4 more fields] parquet
               :           +- Project [c_customer_sk#73, c_first_name#68, c_last_name#67]
               :              +- Filter isnotnull(c_customer_sk#73)
               :                 +- Relation[c_customer_sk#73,c_customer_id#118,c_current_cdemo_sk#119,c_current_hdemo_sk#120,c_current_addr_sk#121,c_first_shipto_date_sk#122,c_first_sales_date_sk#123,c_salutation#124,c_first_name#68,c_last_name#67,c_preferred_cust_flag#125,c_birth_day#126,c_birth_month#127,c_birth_year#128,c_birth_country#129,c_login#130,c_email_address#131,c_last_review_date#132] parquet
               +- Aggregate [c_last_name#133, c_first_name#134, d_date#135], [c_last_name#133, c_first_name#134, d_date#135]
                  +- Project [c_last_name#133, c_first_name#134, d_date#135]
                     +- Join Inner, (ws_bill_customer_sk#138 = c_customer_sk#139)
                        :- Project [ws_bill_customer_sk#138, d_date#135]
                        :  +- Join Inner, (ws_sold_date_sk#136 = d_date_sk#137)
                        :     :- Project [ws_sold_date_sk#136, ws_bill_customer_sk#138]
                        :     :  +- Filter (isnotnull(ws_sold_date_sk#136) AND isnotnull(ws_bill_customer_sk#138))
                        :     :     +- Relation[ws_sold_date_sk#136,ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#138,ws_bill_cdemo_sk#144,ws_bill_hdemo_sk#145,ws_bill_addr_sk#146,ws_ship_customer_sk#147,ws_ship_cdemo_sk#148,ws_ship_hdemo_sk#149,ws_ship_addr_sk#150,ws_web_page_sk#151,ws_web_site_sk#152,ws_ship_mode_sk#153,ws_warehouse_sk#154,ws_promo_sk#155,ws_order_number#156,ws_quantity#157,ws_wholesale_cost#158,ws_list_price#159,ws_sales_price#160,ws_ext_discount_amt#161,ws_ext_sales_price#162,... 10 more fields] parquet
                        :     +- Project [d_date_sk#137, d_date#135]
                        :        +- Filter (((isnotnull(d_month_seq#140) AND (d_month_seq#140 >= 1200)) AND (d_month_seq#140 <= 1211)) AND isnotnull(d_date_sk#137))
                        :           +- Relation[d_date_sk#137,d_date_id#163,d_date#135,d_month_seq#140,d_week_seq#164,d_quarter_seq#165,d_year#166,d_dow#167,d_moy#168,d_dom#169,d_qoy#170,d_fy_year#171,d_fy_quarter_seq#172,d_fy_week_seq#173,d_day_name#174,d_quarter_name#175,d_holiday#176,d_weekend#177,d_following_holiday#178,d_first_dom#179,d_last_dom#180,d_same_day_ly#181,d_same_day_lq#182,d_current_day#183,... 4 more fields] parquet
                        +- Project [c_customer_sk#139, c_first_name#134, c_last_name#133]
                           +- Filter isnotnull(c_customer_sk#139)
                              +- Relation[c_customer_sk#139,c_customer_id#184,c_current_cdemo_sk#185,c_current_hdemo_sk#186,c_current_addr_sk#187,c_first_shipto_date_sk#188,c_first_sales_date_sk#189,c_salutation#190,c_first_name#134,c_last_name#133,c_preferred_cust_flag#191,c_birth_day#192,c_birth_month#193,c_birth_year#194,c_birth_country#195,c_login#196,c_email_address#197,c_last_review_date#198] parquet

== Physical Plan ==
*(17) HashAggregate(keys=[], functions=[count(1)], output=[count(1)#1])
+- Exchange SinglePartition, true, [id=#199]
   +- *(16) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#200])
      +- *(16) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[])
         +- *(16) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[c_last_name#2, c_first_name#3, d_date#4])
            +- *(16) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[c_last_name#2, c_first_name#3, d_date#4])
               +- *(16) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[c_last_name#2, c_first_name#3, d_date#4])
                  +- *(16) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[c_last_name#2, c_first_name#3, d_date#4])
                     +- Exchange hashpartitioning(c_last_name#2, c_first_name#3, d_date#4, 5), true, [id=#201]
                        +- *(15) HashAggregate(keys=[c_last_name#2, c_first_name#3, d_date#4], functions=[], output=[c_last_name#2, c_first_name#3, d_date#4])
                           +- *(15) Project [c_last_name#2, c_first_name#3, d_date#4]
                              +- SortMergeJoin [coalesce(c_last_name#2, ), isnull(c_last_name#2), coalesce(c_first_name#3, ), isnull(c_first_name#3), coalesce(d_date#4, 0), isnull(d_date#4)], [coalesce(c_last_name#133, ), isnull(c_last_name#133), coalesce(c_first_name#134, ), isnull(c_first_name#134), coalesce(d_date#135, 0), isnull(d_date#135)], LeftAnti
                                 :- SortMergeJoin [coalesce(c_last_name#2, ), isnull(c_last_name#2), coalesce(c_first_name#3, ), isnull(c_first_name#3), coalesce(d_date#4, 0), isnull(d_date#4)], [coalesce(c_last_name#67, ), isnull(c_last_name#67), coalesce(c_first_name#68, ), isnull(c_first_name#68), coalesce(d_date#69, 0), isnull(d_date#69)], LeftAnti
                                 :  :- *(4) Sort [coalesce(c_last_name#2, ) ASC NULLS FIRST, isnull(c_last_name#2) ASC NULLS FIRST, coalesce(c_first_name#3, ) ASC NULLS FIRST, isnull(c_first_name#3) ASC NULLS FIRST, coalesce(d_date#4, 0) ASC NULLS FIRST, isnull(d_date#4) ASC NULLS FIRST], false, 0
                                 :  :  +- Exchange hashpartitioning(coalesce(c_last_name#2, ), isnull(c_last_name#2), coalesce(c_first_name#3, ), isnull(c_first_name#3), coalesce(d_date#4, 0), isnull(d_date#4), 5), true, [id=#202]
                                 :  :     +- *(3) Project [d_date#4, c_first_name#3, c_last_name#2]
                                 :  :        +- *(3) BroadcastHashJoin [ss_customer_sk#7], [c_customer_sk#8], Inner, BuildRight, false
                                 :  :           :- *(3) Project [ss_customer_sk#7, d_date#4]
                                 :  :           :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#5], [d_date_sk#6], Inner, BuildRight, false
                                 :  :           :     :- *(3) Project [ss_sold_date_sk#5, ss_customer_sk#7]
                                 :  :           :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#5) AND isnotnull(ss_customer_sk#7))
                                 :  :           :     :     +- *(3) ColumnarToRow
                                 :  :           :     :        +- FileScan parquet tpcds_sf1_parquet_stats.store_sales[ss_sold_date_sk#5,ss_customer_sk#7] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#5), isnotnull(ss_customer_sk#7)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
                                 :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#203]
                                 :  :           :        +- *(1) Project [d_date_sk#6, d_date#4]
                                 :  :           :           +- *(1) Filter (((isnotnull(d_month_seq#9) AND (d_month_seq#9 >= 1200)) AND (d_month_seq#9 <= 1211)) AND isnotnull(d_date_sk#6))
                                 :  :           :              +- *(1) ColumnarToRow
                                 :  :           :                 +- FileScan parquet tpcds_sf1_parquet_stats.date_dim[d_date_sk#6,d_date#4,d_month_seq#9] Batched: true, DataFilters: [isnotnull(d_month_seq#9), (d_month_seq#9 >= 1200), (d_month_seq#9 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
                                 :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#204]
                                 :  :              +- *(2) Project [c_customer_sk#8, c_first_name#3, c_last_name#2]
                                 :  :                 +- *(2) Filter isnotnull(c_customer_sk#8)
                                 :  :                    +- *(2) ColumnarToRow
                                 :  :                       +- FileScan parquet tpcds_sf1_parquet_stats.customer[c_customer_sk#8,c_first_name#3,c_last_name#2] Batched: true, DataFilters: [isnotnull(c_customer_sk#8)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
                                 :  +- *(9) Sort [coalesce(c_last_name#67, ) ASC NULLS FIRST, isnull(c_last_name#67) ASC NULLS FIRST, coalesce(c_first_name#68, ) ASC NULLS FIRST, isnull(c_first_name#68) ASC NULLS FIRST, coalesce(d_date#69, 0) ASC NULLS FIRST, isnull(d_date#69) ASC NULLS FIRST], false, 0
                                 :     +- Exchange hashpartitioning(coalesce(c_last_name#67, ), isnull(c_last_name#67), coalesce(c_first_name#68, ), isnull(c_first_name#68), coalesce(d_date#69, 0), isnull(d_date#69), 5), true, [id=#205]
                                 :        +- *(8) HashAggregate(keys=[c_last_name#67, c_first_name#68, d_date#69], functions=[], output=[c_last_name#67, c_first_name#68, d_date#69])
                                 :           +- Exchange hashpartitioning(c_last_name#67, c_first_name#68, d_date#69, 5), true, [id=#206]
                                 :              +- *(7) HashAggregate(keys=[c_last_name#67, c_first_name#68, d_date#69], functions=[], output=[c_last_name#67, c_first_name#68, d_date#69])
                                 :                 +- *(7) Project [c_last_name#67, c_first_name#68, d_date#69]
                                 :                    +- *(7) BroadcastHashJoin [cs_bill_customer_sk#72], [c_customer_sk#73], Inner, BuildRight, false
                                 :                       :- *(7) Project [cs_bill_customer_sk#72, d_date#69]
                                 :                       :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#70], [d_date_sk#71], Inner, BuildRight, false
                                 :                       :     :- *(7) Project [cs_sold_date_sk#70, cs_bill_customer_sk#72]
                                 :                       :     :  +- *(7) Filter (isnotnull(cs_sold_date_sk#70) AND isnotnull(cs_bill_customer_sk#72))
                                 :                       :     :     +- *(7) ColumnarToRow
                                 :                       :     :        +- FileScan parquet tpcds_sf1_parquet_stats.catalog_sales[cs_sold_date_sk#70,cs_bill_customer_sk#72] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#70), isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>
                                 :                       :     +- ReusedExchange [d_date_sk#71, d_date#69], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#203]
                                 :                       +- ReusedExchange [c_customer_sk#73, c_first_name#68, c_last_name#67], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#204]
                                 +- *(14) Sort [coalesce(c_last_name#133, ) ASC NULLS FIRST, isnull(c_last_name#133) ASC NULLS FIRST, coalesce(c_first_name#134, ) ASC NULLS FIRST, isnull(c_first_name#134) ASC NULLS FIRST, coalesce(d_date#135, 0) ASC NULLS FIRST, isnull(d_date#135) ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(coalesce(c_last_name#133, ), isnull(c_last_name#133), coalesce(c_first_name#134, ), isnull(c_first_name#134), coalesce(d_date#135, 0), isnull(d_date#135), 5), true, [id=#207]
                                       +- *(13) HashAggregate(keys=[c_last_name#133, c_first_name#134, d_date#135], functions=[], output=[c_last_name#133, c_first_name#134, d_date#135])
                                          +- Exchange hashpartitioning(c_last_name#133, c_first_name#134, d_date#135, 5), true, [id=#208]
                                             +- *(12) HashAggregate(keys=[c_last_name#133, c_first_name#134, d_date#135], functions=[], output=[c_last_name#133, c_first_name#134, d_date#135])
                                                +- *(12) Project [c_last_name#133, c_first_name#134, d_date#135]
                                                   +- *(12) BroadcastHashJoin [ws_bill_customer_sk#138], [c_customer_sk#139], Inner, BuildRight, false
                                                      :- *(12) Project [ws_bill_customer_sk#138, d_date#135]
                                                      :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#136], [d_date_sk#137], Inner, BuildRight, false
                                                      :     :- *(12) Project [ws_sold_date_sk#136, ws_bill_customer_sk#138]
                                                      :     :  +- *(12) Filter (isnotnull(ws_sold_date_sk#136) AND isnotnull(ws_bill_customer_sk#138))
                                                      :     :     +- *(12) ColumnarToRow
                                                      :     :        +- FileScan parquet tpcds_sf1_parquet_stats.web_sales[ws_sold_date_sk#136,ws_bill_customer_sk#138] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#136), isnotnull(ws_bill_customer_sk#138)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
                                                      :     +- ReusedExchange [d_date_sk#137, d_date#135], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#203]
                                                      +- ReusedExchange [c_customer_sk#139, c_first_name#134, c_last_name#133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#204]

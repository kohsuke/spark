== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['w_warehouse_name ASC NULLS FIRST], true
      +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year, 'sum('jan_sales) AS jan_sales#1, 'sum('feb_sales) AS feb_sales#2, 'sum('mar_sales) AS mar_sales#3, 'sum('apr_sales) AS apr_sales#4, 'sum('may_sales) AS may_sales#5, 'sum('jun_sales) AS jun_sales#6, 'sum('jul_sales) AS jul_sales#7, 'sum('aug_sales) AS aug_sales#8, 'sum('sep_sales) AS sep_sales#9, 'sum('oct_sales) AS oct_sales#10, 'sum('nov_sales) AS nov_sales#11, 'sum('dec_sales) AS dec_sales#12, 'sum(('jan_sales / 'w_warehouse_sq_ft)) AS jan_sales_per_sq_foot#13, 'sum(('feb_sales / 'w_warehouse_sq_ft)) AS feb_sales_per_sq_foot#14, 'sum(('mar_sales / 'w_warehouse_sq_ft)) AS mar_sales_per_sq_foot#15, 'sum(('apr_sales / 'w_warehouse_sq_ft)) AS apr_sales_per_sq_foot#16, ... 20 more fields]
         +- 'SubqueryAlias x
            +- 'Union false, false
               :- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#17, 'd_year AS year#18, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jan_sales#19, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS feb_sales#20, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS mar_sales#21, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS apr_sales#22, 'sum(CASE WHEN ('d_moy = 5) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS may_sales#23, 'sum(CASE WHEN ('d_moy = 6) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jun_sales#24, 'sum(CASE WHEN ('d_moy = 7) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jul_sales#25, 'sum(CASE WHEN ('d_moy = 8) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS aug_sales#26, 'sum(CASE WHEN ('d_moy = 9) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS sep_sales#27, 'sum(CASE WHEN ('d_moy = 10) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS oct_sales#28, 'sum(CASE WHEN ('d_moy = 11) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS nov_sales#29, 'sum(CASE WHEN ('d_moy = 12) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS dec_sales#30, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS jan_net#31, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS feb_net#32, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS mar_net#33, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS apr_net#34, ... 8 more fields]
               :  +- 'Filter (((('ws_warehouse_sk = 'w_warehouse_sk) AND ('ws_sold_date_sk = 'd_date_sk)) AND (('ws_sold_time_sk = 't_time_sk) AND ('ws_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
               :     +- 'Join Inner
               :        :- 'Join Inner
               :        :  :- 'Join Inner
               :        :  :  :- 'Join Inner
               :        :  :  :  :- 'UnresolvedRelation [web_sales]
               :        :  :  :  +- 'UnresolvedRelation [warehouse]
               :        :  :  +- 'UnresolvedRelation [date_dim]
               :        :  +- 'UnresolvedRelation [time_dim]
               :        +- 'UnresolvedRelation [ship_mode]
               +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#35, 'd_year AS year#36, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jan_sales#37, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS feb_sales#38, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS mar_sales#39, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS apr_sales#40, 'sum(CASE WHEN ('d_moy = 5) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS may_sales#41, 'sum(CASE WHEN ('d_moy = 6) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jun_sales#42, 'sum(CASE WHEN ('d_moy = 7) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jul_sales#43, 'sum(CASE WHEN ('d_moy = 8) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS aug_sales#44, 'sum(CASE WHEN ('d_moy = 9) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS sep_sales#45, 'sum(CASE WHEN ('d_moy = 10) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS oct_sales#46, 'sum(CASE WHEN ('d_moy = 11) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS nov_sales#47, 'sum(CASE WHEN ('d_moy = 12) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS dec_sales#48, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS jan_net#49, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS feb_net#50, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS mar_net#51, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS apr_net#52, ... 8 more fields]
                  +- 'Filter (((('cs_warehouse_sk = 'w_warehouse_sk) AND ('cs_sold_date_sk = 'd_date_sk)) AND (('cs_sold_time_sk = 't_time_sk) AND ('cs_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
                     +- 'Join Inner
                        :- 'Join Inner
                        :  :- 'Join Inner
                        :  :  :- 'Join Inner
                        :  :  :  :- 'UnresolvedRelation [catalog_sales]
                        :  :  :  +- 'UnresolvedRelation [warehouse]
                        :  :  +- 'UnresolvedRelation [date_dim]
                        :  +- 'UnresolvedRelation [time_dim]
                        +- 'UnresolvedRelation [ship_mode]

== Analyzed Logical Plan ==
w_warehouse_name: string, w_warehouse_sq_ft: int, w_city: string, w_county: string, w_state: string, w_country: string, ship_carriers: string, year: int, jan_sales: decimal(38,2), feb_sales: decimal(38,2), mar_sales: decimal(38,2), apr_sales: decimal(38,2), may_sales: decimal(38,2), jun_sales: decimal(38,2), jul_sales: decimal(38,2), aug_sales: decimal(38,2), sep_sales: decimal(38,2), oct_sales: decimal(38,2), nov_sales: decimal(38,2), dec_sales: decimal(38,2), jan_sales_per_sq_foot: decimal(38,12), feb_sales_per_sq_foot: decimal(38,12), mar_sales_per_sq_foot: decimal(38,12), apr_sales_per_sq_foot: decimal(38,12), ... 20 more fields
GlobalLimit 100
+- LocalLimit 100
   +- Project [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, jan_sales#1, feb_sales#2, mar_sales#3, apr_sales#4, may_sales#5, jun_sales#6, jul_sales#7, aug_sales#8, sep_sales#9, oct_sales#10, nov_sales#11, dec_sales#12, jan_sales_per_sq_foot#13, feb_sales_per_sq_foot#14, mar_sales_per_sq_foot#15, apr_sales_per_sq_foot#16, ... 20 more fields]
      +- Sort [w_warehouse_name#53 ASC NULLS FIRST], true
         +- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, sum(jan_sales#19) AS jan_sales#1, sum(feb_sales#20) AS feb_sales#2, sum(mar_sales#21) AS mar_sales#3, sum(apr_sales#22) AS apr_sales#4, sum(may_sales#23) AS may_sales#5, sum(jun_sales#24) AS jun_sales#6, sum(jul_sales#25) AS jul_sales#7, sum(aug_sales#26) AS aug_sales#8, sum(sep_sales#27) AS sep_sales#9, sum(oct_sales#28) AS oct_sales#10, sum(nov_sales#29) AS nov_sales#11, sum(dec_sales#30) AS dec_sales#12, sum(CheckOverflow((promote_precision(cast(jan_sales#19 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jan_sales_per_sq_foot#13, sum(CheckOverflow((promote_precision(cast(feb_sales#20 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS feb_sales_per_sq_foot#14, sum(CheckOverflow((promote_precision(cast(mar_sales#21 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS mar_sales_per_sq_foot#15, sum(CheckOverflow((promote_precision(cast(apr_sales#22 as decimal(28,2))) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS apr_sales_per_sq_foot#16, ... 20 more fields]
            +- SubqueryAlias x
               +- Union false, false
                  :- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, concat(DHL, ,, BARIAN) AS ship_carriers#17, d_year#59 AS year#18, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_sales#19, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_sales#20, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_sales#21, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_sales#22, sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_sales#23, sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_sales#24, sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_sales#25, sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_sales#26, sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_sales#27, sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_sales#28, sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_sales#29, sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_sales#30, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_net#31, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_net#32, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_net#33, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_net#34, ... 8 more fields]
                  :  +- Filter ((((ws_warehouse_sk#64 = w_warehouse_sk#65) AND (ws_sold_date_sk#66 = d_date_sk#67)) AND ((ws_sold_time_sk#68 = t_time_sk#69) AND (ws_ship_mode_sk#70 = sm_ship_mode_sk#71))) AND (((d_year#59 = 2001) AND ((t_time#72 >= 30838) AND (t_time#72 <= (30838 + 28800)))) AND sm_carrier#73 IN (DHL,BARIAN)))
                  :     +- Join Inner
                  :        :- Join Inner
                  :        :  :- Join Inner
                  :        :  :  :- Join Inner
                  :        :  :  :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.web_sales
                  :        :  :  :  :  +- Relation[ws_sold_date_sk#66,ws_sold_time_sk#68,ws_ship_date_sk#74,ws_item_sk#75,ws_bill_customer_sk#76,ws_bill_cdemo_sk#77,ws_bill_hdemo_sk#78,ws_bill_addr_sk#79,ws_ship_customer_sk#80,ws_ship_cdemo_sk#81,ws_ship_hdemo_sk#82,ws_ship_addr_sk#83,ws_web_page_sk#84,ws_web_site_sk#85,ws_ship_mode_sk#70,ws_warehouse_sk#64,ws_promo_sk#86,ws_order_number#87,ws_quantity#62,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#61,... 10 more fields] parquet
                  :        :  :  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.warehouse
                  :        :  :  :     +- Relation[w_warehouse_sk#65,w_warehouse_id#92,w_warehouse_name#53,w_warehouse_sq_ft#54,w_street_number#93,w_street_name#94,w_street_type#95,w_suite_number#96,w_city#55,w_county#56,w_state#57,w_zip#97,w_country#58,w_gmt_offset#98] parquet
                  :        :  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
                  :        :  :     +- Relation[d_date_sk#67,d_date_id#99,d_date#100,d_month_seq#101,d_week_seq#102,d_quarter_seq#103,d_year#59,d_dow#104,d_moy#60,d_dom#105,d_qoy#106,d_fy_year#107,d_fy_quarter_seq#108,d_fy_week_seq#109,d_day_name#110,d_quarter_name#111,d_holiday#112,d_weekend#113,d_following_holiday#114,d_first_dom#115,d_last_dom#116,d_same_day_ly#117,d_same_day_lq#118,d_current_day#119,... 4 more fields] parquet
                  :        :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.time_dim
                  :        :     +- Relation[t_time_sk#69,t_time_id#120,t_time#72,t_hour#121,t_minute#122,t_second#123,t_am_pm#124,t_shift#125,t_sub_shift#126,t_meal_time#127] parquet
                  :        +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.ship_mode
                  :           +- Relation[sm_ship_mode_sk#71,sm_ship_mode_id#128,sm_type#129,sm_code#130,sm_carrier#73,sm_contract#131] parquet
                  +- Project [w_warehouse_name#53 AS w_warehouse_name#132, w_warehouse_sq_ft#54 AS w_warehouse_sq_ft#133, w_city#55 AS w_city#134, w_county#56 AS w_county#135, w_state#57 AS w_state#136, w_country#58 AS w_country#137, ship_carriers#35 AS ship_carriers#138, year#36 AS year#139, jan_sales#37 AS jan_sales#140, feb_sales#38 AS feb_sales#141, mar_sales#39 AS mar_sales#142, apr_sales#40 AS apr_sales#143, may_sales#41 AS may_sales#144, jun_sales#42 AS jun_sales#145, jul_sales#43 AS jul_sales#146, aug_sales#44 AS aug_sales#147, sep_sales#45 AS sep_sales#148, oct_sales#46 AS oct_sales#149, nov_sales#47 AS nov_sales#150, dec_sales#48 AS dec_sales#151, jan_net#49 AS jan_net#152, feb_net#50 AS feb_net#153, mar_net#51 AS mar_net#154, apr_net#52 AS apr_net#155, ... 8 more fields]
                     +- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, concat(DHL, ,, BARIAN) AS ship_carriers#35, d_year#59 AS year#36, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_sales#37, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_sales#38, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_sales#39, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_sales#40, sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS may_sales#41, sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jun_sales#42, sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jul_sales#43, sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS aug_sales#44, sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS sep_sales#45, sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS oct_sales#46, sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS nov_sales#47, sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS dec_sales#48, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS jan_net#49, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS feb_net#50, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS mar_net#51, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE cast(0 as decimal(18,2)) END) AS apr_net#52, ... 8 more fields]
                        +- Filter ((((cs_warehouse_sk#159 = w_warehouse_sk#65) AND (cs_sold_date_sk#160 = d_date_sk#67)) AND ((cs_sold_time_sk#161 = t_time_sk#69) AND (cs_ship_mode_sk#162 = sm_ship_mode_sk#71))) AND (((d_year#59 = 2001) AND ((t_time#72 >= 30838) AND (t_time#72 <= (30838 + 28800)))) AND sm_carrier#73 IN (DHL,BARIAN)))
                           +- Join Inner
                              :- Join Inner
                              :  :- Join Inner
                              :  :  :- Join Inner
                              :  :  :  :- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.catalog_sales
                              :  :  :  :  +- Relation[cs_sold_date_sk#160,cs_sold_time_sk#161,cs_ship_date_sk#163,cs_bill_customer_sk#164,cs_bill_cdemo_sk#165,cs_bill_hdemo_sk#166,cs_bill_addr_sk#167,cs_ship_customer_sk#168,cs_ship_cdemo_sk#169,cs_ship_hdemo_sk#170,cs_ship_addr_sk#171,cs_call_center_sk#172,cs_catalog_page_sk#173,cs_ship_mode_sk#162,cs_warehouse_sk#159,cs_item_sk#174,cs_promo_sk#175,cs_order_number#176,cs_quantity#157,cs_wholesale_cost#177,cs_list_price#178,cs_sales_price#156,cs_ext_discount_amt#179,cs_ext_sales_price#180,... 10 more fields] parquet
                              :  :  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.warehouse
                              :  :  :     +- Relation[w_warehouse_sk#65,w_warehouse_id#92,w_warehouse_name#53,w_warehouse_sq_ft#54,w_street_number#93,w_street_name#94,w_street_type#95,w_suite_number#96,w_city#55,w_county#56,w_state#57,w_zip#97,w_country#58,w_gmt_offset#98] parquet
                              :  :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.date_dim
                              :  :     +- Relation[d_date_sk#67,d_date_id#99,d_date#100,d_month_seq#101,d_week_seq#102,d_quarter_seq#103,d_year#59,d_dow#104,d_moy#60,d_dom#105,d_qoy#106,d_fy_year#107,d_fy_quarter_seq#108,d_fy_week_seq#109,d_day_name#110,d_quarter_name#111,d_holiday#112,d_weekend#113,d_following_holiday#114,d_first_dom#115,d_last_dom#116,d_same_day_ly#117,d_same_day_lq#118,d_current_day#119,... 4 more fields] parquet
                              :  +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.time_dim
                              :     +- Relation[t_time_sk#69,t_time_id#120,t_time#72,t_hour#121,t_minute#122,t_second#123,t_am_pm#124,t_shift#125,t_sub_shift#126,t_meal_time#127] parquet
                              +- SubqueryAlias spark_catalog.tpcds_sf1_parquet_stats.ship_mode
                                 +- Relation[sm_ship_mode_sk#71,sm_ship_mode_id#128,sm_type#129,sm_code#130,sm_carrier#73,sm_contract#131] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_warehouse_name#53 ASC NULLS FIRST], true
      +- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, sum(jan_sales#19) AS jan_sales#1, sum(feb_sales#20) AS feb_sales#2, sum(mar_sales#21) AS mar_sales#3, sum(apr_sales#22) AS apr_sales#4, sum(may_sales#23) AS may_sales#5, sum(jun_sales#24) AS jun_sales#6, sum(jul_sales#25) AS jul_sales#7, sum(aug_sales#26) AS aug_sales#8, sum(sep_sales#27) AS sep_sales#9, sum(oct_sales#28) AS oct_sales#10, sum(nov_sales#29) AS nov_sales#11, sum(dec_sales#30) AS dec_sales#12, sum(CheckOverflow((promote_precision(jan_sales#19) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS jan_sales_per_sq_foot#13, sum(CheckOverflow((promote_precision(feb_sales#20) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS feb_sales_per_sq_foot#14, sum(CheckOverflow((promote_precision(mar_sales#21) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS mar_sales_per_sq_foot#15, sum(CheckOverflow((promote_precision(apr_sales#22) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)) AS apr_sales_per_sq_foot#16, ... 20 more fields]
         +- Union false, false
            :- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, DHL,BARIAN AS ship_carriers#17, d_year#59 AS year#18, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_sales#19, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_sales#20, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_sales#21, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_sales#22, sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_sales#23, sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_sales#24, sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_sales#25, sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_sales#26, sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_sales#27, sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_sales#28, sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_sales#29, sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_sales#30, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_net#31, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_net#32, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_net#33, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_net#34, ... 8 more fields]
            :  +- Project [ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :     +- Join Inner, (ws_ship_mode_sk#70 = sm_ship_mode_sk#71)
            :        :- Project [ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :        :  +- Join Inner, (ws_sold_time_sk#68 = t_time_sk#69)
            :        :     :- Project [ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :        :     :  +- Join Inner, (ws_sold_date_sk#66 = d_date_sk#67)
            :        :     :     :- Project [ws_sold_date_sk#66, ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
            :        :     :     :  +- Join Inner, (ws_warehouse_sk#64 = w_warehouse_sk#65)
            :        :     :     :     :- Project [ws_sold_date_sk#66, ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_warehouse_sk#64, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63]
            :        :     :     :     :  +- Filter (((isnotnull(ws_warehouse_sk#64) AND isnotnull(ws_sold_date_sk#66)) AND isnotnull(ws_sold_time_sk#68)) AND isnotnull(ws_ship_mode_sk#70))
            :        :     :     :     :     +- Relation[ws_sold_date_sk#66,ws_sold_time_sk#68,ws_ship_date_sk#74,ws_item_sk#75,ws_bill_customer_sk#76,ws_bill_cdemo_sk#77,ws_bill_hdemo_sk#78,ws_bill_addr_sk#79,ws_ship_customer_sk#80,ws_ship_cdemo_sk#81,ws_ship_hdemo_sk#82,ws_ship_addr_sk#83,ws_web_page_sk#84,ws_web_site_sk#85,ws_ship_mode_sk#70,ws_warehouse_sk#64,ws_promo_sk#86,ws_order_number#87,ws_quantity#62,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#61,... 10 more fields] parquet
            :        :     :     :     +- Project [w_warehouse_sk#65, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
            :        :     :     :        +- Filter isnotnull(w_warehouse_sk#65)
            :        :     :     :           +- Relation[w_warehouse_sk#65,w_warehouse_id#92,w_warehouse_name#53,w_warehouse_sq_ft#54,w_street_number#93,w_street_name#94,w_street_type#95,w_suite_number#96,w_city#55,w_county#56,w_state#57,w_zip#97,w_country#58,w_gmt_offset#98] parquet
            :        :     :     +- Project [d_date_sk#67, d_year#59, d_moy#60]
            :        :     :        +- Filter ((isnotnull(d_year#59) AND (d_year#59 = 2001)) AND isnotnull(d_date_sk#67))
            :        :     :           +- Relation[d_date_sk#67,d_date_id#99,d_date#100,d_month_seq#101,d_week_seq#102,d_quarter_seq#103,d_year#59,d_dow#104,d_moy#60,d_dom#105,d_qoy#106,d_fy_year#107,d_fy_quarter_seq#108,d_fy_week_seq#109,d_day_name#110,d_quarter_name#111,d_holiday#112,d_weekend#113,d_following_holiday#114,d_first_dom#115,d_last_dom#116,d_same_day_ly#117,d_same_day_lq#118,d_current_day#119,... 4 more fields] parquet
            :        :     +- Project [t_time_sk#69]
            :        :        +- Filter (((isnotnull(t_time#72) AND (t_time#72 >= 30838)) AND (t_time#72 <= 59638)) AND isnotnull(t_time_sk#69))
            :        :           +- Relation[t_time_sk#69,t_time_id#120,t_time#72,t_hour#121,t_minute#122,t_second#123,t_am_pm#124,t_shift#125,t_sub_shift#126,t_meal_time#127] parquet
            :        +- Project [sm_ship_mode_sk#71]
            :           +- Filter (sm_carrier#73 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#71))
            :              +- Relation[sm_ship_mode_sk#71,sm_ship_mode_id#128,sm_type#129,sm_code#130,sm_carrier#73,sm_contract#131] parquet
            +- Aggregate [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], [w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, DHL,BARIAN AS ship_carriers#138, d_year#59 AS year#139, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_sales#140, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_sales#141, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_sales#142, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_sales#143, sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS may_sales#144, sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jun_sales#145, sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jul_sales#146, sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS aug_sales#147, sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS sep_sales#148, sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS oct_sales#149, sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS nov_sales#150, sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS dec_sales#151, sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS jan_net#152, sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS feb_net#153, sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS mar_net#154, sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END) AS apr_net#155, ... 8 more fields]
               +- Project [cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                  +- Join Inner, (cs_ship_mode_sk#162 = sm_ship_mode_sk#71)
                     :- Project [cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                     :  +- Join Inner, (cs_sold_time_sk#161 = t_time_sk#69)
                     :     :- Project [cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                     :     :  +- Join Inner, (cs_sold_date_sk#160 = d_date_sk#67)
                     :     :     :- Project [cs_sold_date_sk#160, cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
                     :     :     :  +- Join Inner, (cs_warehouse_sk#159 = w_warehouse_sk#65)
                     :     :     :     :- Project [cs_sold_date_sk#160, cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_warehouse_sk#159, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158]
                     :     :     :     :  +- Filter (((isnotnull(cs_warehouse_sk#159) AND isnotnull(cs_sold_date_sk#160)) AND isnotnull(cs_sold_time_sk#161)) AND isnotnull(cs_ship_mode_sk#162))
                     :     :     :     :     +- Relation[cs_sold_date_sk#160,cs_sold_time_sk#161,cs_ship_date_sk#163,cs_bill_customer_sk#164,cs_bill_cdemo_sk#165,cs_bill_hdemo_sk#166,cs_bill_addr_sk#167,cs_ship_customer_sk#168,cs_ship_cdemo_sk#169,cs_ship_hdemo_sk#170,cs_ship_addr_sk#171,cs_call_center_sk#172,cs_catalog_page_sk#173,cs_ship_mode_sk#162,cs_warehouse_sk#159,cs_item_sk#174,cs_promo_sk#175,cs_order_number#176,cs_quantity#157,cs_wholesale_cost#177,cs_list_price#178,cs_sales_price#156,cs_ext_discount_amt#179,cs_ext_sales_price#180,... 10 more fields] parquet
                     :     :     :     +- Project [w_warehouse_sk#65, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
                     :     :     :        +- Filter isnotnull(w_warehouse_sk#65)
                     :     :     :           +- Relation[w_warehouse_sk#65,w_warehouse_id#92,w_warehouse_name#53,w_warehouse_sq_ft#54,w_street_number#93,w_street_name#94,w_street_type#95,w_suite_number#96,w_city#55,w_county#56,w_state#57,w_zip#97,w_country#58,w_gmt_offset#98] parquet
                     :     :     +- Project [d_date_sk#67, d_year#59, d_moy#60]
                     :     :        +- Filter ((isnotnull(d_year#59) AND (d_year#59 = 2001)) AND isnotnull(d_date_sk#67))
                     :     :           +- Relation[d_date_sk#67,d_date_id#99,d_date#100,d_month_seq#101,d_week_seq#102,d_quarter_seq#103,d_year#59,d_dow#104,d_moy#60,d_dom#105,d_qoy#106,d_fy_year#107,d_fy_quarter_seq#108,d_fy_week_seq#109,d_day_name#110,d_quarter_name#111,d_holiday#112,d_weekend#113,d_following_holiday#114,d_first_dom#115,d_last_dom#116,d_same_day_ly#117,d_same_day_lq#118,d_current_day#119,... 4 more fields] parquet
                     :     +- Project [t_time_sk#69]
                     :        +- Filter (((isnotnull(t_time#72) AND (t_time#72 >= 30838)) AND (t_time#72 <= 59638)) AND isnotnull(t_time_sk#69))
                     :           +- Relation[t_time_sk#69,t_time_id#120,t_time#72,t_hour#121,t_minute#122,t_second#123,t_am_pm#124,t_shift#125,t_sub_shift#126,t_meal_time#127] parquet
                     +- Project [sm_ship_mode_sk#71]
                        +- Filter (sm_carrier#73 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#71))
                           +- Relation[sm_ship_mode_sk#71,sm_ship_mode_id#128,sm_type#129,sm_code#130,sm_carrier#73,sm_contract#131] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#53 ASC NULLS FIRST], output=[w_warehouse_name#53,w_warehouse_sq_ft#54,w_city#55,w_county#56,w_state#57,w_country#58,ship_carriers#17,year#18,jan_sales#1,feb_sales#2,mar_sales#3,apr_sales#4,may_sales#5,jun_sales#6,jul_sales#7,aug_sales#8,sep_sales#9,oct_sales#10,nov_sales#11,dec_sales#12,jan_sales_per_sq_foot#13,feb_sales_per_sq_foot#14,mar_sales_per_sq_foot#15,apr_sales_per_sq_foot#16,... 20 more fields])
+- *(14) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18], functions=[sum(jan_sales#19), sum(feb_sales#20), sum(mar_sales#21), sum(apr_sales#22), sum(may_sales#23), sum(jun_sales#24), sum(jul_sales#25), sum(aug_sales#26), sum(sep_sales#27), sum(oct_sales#28), sum(nov_sales#29), sum(dec_sales#30), sum(CheckOverflow((promote_precision(jan_sales#19) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#20) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#21) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#22) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#23) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#24) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#25) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#26) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#27) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#28) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#29) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#30) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, jan_sales#1, feb_sales#2, mar_sales#3, apr_sales#4, may_sales#5, jun_sales#6, jul_sales#7, aug_sales#8, sep_sales#9, oct_sales#10, nov_sales#11, dec_sales#12, jan_sales_per_sq_foot#13, feb_sales_per_sq_foot#14, mar_sales_per_sq_foot#15, apr_sales_per_sq_foot#16, ... 20 more fields])
   +- Exchange hashpartitioning(w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, 5), true, [id=#181]
      +- *(13) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18], functions=[partial_sum(jan_sales#19), partial_sum(feb_sales#20), partial_sum(mar_sales#21), partial_sum(apr_sales#22), partial_sum(may_sales#23), partial_sum(jun_sales#24), partial_sum(jul_sales#25), partial_sum(aug_sales#26), partial_sum(sep_sales#27), partial_sum(oct_sales#28), partial_sum(nov_sales#29), partial_sum(dec_sales#30), partial_sum(CheckOverflow((promote_precision(jan_sales#19) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#20) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#21) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#22) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#23) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#24) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#25) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#26) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#27) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#28) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#29) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#30) / promote_precision(cast(cast(w_warehouse_sq_ft#54 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, sum#182, isEmpty#183, sum#184, isEmpty#185, sum#186, isEmpty#187, sum#188, isEmpty#189, sum#190, isEmpty#191, sum#192, isEmpty#193, sum#194, isEmpty#195, sum#196, isEmpty#197, ... 56 more fields])
         +- Union
            :- *(6) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], functions=[sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#17, year#18, jan_sales#19, feb_sales#20, mar_sales#21, apr_sales#22, may_sales#23, jun_sales#24, jul_sales#25, aug_sales#26, sep_sales#27, oct_sales#28, nov_sales#29, dec_sales#30, jan_net#31, feb_net#32, mar_net#33, apr_net#34, ... 8 more fields])
            :  +- Exchange hashpartitioning(w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, 5), true, [id=#198]
            :     +- *(5) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], functions=[partial_sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#61 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#63 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#62 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, sum#199, isEmpty#200, sum#201, isEmpty#202, sum#203, isEmpty#204, sum#205, isEmpty#206, sum#207, isEmpty#208, sum#209, isEmpty#210, sum#211, isEmpty#212, sum#213, isEmpty#214, sum#215, ... 31 more fields])
            :        +- *(5) Project [ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :           +- *(5) BroadcastHashJoin [ws_ship_mode_sk#70], [sm_ship_mode_sk#71], Inner, BuildRight, false
            :              :- *(5) Project [ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :              :  +- *(5) BroadcastHashJoin [ws_sold_time_sk#68], [t_time_sk#69], Inner, BuildRight, false
            :              :     :- *(5) Project [ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
            :              :     :  +- *(5) BroadcastHashJoin [ws_sold_date_sk#66], [d_date_sk#67], Inner, BuildRight, false
            :              :     :     :- *(5) Project [ws_sold_date_sk#66, ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
            :              :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#64], [w_warehouse_sk#65], Inner, BuildRight, false
            :              :     :     :     :- *(5) Project [ws_sold_date_sk#66, ws_sold_time_sk#68, ws_ship_mode_sk#70, ws_warehouse_sk#64, ws_quantity#62, ws_ext_sales_price#61, ws_net_paid#63]
            :              :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#64) AND isnotnull(ws_sold_date_sk#66)) AND isnotnull(ws_sold_time_sk#68)) AND isnotnull(ws_ship_mode_sk#70))
            :              :     :     :     :     +- *(5) ColumnarToRow
            :              :     :     :     :        +- FileScan parquet tpcds_sf1_parquet_stats.web_sales[ws_sold_date_sk#66,ws_sold_time_sk#68,ws_ship_mode_sk#70,ws_warehouse_sk#64,ws_quantity#62,ws_ext_sales_price#61,ws_net_paid#63] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#64), isnotnull(ws_sold_date_sk#66), isnotnull(ws_sold_time_sk#68), ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
            :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#216]
            :              :     :     :        +- *(1) Project [w_warehouse_sk#65, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
            :              :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#65)
            :              :     :     :              +- *(1) ColumnarToRow
            :              :     :     :                 +- FileScan parquet tpcds_sf1_parquet_stats.warehouse[w_warehouse_sk#65,w_warehouse_name#53,w_warehouse_sq_ft#54,w_city#55,w_county#56,w_state#57,w_country#58] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#65)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
            :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#217]
            :              :     :        +- *(2) Project [d_date_sk#67, d_year#59, d_moy#60]
            :              :     :           +- *(2) Filter ((isnotnull(d_year#59) AND (d_year#59 = 2001)) AND isnotnull(d_date_sk#67))
            :              :     :              +- *(2) ColumnarToRow
            :              :     :                 +- FileScan parquet tpcds_sf1_parquet_stats.date_dim[d_date_sk#67,d_year#59,d_moy#60] Batched: true, DataFilters: [isnotnull(d_year#59), (d_year#59 = 2001), isnotnull(d_date_sk#67)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#218]
            :              :        +- *(3) Project [t_time_sk#69]
            :              :           +- *(3) Filter (((isnotnull(t_time#72) AND (t_time#72 >= 30838)) AND (t_time#72 <= 59638)) AND isnotnull(t_time_sk#69))
            :              :              +- *(3) ColumnarToRow
            :              :                 +- FileScan parquet tpcds_sf1_parquet_stats.time_dim[t_time_sk#69,t_time#72] Batched: true, DataFilters: [isnotnull(t_time#72), (t_time#72 >= 30838), (t_time#72 <= 59638), isnotnull(t_time_sk#69)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
            :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#219]
            :                 +- *(4) Project [sm_ship_mode_sk#71]
            :                    +- *(4) Filter (sm_carrier#73 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#71))
            :                       +- *(4) ColumnarToRow
            :                          +- FileScan parquet tpcds_sf1_parquet_stats.ship_mode[sm_ship_mode_sk#71,sm_carrier#73] Batched: true, DataFilters: [sm_carrier#73 IN (DHL,BARIAN), isnotnull(sm_ship_mode_sk#71)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [In(sm_carrier, [DHL,BARIAN]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
            +- *(12) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], functions=[sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, ship_carriers#138, year#139, jan_sales#140, feb_sales#141, mar_sales#142, apr_sales#143, may_sales#144, jun_sales#145, jul_sales#146, aug_sales#147, sep_sales#148, oct_sales#149, nov_sales#150, dec_sales#151, jan_net#152, feb_net#153, mar_net#154, apr_net#155, ... 8 more fields])
               +- Exchange hashpartitioning(w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, 5), true, [id=#220]
                  +- *(11) HashAggregate(keys=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59], functions=[partial_sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#156 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#60 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#158 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#157 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, sum#221, isEmpty#222, sum#223, isEmpty#224, sum#225, isEmpty#226, sum#227, isEmpty#228, sum#229, isEmpty#230, sum#231, isEmpty#232, sum#233, isEmpty#234, sum#235, isEmpty#236, sum#237, ... 31 more fields])
                     +- *(11) Project [cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                        +- *(11) BroadcastHashJoin [cs_ship_mode_sk#162], [sm_ship_mode_sk#71], Inner, BuildRight, false
                           :- *(11) Project [cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                           :  +- *(11) BroadcastHashJoin [cs_sold_time_sk#161], [t_time_sk#69], Inner, BuildRight, false
                           :     :- *(11) Project [cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58, d_year#59, d_moy#60]
                           :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#160], [d_date_sk#67], Inner, BuildRight, false
                           :     :     :- *(11) Project [cs_sold_date_sk#160, cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58]
                           :     :     :  +- *(11) BroadcastHashJoin [cs_warehouse_sk#159], [w_warehouse_sk#65], Inner, BuildRight, false
                           :     :     :     :- *(11) Project [cs_sold_date_sk#160, cs_sold_time_sk#161, cs_ship_mode_sk#162, cs_warehouse_sk#159, cs_quantity#157, cs_sales_price#156, cs_net_paid_inc_tax#158]
                           :     :     :     :  +- *(11) Filter (((isnotnull(cs_warehouse_sk#159) AND isnotnull(cs_sold_date_sk#160)) AND isnotnull(cs_sold_time_sk#161)) AND isnotnull(cs_ship_mode_sk#162))
                           :     :     :     :     +- *(11) ColumnarToRow
                           :     :     :     :        +- FileScan parquet tpcds_sf1_parquet_stats.catalog_sales[cs_sold_date_sk#160,cs_sold_time_sk#161,cs_ship_mode_sk#162,cs_warehouse_sk#159,cs_quantity#157,cs_sales_price#156,cs_net_paid_inc_tax#158] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#159), isnotnull(cs_sold_date_sk#160), isnotnull(cs_sold_time_sk#161), ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                           :     :     :     +- ReusedExchange [w_warehouse_sk#65, w_warehouse_name#53, w_warehouse_sq_ft#54, w_city#55, w_county#56, w_state#57, w_country#58], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#216]
                           :     :     +- ReusedExchange [d_date_sk#67, d_year#59, d_moy#60], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#217]
                           :     +- ReusedExchange [t_time_sk#69], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#218]
                           +- ReusedExchange [sm_ship_mode_sk#71], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#219]

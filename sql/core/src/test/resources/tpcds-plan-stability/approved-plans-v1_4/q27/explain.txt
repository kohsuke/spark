== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['i_item_id ASC NULLS FIRST, 's_state ASC NULLS FIRST], true
      +- 'Aggregate ['ROLLUP('i_item_id, 's_state)], ['i_item_id, 's_state, 'grouping('s_state) AS g_state#1, 'avg('ss_quantity) AS agg1#2, 'avg('ss_list_price) AS agg2#3, 'avg('ss_coupon_amt) AS agg3#4, 'avg('ss_sales_price) AS agg4#5]
         +- 'Filter ((((('ss_sold_date_sk = 'd_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND ('ss_store_sk = 's_store_sk)) AND (('ss_cdemo_sk = 'cd_demo_sk) AND ('cd_gender = M))) AND ((('cd_marital_status = S) AND ('cd_education_status = College)) AND (('d_year = 2002) AND 's_state IN (TN,TN,TN,TN,TN,TN))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join Inner
               :  :  :  :- 'UnresolvedRelation [store_sales]
               :  :  :  +- 'UnresolvedRelation [customer_demographics]
               :  :  +- 'UnresolvedRelation [date_dim]
               :  +- 'UnresolvedRelation [store]
               +- 'UnresolvedRelation [item]

== Analyzed Logical Plan ==
i_item_id: string, s_state: string, g_state: tinyint, agg1: double, agg2: decimal(11,6), agg3: decimal(11,6), agg4: decimal(11,6)
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#6 ASC NULLS FIRST, s_state#7 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#6, s_state#7, spark_grouping_id#8], [i_item_id#6, s_state#7, cast((shiftright(spark_grouping_id#8, 0) & 1) as tinyint) AS g_state#1, avg(cast(ss_quantity#9 as bigint)) AS agg1#2, avg(ss_list_price#10) AS agg2#3, avg(ss_coupon_amt#11) AS agg3#4, avg(ss_sales_price#12) AS agg4#5]
         +- Expand [List(ss_sold_date_sk#13, ss_sold_time_sk#14, ss_item_sk#15, ss_customer_sk#16, ss_cdemo_sk#17, ss_hdemo_sk#18, ss_addr_sk#19, ss_store_sk#20, ss_promo_sk#21, ss_ticket_number#22, ss_quantity#9, ss_wholesale_cost#23, ss_list_price#10, ss_sales_price#12, ss_ext_discount_amt#24, ss_ext_sales_price#25, ss_ext_wholesale_cost#26, ss_ext_list_price#27, ss_ext_tax#28, ss_coupon_amt#11, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, cd_demo_sk#32, cd_gender#33, cd_marital_status#34, cd_education_status#35, cd_purchase_estimate#36, cd_credit_rating#37, cd_dep_count#38, cd_dep_employed_count#39, cd_dep_college_count#40, d_date_sk#41, d_date_id#42, d_date#43, d_month_seq#44, d_week_seq#45, d_quarter_seq#46, d_year#47, d_dow#48, d_moy#49, d_dom#50, d_qoy#51, d_fy_year#52, d_fy_quarter_seq#53, d_fy_week_seq#54, d_day_name#55, d_quarter_name#56, d_holiday#57, d_weekend#58, d_following_holiday#59, d_first_dom#60, d_last_dom#61, d_same_day_ly#62, d_same_day_lq#63, d_current_day#64, d_current_week#65, d_current_month#66, d_current_quarter#67, d_current_year#68, s_store_sk#69, s_store_id#70, s_rec_start_date#71, s_rec_end_date#72, s_closed_date_sk#73, s_store_name#74, s_number_employees#75, s_floor_space#76, s_hours#77, s_manager#78, s_market_id#79, s_geography_class#80, s_market_desc#81, s_market_manager#82, s_division_id#83, s_division_name#84, s_company_id#85, s_company_name#86, s_street_number#87, s_street_name#88, s_street_type#89, s_suite_number#90, s_city#91, s_county#92, s_state#93, s_zip#94, s_country#95, s_gmt_offset#96, s_tax_percentage#97, i_item_sk#98, i_item_id#99, i_rec_start_date#100, i_rec_end_date#101, i_item_desc#102, i_current_price#103, i_wholesale_cost#104, i_brand_id#105, i_brand#106, i_class_id#107, i_class#108, i_category_id#109, i_category#110, i_manufact_id#111, i_manufact#112, i_size#113, i_formulation#114, i_color#115, i_units#116, i_container#117, i_manager_id#118, i_product_name#119, i_item_id#120, s_state#121, 0), List(ss_sold_date_sk#13, ss_sold_time_sk#14, ss_item_sk#15, ss_customer_sk#16, ss_cdemo_sk#17, ss_hdemo_sk#18, ss_addr_sk#19, ss_store_sk#20, ss_promo_sk#21, ss_ticket_number#22, ss_quantity#9, ss_wholesale_cost#23, ss_list_price#10, ss_sales_price#12, ss_ext_discount_amt#24, ss_ext_sales_price#25, ss_ext_wholesale_cost#26, ss_ext_list_price#27, ss_ext_tax#28, ss_coupon_amt#11, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, cd_demo_sk#32, cd_gender#33, cd_marital_status#34, cd_education_status#35, cd_purchase_estimate#36, cd_credit_rating#37, cd_dep_count#38, cd_dep_employed_count#39, cd_dep_college_count#40, d_date_sk#41, d_date_id#42, d_date#43, d_month_seq#44, d_week_seq#45, d_quarter_seq#46, d_year#47, d_dow#48, d_moy#49, d_dom#50, d_qoy#51, d_fy_year#52, d_fy_quarter_seq#53, d_fy_week_seq#54, d_day_name#55, d_quarter_name#56, d_holiday#57, d_weekend#58, d_following_holiday#59, d_first_dom#60, d_last_dom#61, d_same_day_ly#62, d_same_day_lq#63, d_current_day#64, d_current_week#65, d_current_month#66, d_current_quarter#67, d_current_year#68, s_store_sk#69, s_store_id#70, s_rec_start_date#71, s_rec_end_date#72, s_closed_date_sk#73, s_store_name#74, s_number_employees#75, s_floor_space#76, s_hours#77, s_manager#78, s_market_id#79, s_geography_class#80, s_market_desc#81, s_market_manager#82, s_division_id#83, s_division_name#84, s_company_id#85, s_company_name#86, s_street_number#87, s_street_name#88, s_street_type#89, s_suite_number#90, s_city#91, s_county#92, s_state#93, s_zip#94, s_country#95, s_gmt_offset#96, s_tax_percentage#97, i_item_sk#98, i_item_id#99, i_rec_start_date#100, i_rec_end_date#101, i_item_desc#102, i_current_price#103, i_wholesale_cost#104, i_brand_id#105, i_brand#106, i_class_id#107, i_class#108, i_category_id#109, i_category#110, i_manufact_id#111, i_manufact#112, i_size#113, i_formulation#114, i_color#115, i_units#116, i_container#117, i_manager_id#118, i_product_name#119, i_item_id#120, null, 1), List(ss_sold_date_sk#13, ss_sold_time_sk#14, ss_item_sk#15, ss_customer_sk#16, ss_cdemo_sk#17, ss_hdemo_sk#18, ss_addr_sk#19, ss_store_sk#20, ss_promo_sk#21, ss_ticket_number#22, ss_quantity#9, ss_wholesale_cost#23, ss_list_price#10, ss_sales_price#12, ss_ext_discount_amt#24, ss_ext_sales_price#25, ss_ext_wholesale_cost#26, ss_ext_list_price#27, ss_ext_tax#28, ss_coupon_amt#11, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, cd_demo_sk#32, cd_gender#33, cd_marital_status#34, cd_education_status#35, cd_purchase_estimate#36, cd_credit_rating#37, cd_dep_count#38, cd_dep_employed_count#39, cd_dep_college_count#40, d_date_sk#41, d_date_id#42, d_date#43, d_month_seq#44, d_week_seq#45, d_quarter_seq#46, d_year#47, d_dow#48, d_moy#49, d_dom#50, d_qoy#51, d_fy_year#52, d_fy_quarter_seq#53, d_fy_week_seq#54, d_day_name#55, d_quarter_name#56, d_holiday#57, d_weekend#58, d_following_holiday#59, d_first_dom#60, d_last_dom#61, d_same_day_ly#62, d_same_day_lq#63, d_current_day#64, d_current_week#65, d_current_month#66, d_current_quarter#67, d_current_year#68, s_store_sk#69, s_store_id#70, s_rec_start_date#71, s_rec_end_date#72, s_closed_date_sk#73, s_store_name#74, s_number_employees#75, s_floor_space#76, s_hours#77, s_manager#78, s_market_id#79, s_geography_class#80, s_market_desc#81, s_market_manager#82, s_division_id#83, s_division_name#84, s_company_id#85, s_company_name#86, s_street_number#87, s_street_name#88, s_street_type#89, s_suite_number#90, s_city#91, s_county#92, s_state#93, s_zip#94, s_country#95, s_gmt_offset#96, s_tax_percentage#97, i_item_sk#98, i_item_id#99, i_rec_start_date#100, i_rec_end_date#101, i_item_desc#102, i_current_price#103, i_wholesale_cost#104, i_brand_id#105, i_brand#106, i_class_id#107, i_class#108, i_category_id#109, i_category#110, i_manufact_id#111, i_manufact#112, i_size#113, i_formulation#114, i_color#115, i_units#116, i_container#117, i_manager_id#118, i_product_name#119, null, null, 3)], [ss_sold_date_sk#13, ss_sold_time_sk#14, ss_item_sk#15, ss_customer_sk#16, ss_cdemo_sk#17, ss_hdemo_sk#18, ss_addr_sk#19, ss_store_sk#20, ss_promo_sk#21, ss_ticket_number#22, ss_quantity#9, ss_wholesale_cost#23, ss_list_price#10, ss_sales_price#12, ss_ext_discount_amt#24, ss_ext_sales_price#25, ss_ext_wholesale_cost#26, ss_ext_list_price#27, ss_ext_tax#28, ss_coupon_amt#11, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, cd_demo_sk#32, ... 90 more fields]
            +- Project [ss_sold_date_sk#13, ss_sold_time_sk#14, ss_item_sk#15, ss_customer_sk#16, ss_cdemo_sk#17, ss_hdemo_sk#18, ss_addr_sk#19, ss_store_sk#20, ss_promo_sk#21, ss_ticket_number#22, ss_quantity#9, ss_wholesale_cost#23, ss_list_price#10, ss_sales_price#12, ss_ext_discount_amt#24, ss_ext_sales_price#25, ss_ext_wholesale_cost#26, ss_ext_list_price#27, ss_ext_tax#28, ss_coupon_amt#11, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, cd_demo_sk#32, ... 89 more fields]
               +- Filter (((((ss_sold_date_sk#13 = d_date_sk#41) AND (ss_item_sk#15 = i_item_sk#98)) AND (ss_store_sk#20 = s_store_sk#69)) AND ((ss_cdemo_sk#17 = cd_demo_sk#32) AND (cd_gender#33 = M))) AND (((cd_marital_status#34 = S) AND (cd_education_status#35 = College)) AND ((d_year#47 = 2002) AND s_state#93 IN (TN,TN,TN,TN,TN,TN))))
                  +- Join Inner
                     :- Join Inner
                     :  :- Join Inner
                     :  :  :- Join Inner
                     :  :  :  :- SubqueryAlias spark_catalog.default.store_sales
                     :  :  :  :  +- Relation[ss_sold_date_sk#13,ss_sold_time_sk#14,ss_item_sk#15,ss_customer_sk#16,ss_cdemo_sk#17,ss_hdemo_sk#18,ss_addr_sk#19,ss_store_sk#20,ss_promo_sk#21,ss_ticket_number#22,ss_quantity#9,ss_wholesale_cost#23,ss_list_price#10,ss_sales_price#12,ss_ext_discount_amt#24,ss_ext_sales_price#25,ss_ext_wholesale_cost#26,ss_ext_list_price#27,ss_ext_tax#28,ss_coupon_amt#11,ss_net_paid#29,ss_net_paid_inc_tax#30,ss_net_profit#31] parquet
                     :  :  :  +- SubqueryAlias spark_catalog.default.customer_demographics
                     :  :  :     +- Relation[cd_demo_sk#32,cd_gender#33,cd_marital_status#34,cd_education_status#35,cd_purchase_estimate#36,cd_credit_rating#37,cd_dep_count#38,cd_dep_employed_count#39,cd_dep_college_count#40] parquet
                     :  :  +- SubqueryAlias spark_catalog.default.date_dim
                     :  :     +- Relation[d_date_sk#41,d_date_id#42,d_date#43,d_month_seq#44,d_week_seq#45,d_quarter_seq#46,d_year#47,d_dow#48,d_moy#49,d_dom#50,d_qoy#51,d_fy_year#52,d_fy_quarter_seq#53,d_fy_week_seq#54,d_day_name#55,d_quarter_name#56,d_holiday#57,d_weekend#58,d_following_holiday#59,d_first_dom#60,d_last_dom#61,d_same_day_ly#62,d_same_day_lq#63,d_current_day#64,... 4 more fields] parquet
                     :  +- SubqueryAlias spark_catalog.default.store
                     :     +- Relation[s_store_sk#69,s_store_id#70,s_rec_start_date#71,s_rec_end_date#72,s_closed_date_sk#73,s_store_name#74,s_number_employees#75,s_floor_space#76,s_hours#77,s_manager#78,s_market_id#79,s_geography_class#80,s_market_desc#81,s_market_manager#82,s_division_id#83,s_division_name#84,s_company_id#85,s_company_name#86,s_street_number#87,s_street_name#88,s_street_type#89,s_suite_number#90,s_city#91,s_county#92,... 5 more fields] parquet
                     +- SubqueryAlias spark_catalog.default.item
                        +- Relation[i_item_sk#98,i_item_id#99,i_rec_start_date#100,i_rec_end_date#101,i_item_desc#102,i_current_price#103,i_wholesale_cost#104,i_brand_id#105,i_brand#106,i_class_id#107,i_class#108,i_category_id#109,i_category#110,i_manufact_id#111,i_manufact#112,i_size#113,i_formulation#114,i_color#115,i_units#116,i_container#117,i_manager_id#118,i_product_name#119] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#6 ASC NULLS FIRST, s_state#7 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#6, s_state#7, spark_grouping_id#8], [i_item_id#6, s_state#7, cast((shiftright(spark_grouping_id#8, 0) & 1) as tinyint) AS g_state#1, avg(cast(ss_quantity#9 as bigint)) AS agg1#2, cast((avg(UnscaledValue(ss_list_price#10)) / 100.0) as decimal(11,6)) AS agg2#3, cast((avg(UnscaledValue(ss_coupon_amt#11)) / 100.0) as decimal(11,6)) AS agg3#4, cast((avg(UnscaledValue(ss_sales_price#12)) / 100.0) as decimal(11,6)) AS agg4#5]
         +- Expand [List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, s_state#93, 0), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, null, 1), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, null, null, 3)], [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#6, s_state#7, spark_grouping_id#8]
            +- Project [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, s_state#93]
               +- Join Inner, (ss_item_sk#15 = i_item_sk#98)
                  :- Project [ss_item_sk#15, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, s_state#93]
                  :  +- Join Inner, (ss_store_sk#20 = s_store_sk#69)
                  :     :- Project [ss_item_sk#15, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :  +- Join Inner, (ss_sold_date_sk#13 = d_date_sk#41)
                  :     :     :- Project [ss_sold_date_sk#13, ss_item_sk#15, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :  +- Join Inner, (ss_cdemo_sk#17 = cd_demo_sk#32)
                  :     :     :     :- Project [ss_sold_date_sk#13, ss_item_sk#15, ss_cdemo_sk#17, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :     :  +- Filter (((isnotnull(ss_cdemo_sk#17) AND isnotnull(ss_sold_date_sk#13)) AND isnotnull(ss_store_sk#20)) AND isnotnull(ss_item_sk#15))
                  :     :     :     :     +- Relation[ss_sold_date_sk#13,ss_sold_time_sk#14,ss_item_sk#15,ss_customer_sk#16,ss_cdemo_sk#17,ss_hdemo_sk#18,ss_addr_sk#19,ss_store_sk#20,ss_promo_sk#21,ss_ticket_number#22,ss_quantity#9,ss_wholesale_cost#23,ss_list_price#10,ss_sales_price#12,ss_ext_discount_amt#24,ss_ext_sales_price#25,ss_ext_wholesale_cost#26,ss_ext_list_price#27,ss_ext_tax#28,ss_coupon_amt#11,ss_net_paid#29,ss_net_paid_inc_tax#30,ss_net_profit#31] parquet
                  :     :     :     +- Project [cd_demo_sk#32]
                  :     :     :        +- Filter ((((((isnotnull(cd_marital_status#34) AND isnotnull(cd_gender#33)) AND isnotnull(cd_education_status#35)) AND (cd_gender#33 = M)) AND (cd_marital_status#34 = S)) AND (cd_education_status#35 = College)) AND isnotnull(cd_demo_sk#32))
                  :     :     :           +- Relation[cd_demo_sk#32,cd_gender#33,cd_marital_status#34,cd_education_status#35,cd_purchase_estimate#36,cd_credit_rating#37,cd_dep_count#38,cd_dep_employed_count#39,cd_dep_college_count#40] parquet
                  :     :     +- Project [d_date_sk#41]
                  :     :        +- Filter ((isnotnull(d_year#47) AND (d_year#47 = 2002)) AND isnotnull(d_date_sk#41))
                  :     :           +- Relation[d_date_sk#41,d_date_id#42,d_date#43,d_month_seq#44,d_week_seq#45,d_quarter_seq#46,d_year#47,d_dow#48,d_moy#49,d_dom#50,d_qoy#51,d_fy_year#52,d_fy_quarter_seq#53,d_fy_week_seq#54,d_day_name#55,d_quarter_name#56,d_holiday#57,d_weekend#58,d_following_holiday#59,d_first_dom#60,d_last_dom#61,d_same_day_ly#62,d_same_day_lq#63,d_current_day#64,... 4 more fields] parquet
                  :     +- Project [s_store_sk#69, s_state#93]
                  :        +- Filter ((isnotnull(s_state#93) AND (s_state#93 = TN)) AND isnotnull(s_store_sk#69))
                  :           +- Relation[s_store_sk#69,s_store_id#70,s_rec_start_date#71,s_rec_end_date#72,s_closed_date_sk#73,s_store_name#74,s_number_employees#75,s_floor_space#76,s_hours#77,s_manager#78,s_market_id#79,s_geography_class#80,s_market_desc#81,s_market_manager#82,s_division_id#83,s_division_name#84,s_company_id#85,s_company_name#86,s_street_number#87,s_street_name#88,s_street_type#89,s_suite_number#90,s_city#91,s_county#92,... 5 more fields] parquet
                  +- Project [i_item_sk#98, i_item_id#99]
                     +- Filter isnotnull(i_item_sk#98)
                        +- Relation[i_item_sk#98,i_item_id#99,i_rec_start_date#100,i_rec_end_date#101,i_item_desc#102,i_current_price#103,i_wholesale_cost#104,i_brand_id#105,i_brand#106,i_class_id#107,i_class#108,i_category_id#109,i_category#110,i_manufact_id#111,i_manufact#112,i_size#113,i_formulation#114,i_color#115,i_units#116,i_container#117,i_manager_id#118,i_product_name#119] parquet

== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_item_id#6 ASC NULLS FIRST,s_state#7 ASC NULLS FIRST], output=[i_item_id#6,s_state#7,g_state#1,agg1#2,agg2#3,agg3#4,agg4#5])
+- *(6) HashAggregate(keys=[i_item_id#6, s_state#7, spark_grouping_id#8], functions=[avg(cast(ss_quantity#9 as bigint)), avg(UnscaledValue(ss_list_price#10)), avg(UnscaledValue(ss_coupon_amt#11)), avg(UnscaledValue(ss_sales_price#12))], output=[i_item_id#6, s_state#7, g_state#1, agg1#2, agg2#3, agg3#4, agg4#5])
   +- Exchange hashpartitioning(i_item_id#6, s_state#7, spark_grouping_id#8, 5), true, [id=#122]
      +- *(5) HashAggregate(keys=[i_item_id#6, s_state#7, spark_grouping_id#8], functions=[partial_avg(cast(ss_quantity#9 as bigint)), partial_avg(UnscaledValue(ss_list_price#10)), partial_avg(UnscaledValue(ss_coupon_amt#11)), partial_avg(UnscaledValue(ss_sales_price#12))], output=[i_item_id#6, s_state#7, spark_grouping_id#8, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130])
         +- *(5) Expand [List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, s_state#93, 0), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, null, 1), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, null, null, 3)], [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#6, s_state#7, spark_grouping_id#8]
            +- *(5) Project [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#99, s_state#93]
               +- *(5) BroadcastHashJoin [ss_item_sk#15], [i_item_sk#98], Inner, BuildRight, false
                  :- *(5) Project [ss_item_sk#15, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, s_state#93]
                  :  +- *(5) BroadcastHashJoin [ss_store_sk#20], [s_store_sk#69], Inner, BuildRight, false
                  :     :- *(5) Project [ss_item_sk#15, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#13], [d_date_sk#41], Inner, BuildRight, false
                  :     :     :- *(5) Project [ss_sold_date_sk#13, ss_item_sk#15, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#17], [cd_demo_sk#32], Inner, BuildRight, false
                  :     :     :     :- *(5) Project [ss_sold_date_sk#13, ss_item_sk#15, ss_cdemo_sk#17, ss_store_sk#20, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#17) AND isnotnull(ss_sold_date_sk#13)) AND isnotnull(ss_store_sk#20)) AND isnotnull(ss_item_sk#15))
                  :     :     :     :     +- *(5) ColumnarToRow
                  :     :     :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#13,ss_item_sk#15,ss_cdemo_sk#17,ss_store_sk#20,ss_quantity#9,ss_list_price#10,ss_sales_price#12,ss_coupon_amt#11] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#17), isnotnull(ss_sold_date_sk#13), isnotnull(ss_store_sk#20), isnotnul..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#131]
                  :     :     :        +- *(1) Project [cd_demo_sk#32]
                  :     :     :           +- *(1) Filter ((((((isnotnull(cd_marital_status#34) AND isnotnull(cd_gender#33)) AND isnotnull(cd_education_status#35)) AND (cd_gender#33 = M)) AND (cd_marital_status#34 = S)) AND (cd_education_status#35 = College)) AND isnotnull(cd_demo_sk#32))
                  :     :     :              +- *(1) ColumnarToRow
                  :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#32,cd_gender#33,cd_marital_status#34,cd_education_status#35] Batched: true, DataFilters: [isnotnull(cd_marital_status#34), isnotnull(cd_gender#33), isnotnull(cd_education_status#35), ..., Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(cd_marital_status), IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#132]
                  :     :        +- *(2) Project [d_date_sk#41]
                  :     :           +- *(2) Filter ((isnotnull(d_year#47) AND (d_year#47 = 2002)) AND isnotnull(d_date_sk#41))
                  :     :              +- *(2) ColumnarToRow
                  :     :                 +- FileScan parquet default.date_dim[d_date_sk#41,d_year#47] Batched: true, DataFilters: [isnotnull(d_year#47), (d_year#47 = 2002), isnotnull(d_date_sk#41)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#133]
                  :        +- *(3) Project [s_store_sk#69, s_state#93]
                  :           +- *(3) Filter ((isnotnull(s_state#93) AND (s_state#93 = TN)) AND isnotnull(s_store_sk#69))
                  :              +- *(3) ColumnarToRow
                  :                 +- FileScan parquet default.store[s_store_sk#69,s_state#93] Batched: true, DataFilters: [isnotnull(s_state#93), (s_state#93 = TN), isnotnull(s_store_sk#69)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#134]
                     +- *(4) Project [i_item_sk#98, i_item_id#99]
                        +- *(4) Filter isnotnull(i_item_sk#98)
                           +- *(4) ColumnarToRow
                              +- FileScan parquet default.item[i_item_sk#98,i_item_id#99] Batched: true, DataFilters: [isnotnull(i_item_sk#98)], Format: Parquet, Location: InMemoryFileIndex[file:/Users/yi.wu/IdeaProjects/spark/sql/core/spark-warehouse/org.apache.spark...., PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>

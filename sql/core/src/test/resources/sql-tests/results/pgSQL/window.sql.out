-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 99


-- !query 0
CREATE TABLE empsalary (
    depname string,
    empno integer,
    salary int,
    enroll_date date
) USING parquet
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
INSERT INTO empsalary VALUES
('develop', 10, 5200, '2007-08-01'),
('sales', 1, 5000, '2006-10-01'),
('personnel', 5, 3500, '2007-12-10'),
('sales', 4, 4800, '2007-08-08'),
('personnel', 2, 3900, '2006-12-23'),
('develop', 7, 4200, '2008-01-01'),
('develop', 9, 4500, '2008-01-01'),
('sales', 3, 4800, '2007-08-01'),
('develop', 8, 6000, '2006-10-01'),
('develop', 11, 5200, '2007-08-15')
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary
-- !query 2 schema
struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 2 output
develop	7	4200	25100
develop	9	4500	25100
develop	10	5200	25100
develop	11	5200	25100
develop	8	6000	25100
personnel	5	3500	7400
personnel	2	3900	7400
sales	4	4800	14600
sales	3	4800	14600
sales	1	5000	14600


-- !query 3
SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary
-- !query 3 schema
struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 3 output
develop	10	5200	3
develop	11	5200	3
develop	7	4200	1
develop	8	6000	5
develop	9	4500	2
personnel	2	3900	2
personnel	5	3500	1
sales	1	5000	3
sales	3	4800	1
sales	4	4800	1


-- !query 4
SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1
GROUP BY four, ten ORDER BY four, ten
-- !query 4 schema
struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>
-- !query 4 output
0	0	0	0.0
0	2	0	2.0
0	4	0	4.0
0	6	0	6.0
0	8	0	8.0
1	1	2500	1.0
1	3	2500	3.0
1	5	2500	5.0
1	7	2500	7.0
1	9	2500	9.0
2	0	5000	0.0
2	2	5000	2.0
2	4	5000	4.0
2	6	5000	6.0
2	8	5000	8.0
3	1	7500	1.0
3	3	7500	3.0
3	5	7500	5.0
3	7	7500	7.0
3	9	7500	9.0


-- !query 5
SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)
-- !query 5 schema
struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 5 output
develop	10	5200	25100
develop	11	5200	25100
develop	7	4200	25100
develop	8	6000	25100
develop	9	4500	25100
personnel	2	3900	7400
personnel	5	3500	7400
sales	1	5000	14600
sales	3	4800	14600
sales	4	4800	14600


-- !query 6
SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10
-- !query 6 schema
struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 6 output
10
10
10
10
10
10
10
10
10
10


-- !query 7
SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()
-- !query 7 schema
struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 7 output
10
10
10
10
10
10
10
10
10
10


-- !query 8
SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)
-- !query 8 schema
struct<four:int>
-- !query 8 output



-- !query 9
SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10
-- !query 9 schema
struct<sum_1:bigint,ten:int,four:int>
-- !query 9 output
0	0	0
0	0	0
0	4	0
1	7	1
1	9	1
2	0	2
3	1	3
3	3	3
4	1	1
5	1	1


-- !query 10
SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10
-- !query 10 schema
struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 10 output
1
10
2
3
4
5
6
7
8
9


-- !query 11
SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10
-- !query 11 schema
struct<rank_1:int,ten:int,four:int>
-- !query 11 output
1	0	0
1	0	0
1	0	2
1	1	1
1	1	1
1	1	3
2	3	3
3	4	0
3	7	1
4	9	1


-- !query 12
SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 12 schema
struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 12 output
1	0	0
1	0	0
1	0	2
1	1	1
1	1	1
1	1	3
2	3	3
2	4	0
2	7	1
3	9	1


-- !query 13
SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 13 schema
struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>
-- !query 13 output
0.0	0	0
0.0	0	0
0.0	0	2
0.0	1	1
0.0	1	1
0.0	1	3
0.6666666666666666	7	1
1.0	3	3
1.0	4	0
1.0	9	1


-- !query 14
SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 14 schema
struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>
-- !query 14 output
0.5	1	1
0.5	1	1
0.5	1	3
0.6666666666666666	0	0
0.6666666666666666	0	0
0.75	7	1
1.0	0	2
1.0	3	3
1.0	4	0
1.0	9	1


-- !query 15
SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 15 schema
struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 15 output
1	0	0
1	0	0
1	0	2
1	1	1
2	1	1
2	1	3
2	3	3
3	4	0
3	7	1
3	9	1


-- !query 16
SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 16 schema
struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>
-- !query 16 output
0	0	0
0	4	0
1	1	1
1	3	3
1	7	1
7	9	1
NULL	0	0
NULL	0	2
NULL	1	1
NULL	1	3


-- !query 17
SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 17 schema
struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 17 output
0	0	0
1	1	1
3	1	3
4	0	0
7	1	1
9	7	1
NULL	0	2
NULL	3	3
NULL	4	0
NULL	9	1


-- !query 18
SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 18 schema
struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 18 output
0	0	0
14	1	1
18	7	1
2	1	1
6	1	3
8	0	0
NULL	0	2
NULL	3	3
NULL	4	0
NULL	9	1


-- !query 19
SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 19 schema
struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 19 output
-1	0	2
-1	3	3
-1	4	0
-1	9	1
0	0	0
14	1	1
18	7	1
2	1	1
6	1	3
8	0	0


-- !query 20
SELECT first_value(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 20 schema
struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 20 output
0	0	0
0	0	0
0	0	2
0	4	0
1	1	1
1	1	1
1	1	3
1	3	3
1	7	1
1	9	1


-- !query 21
SELECT last_value(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 21 schema
struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 21 output
0	4	0
1	1	1
1	1	1
1	1	3
1	7	1
1	9	1
2	0	0
2	0	0
2	0	2
3	3	3


-- !query 22
SELECT last_value(ten) OVER (PARTITION BY four), ten, four FROM
(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s
ORDER BY four, ten
-- !query 22 schema
struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>
-- !query 22 output
4	0	0
4	0	0
4	4	0
9	1	1
9	1	1
9	7	1
9	9	1
0	0	2
3	1	3
3	3	3


-- !query 23
SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum
FROM tenk1 GROUP BY ten, two
-- !query 23 schema
struct<ten:int,two:int,gsum:bigint,wsum:bigint>
-- !query 23 output
0	0	45000	45000
1	1	46000	46000
2	0	47000	92000
3	1	48000	94000
4	0	49000	141000
5	1	50000	144000
6	0	51000	192000
7	1	52000	196000
8	0	53000	245000
9	1	54000	250000


-- !query 24
SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10
-- !query 24 schema
struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>
-- !query 24 output
2	3
2	3
4	1
4	1
4	1
4	1


-- !query 25
SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +
  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum
  FROM tenk1 WHERE unique2 < 10
-- !query 25 schema
struct<cntsum:bigint>
-- !query 25 output
136
22
22
24
24
51
82
87
92
92


-- !query 26
SELECT * FROM(
  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +
    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,
    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,
    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum
    FROM tenk1
)sub WHERE total <> fourcount + twosum
-- !query 26 schema
struct<total:bigint,fourcount:bigint,twosum:bigint>
-- !query 26 output



-- !query 27
SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10
-- !query 27 schema
struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (CAST(thousand AS DOUBLE) / CAST(100 AS DOUBLE)) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>
-- !query 27 output
0.0
0.0
0.0
1.0
1.0
1.0
1.0
2.0
3.0
3.0


-- !query 28
SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum
FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)
-- !query 28 schema
struct<ten:int,two:int,gsum:bigint,wsum:bigint>
-- !query 28 output
0	0	45000	45000
1	1	46000	46000
2	0	47000	92000
3	1	48000	94000
4	0	49000	141000
5	1	50000	144000
6	0	51000	192000
7	1	52000	196000
8	0	53000	245000
9	1	54000	250000


-- !query 29
SELECT sum(salary),
row_number() OVER (ORDER BY depname),
sum(sum(salary)) OVER (ORDER BY depname DESC)
FROM empsalary GROUP BY depname
-- !query 29 schema
struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>
-- !query 29 output
14600	3	14600
25100	1	47100
7400	2	22000


-- !query 30
SELECT sum(salary) OVER w1, count(*) OVER w2
FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)
-- !query 30 schema
struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>
-- !query 30 output
11600	3
16100	4
25700	6
25700	6
30700	7
3500	1
41100	9
41100	9
47100	10
7400	2


-- !query 31
SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s
-- !query 31 schema
struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 31 output



-- !query 32
SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)
-- !query 32 schema
struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 32 output
14600	2
14600	2
16400	2
16400	2
20900	4
25100	5
3900	1
5000	1
6000	1
7400	2


-- !query 33
SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(
  SELECT *,
    CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(YEAR FROM enroll_date) END * 500 AS bonus,
    CASE WHEN
      AVG(salary) OVER (PARTITION BY depname) < salary
      THEN 200 END AS depadj FROM empsalary
    )s
-- !query 33 schema
struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>
-- !query 33 output
1	sales	5000	1000	200	1000	200
10	develop	5200	500	200	500	200
11	develop	5200	500	200	500	200
2	personnel	3900	1000	200	1000	200
3	sales	4800	500	NULL	500	200
4	sales	4800	500	NULL	500	200
5	personnel	3500	500	NULL	500	200
7	develop	4200	NULL	NULL	500	200
8	develop	6000	1000	200	500	200
9	develop	4500	NULL	NULL	500	200


-- !query 34
create temporary view int4_tbl as select * from values
  (0),
  (123456),
  (-123456),
  (2147483647),
  (-2147483647)
  as int4_tbl(f1)
-- !query 34 schema
struct<>
-- !query 34 output



-- !query 35
SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42
-- !query 35 schema
struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 35 output
0


-- !query 36
select ten,
  sum(unique1) + sum(unique2) as res,
  rank() over (order by sum(unique1) + sum(unique2)) as rank
from tenk1
group by ten order by ten
-- !query 36 schema
struct<ten:int,res:bigint,rank:int>
-- !query 36 output
0	9976146	4
1	10114187	9
2	10059554	8
3	9878541	1
4	9881005	2
5	9981670	5
6	9947099	3
7	10120309	10
8	9991305	6
9	10040184	7


-- !query 37
select first_value(max(x)) over (), y
  from (select unique1 as x, ten+four as y from tenk1) ss
  group by y
-- !query 37 schema
struct<first(max(x), false) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,y:int>
-- !query 37 output
9980	0
9980	10
9980	12
9980	2
9980	4
9980	6
9980	8


-- !query 38
SELECT four, ten,
sum(ten) over (partition by four order by ten),
last_value(ten) over (partition by four order by ten)
FROM (select distinct ten, four from tenk1) ss
-- !query 38 schema
struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 38 output
0	0	0	0
0	2	2	2
0	4	6	4
0	6	12	6
0	8	20	8
1	1	1	1
1	3	4	3
1	5	9	5
1	7	16	7
1	9	25	9
2	0	0	0
2	2	2	2
2	4	6	4
2	6	12	6
2	8	20	8
3	1	1	1
3	3	4	3
3	5	9	5
3	7	16	7
3	9	25	9


-- !query 39
SELECT four, ten,
sum(ten) over (partition by four order by ten range between unbounded preceding and current row),
last_value(ten) over (partition by four order by ten range between unbounded preceding and current row)
FROM (select distinct ten, four from tenk1) ss
-- !query 39 schema
struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 39 output
0	0	0	0
0	2	2	2
0	4	6	4
0	6	12	6
0	8	20	8
1	1	1	1
1	3	4	3
1	5	9	5
1	7	16	7
1	9	25	9
2	0	0	0
2	2	2	2
2	4	6	4
2	6	12	6
2	8	20	8
3	1	1	1
3	3	4	3
3	5	9	5
3	7	16	7
3	9	25	9


-- !query 40
SELECT four, ten,
sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),
last_value(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)
FROM (select distinct ten, four from tenk1) ss
-- !query 40 schema
struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>
-- !query 40 output
0	0	20	8
0	2	20	8
0	4	20	8
0	6	20	8
0	8	20	8
1	1	25	9
1	3	25	9
1	5	25	9
1	7	25	9
1	9	25	9
2	0	20	8
2	2	20	8
2	4	20	8
2	6	20	8
2	8	20	8
3	1	25	9
3	3	25	9
3	5	25	9
3	7	25	9
3	9	25	9


-- !query 41
SELECT four, ten/4 as two,
sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),
last_value(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)
FROM (select distinct ten, four from tenk1) ss
-- !query 41 schema
struct<four:int,two:double,sum((CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE))) OVER (PARTITION BY four ORDER BY (CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,last((CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)), false) OVER (PARTITION BY four ORDER BY (CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>
-- !query 41 output
0	0.0	0.0	0.0
0	0.5	0.5	0.5
0	1.0	1.5	1.0
0	1.5	3.0	1.5
0	2.0	5.0	2.0
1	0.25	0.25	0.25
1	0.75	1.0	0.75
1	1.25	2.25	1.25
1	1.75	4.0	1.75
1	2.25	6.25	2.25
2	0.0	0.0	0.0
2	0.5	0.5	0.5
2	1.0	1.5	1.0
2	1.5	3.0	1.5
2	2.0	5.0	2.0
3	0.25	0.25	0.25
3	0.75	1.0	0.75
3	1.25	2.25	1.25
3	1.75	4.0	1.75
3	2.25	6.25	2.25


-- !query 42
SELECT four, ten/4 as two,
sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),
last_value(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)
FROM (select distinct ten, four from tenk1) ss
-- !query 42 schema
struct<four:int,two:double,sum((CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE))) OVER (PARTITION BY four ORDER BY (CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,last((CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)), false) OVER (PARTITION BY four ORDER BY (CAST(ten AS DOUBLE) / CAST(4 AS DOUBLE)) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>
-- !query 42 output
0	0.0	0.0	0.0
0	0.5	0.5	0.5
0	1.0	1.5	1.0
0	1.5	3.0	1.5
0	2.0	5.0	2.0
1	0.25	0.25	0.25
1	0.75	1.0	0.75
1	1.25	2.25	1.25
1	1.75	4.0	1.75
1	2.25	6.25	2.25
2	0.0	0.0	0.0
2	0.5	0.5	0.5
2	1.0	1.5	1.0
2	1.5	3.0	1.5
2	2.0	5.0	2.0
3	0.25	0.25	0.25
3	0.75	1.0	0.75
3	1.25	2.25	1.25
3	1.75	4.0	1.75
3	2.25	6.25	2.25


-- !query 43
SELECT sum(unique1) over (order by four range between current row and unbounded following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 43 schema
struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>
-- !query 43 output
10	3	3
10	7	3
18	2	2
18	6	2
33	1	1
33	5	1
33	9	1
45	0	0
45	4	0
45	8	0


-- !query 44
SELECT sum(unique1) over (rows between current row and unbounded following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 44 schema
struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>
-- !query 44 output
0	0	0
10	3	3
15	5	1
23	8	0
32	9	1
38	6	2
39	1	1
41	2	2
45	4	0
7	7	3


-- !query 45
SELECT sum(unique1) over (rows between 2 preceding and 2 following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 45 schema
struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>
-- !query 45 output
10	0	0
13	2	2
15	7	3
22	1	1
23	3	3
26	6	2
29	9	1
31	8	0
32	5	1
7	4	0


-- !query 46
select x.id, last_value(x.id) over (order by x.id desc range between current row and 2147450885 following)
from range(-32766, -32764) x
-- !query 46 schema
struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>
-- !query 46 output
-32765	-32766
-32766	-32766


-- !query 47
select x.id, last_value(x.id) over (order by x.id range between current row and 4 following)
from range(2147483644, 2147483646) x
-- !query 47 schema
struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>
-- !query 47 output
2147483644	2147483645
2147483645	2147483645


-- !query 48
select x.id, last_value(x.id) over (order by x.id desc range between current row and 5 following)
from range(-2147483646, -2147483644) x
-- !query 48 schema
struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>
-- !query 48 output
-2147483645	-2147483646
-2147483646	-2147483646


-- !query 49
select x.id, last_value(x.id) over (order by x.id range between current row and 4 following)
from range(9223372036854775804, 9223372036854775806) x
-- !query 49 schema
struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>
-- !query 49 output
9223372036854775804	NULL
9223372036854775805	NULL


-- !query 50
select x.id, last_value(x.id) over (order by x.id desc range between current row and 5 following)
from range(-9223372036854775806, -9223372036854775804) x
-- !query 50 schema
struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>
-- !query 50 output
-9223372036854775805	NULL
-9223372036854775806	NULL


-- !query 51
SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0
-- !query 51 schema
struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 51 output



-- !query 52
create table t1 (f1 int, f2 int) using parquet
-- !query 52 schema
struct<>
-- !query 52 output



-- !query 53
insert into t1 values (1,1),(1,2),(2,2)
-- !query 53 schema
struct<>
-- !query 53 output



-- !query 54
SELECT rank() OVER (ORDER BY length('abc'))
-- !query 54 schema
struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 54 output
1


-- !query 55
SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 55 schema
struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 55 output
1	1.5
2	2.0
3	NULL
4	NULL


-- !query 56
SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 56 schema
struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 56 output
1	1.5
2	2.0
3	NULL
4	NULL


-- !query 57
SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 57 schema
struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 57 output
1	1.5
2	2.0
3	NULL
4	NULL


-- !query 58
SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)
-- !query 58 schema
struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>
-- !query 58 output
1	2
2	2.5
3	NULL
4	NULL


-- !query 59
SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)
-- !query 59 schema
struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 59 output
1	NULL
2	NULL
3	NULL
4	NULL


-- !query 60
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 60 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>
-- !query 60 output
1	3
2	2
3	NULL
4	NULL


-- !query 61
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 61 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>
-- !query 61 output
1	3
2	2
3	NULL
4	NULL


-- !query 62
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 62 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>
-- !query 62 output
1	3
2	2
3	NULL
4	NULL


-- !query 63
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)
-- !query 63 schema
struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 63 output
1	3.3000000000000003
2	2.2
3	NULL
4	NULL


-- !query 64
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)
-- !query 64 schema
struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 64 output
1	NULL
2	NULL
3	NULL
4	NULL


-- !query 65
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)
-- !query 65 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>
-- !query 65 output
1	3.3
2	2.2
3	NULL
4	NULL


-- !query 66
SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)
-- !query 66 schema
struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>
-- !query 66 output
3
5
6.01


-- !query 67
SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 67 schema
struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>
-- !query 67 output
1	2
2	1
3	0
4	0


-- !query 68
SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 68 schema
struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>
-- !query 68 output
1	4
2	3
3	2
4	1


-- !query 69
SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 69 schema
struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 69 output
0.0
11266.666666666666
13868.750000000002
21703.999999999996
4225.0


-- !query 70
SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 70 schema
struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 70 output
0.0
11266.666666666666
13868.750000000002
21703.999999999996
4225.0


-- !query 71
SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 71 schema
struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 71 output
0.0
11266.666666666666
13868.750000000002
21703.999999999996
4225.0


-- !query 72
SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 72 schema
struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 72 output
0.0
11266.666666666666
13868.750000000002
21703.999999999996
4225.0


-- !query 73
SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 73 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 73 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 74
SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 74 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 74 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 75
SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 75 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 75 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 76
SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 76 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 76 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 77
SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 77 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 77 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 78
SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 78 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 78 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 79
SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 79 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 79 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 80
SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 80 schema
struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 80 output
16900.0
18491.666666666668
27129.999999999996
8450.0
NaN


-- !query 81
SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 81 schema
struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 81 output
0.0
106.14455552060438
117.76565713313879
147.32277488562315
147.32277488562315
65.0


-- !query 82
SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 82 schema
struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 82 output
0.0
106.14455552060438
117.76565713313879
147.32277488562315
147.32277488562315
65.0


-- !query 83
SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 83 schema
struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 83 output
0.0
106.14455552060438
117.76565713313879
147.32277488562315
147.32277488562315
65.0


-- !query 84
SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 84 schema
struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 84 output
0.0
106.14455552060438
117.76565713313879
147.32277488562315
147.32277488562315
65.0


-- !query 85
SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 85 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 85 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 86
SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 86 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 86 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 87
SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 87 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 87 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 88
SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)
-- !query 88 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 88 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 89
SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 89 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 89 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 90
SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 90 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 90 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 91
SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 91 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 91 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 92
SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)
-- !query 92 schema
struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>
-- !query 92 output
130.0
135.9840676942217
164.7118696390761
164.7118696390761
91.92388155425118
NaN


-- !query 93
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND CURRENT ROW)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 93 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND CURRENT ROW):bigint>
-- !query 93 output
1	1
2	2
3	NULL
4	NULL


-- !query 94
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)
-- !query 94 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING):bigint>
-- !query 94 output
1	3
2	2
3	NULL
4	NULL


-- !query 95
SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)
  FROM (VALUES(1,1),(2,2),(3,3),(4,4)) t(i,v)
-- !query 95 schema
struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>
-- !query 95 output
1	3
2	6
3	9
4	7


-- !query 96
drop table empsalary
-- !query 96 schema
struct<>
-- !query 96 output



-- !query 97
drop table t1
-- !query 97 schema
struct<>
-- !query 97 output



-- !query 98
drop view int4_tbl
-- !query 98 schema
struct<>
-- !query 98 output

